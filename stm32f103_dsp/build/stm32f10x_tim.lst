ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f10x_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TI1_Config,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	TI1_Config:
  25              	.LFB116:
  26              		.file 1 ".//FWLIB/src/stm32f10x_tim.c"
   1:.//FWLIB/src/stm32f10x_tim.c **** /**
   2:.//FWLIB/src/stm32f10x_tim.c ****   ******************************************************************************
   3:.//FWLIB/src/stm32f10x_tim.c ****   * @file    stm32f10x_tim.c
   4:.//FWLIB/src/stm32f10x_tim.c ****   * @author  MCD Application Team
   5:.//FWLIB/src/stm32f10x_tim.c ****   * @version V3.5.0
   6:.//FWLIB/src/stm32f10x_tim.c ****   * @date    11-March-2011
   7:.//FWLIB/src/stm32f10x_tim.c ****   * @brief   This file provides all the TIM firmware functions.
   8:.//FWLIB/src/stm32f10x_tim.c ****   ******************************************************************************
   9:.//FWLIB/src/stm32f10x_tim.c ****   * @attention
  10:.//FWLIB/src/stm32f10x_tim.c ****   *
  11:.//FWLIB/src/stm32f10x_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:.//FWLIB/src/stm32f10x_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:.//FWLIB/src/stm32f10x_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:.//FWLIB/src/stm32f10x_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:.//FWLIB/src/stm32f10x_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:.//FWLIB/src/stm32f10x_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:.//FWLIB/src/stm32f10x_tim.c ****   *
  18:.//FWLIB/src/stm32f10x_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:.//FWLIB/src/stm32f10x_tim.c ****   ******************************************************************************
  20:.//FWLIB/src/stm32f10x_tim.c ****   */
  21:.//FWLIB/src/stm32f10x_tim.c **** 
  22:.//FWLIB/src/stm32f10x_tim.c **** /* Includes ------------------------------------------------------------------*/
  23:.//FWLIB/src/stm32f10x_tim.c **** #include "stm32f10x_tim.h"
  24:.//FWLIB/src/stm32f10x_tim.c **** #include "stm32f10x_rcc.h"
  25:.//FWLIB/src/stm32f10x_tim.c **** 
  26:.//FWLIB/src/stm32f10x_tim.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:.//FWLIB/src/stm32f10x_tim.c ****   * @{
  28:.//FWLIB/src/stm32f10x_tim.c ****   */
  29:.//FWLIB/src/stm32f10x_tim.c **** 
  30:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM 
  31:.//FWLIB/src/stm32f10x_tim.c ****   * @brief TIM driver modules
  32:.//FWLIB/src/stm32f10x_tim.c ****   * @{
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 2


  33:.//FWLIB/src/stm32f10x_tim.c ****   */
  34:.//FWLIB/src/stm32f10x_tim.c **** 
  35:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_TypesDefinitions
  36:.//FWLIB/src/stm32f10x_tim.c ****   * @{
  37:.//FWLIB/src/stm32f10x_tim.c ****   */
  38:.//FWLIB/src/stm32f10x_tim.c **** 
  39:.//FWLIB/src/stm32f10x_tim.c **** /**
  40:.//FWLIB/src/stm32f10x_tim.c ****   * @}
  41:.//FWLIB/src/stm32f10x_tim.c ****   */
  42:.//FWLIB/src/stm32f10x_tim.c **** 
  43:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Defines
  44:.//FWLIB/src/stm32f10x_tim.c ****   * @{
  45:.//FWLIB/src/stm32f10x_tim.c ****   */
  46:.//FWLIB/src/stm32f10x_tim.c **** 
  47:.//FWLIB/src/stm32f10x_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
  48:.//FWLIB/src/stm32f10x_tim.c **** #define SMCR_ETR_Mask               ((uint16_t)0x00FF) 
  49:.//FWLIB/src/stm32f10x_tim.c **** #define CCMR_Offset                 ((uint16_t)0x0018)
  50:.//FWLIB/src/stm32f10x_tim.c **** #define CCER_CCE_Set                ((uint16_t)0x0001)  
  51:.//FWLIB/src/stm32f10x_tim.c **** #define	CCER_CCNE_Set               ((uint16_t)0x0004) 
  52:.//FWLIB/src/stm32f10x_tim.c **** 
  53:.//FWLIB/src/stm32f10x_tim.c **** /**
  54:.//FWLIB/src/stm32f10x_tim.c ****   * @}
  55:.//FWLIB/src/stm32f10x_tim.c ****   */
  56:.//FWLIB/src/stm32f10x_tim.c **** 
  57:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  58:.//FWLIB/src/stm32f10x_tim.c ****   * @{
  59:.//FWLIB/src/stm32f10x_tim.c ****   */
  60:.//FWLIB/src/stm32f10x_tim.c **** 
  61:.//FWLIB/src/stm32f10x_tim.c **** /**
  62:.//FWLIB/src/stm32f10x_tim.c ****   * @}
  63:.//FWLIB/src/stm32f10x_tim.c ****   */
  64:.//FWLIB/src/stm32f10x_tim.c **** 
  65:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  66:.//FWLIB/src/stm32f10x_tim.c ****   * @{
  67:.//FWLIB/src/stm32f10x_tim.c ****   */
  68:.//FWLIB/src/stm32f10x_tim.c **** 
  69:.//FWLIB/src/stm32f10x_tim.c **** /**
  70:.//FWLIB/src/stm32f10x_tim.c ****   * @}
  71:.//FWLIB/src/stm32f10x_tim.c ****   */
  72:.//FWLIB/src/stm32f10x_tim.c **** 
  73:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
  74:.//FWLIB/src/stm32f10x_tim.c ****   * @{
  75:.//FWLIB/src/stm32f10x_tim.c ****   */
  76:.//FWLIB/src/stm32f10x_tim.c **** 
  77:.//FWLIB/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  78:.//FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  79:.//FWLIB/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  80:.//FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  81:.//FWLIB/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  82:.//FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  83:.//FWLIB/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  84:.//FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  85:.//FWLIB/src/stm32f10x_tim.c **** /**
  86:.//FWLIB/src/stm32f10x_tim.c ****   * @}
  87:.//FWLIB/src/stm32f10x_tim.c ****   */
  88:.//FWLIB/src/stm32f10x_tim.c **** 
  89:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 3


  90:.//FWLIB/src/stm32f10x_tim.c ****   * @{
  91:.//FWLIB/src/stm32f10x_tim.c ****   */
  92:.//FWLIB/src/stm32f10x_tim.c **** 
  93:.//FWLIB/src/stm32f10x_tim.c **** /**
  94:.//FWLIB/src/stm32f10x_tim.c ****   * @}
  95:.//FWLIB/src/stm32f10x_tim.c ****   */
  96:.//FWLIB/src/stm32f10x_tim.c **** 
  97:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  98:.//FWLIB/src/stm32f10x_tim.c ****   * @{
  99:.//FWLIB/src/stm32f10x_tim.c ****   */
 100:.//FWLIB/src/stm32f10x_tim.c **** 
 101:.//FWLIB/src/stm32f10x_tim.c **** /**
 102:.//FWLIB/src/stm32f10x_tim.c ****   * @}
 103:.//FWLIB/src/stm32f10x_tim.c ****   */
 104:.//FWLIB/src/stm32f10x_tim.c **** 
 105:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
 106:.//FWLIB/src/stm32f10x_tim.c ****   * @{
 107:.//FWLIB/src/stm32f10x_tim.c ****   */
 108:.//FWLIB/src/stm32f10x_tim.c **** 
 109:.//FWLIB/src/stm32f10x_tim.c **** /**
 110:.//FWLIB/src/stm32f10x_tim.c ****   * @}
 111:.//FWLIB/src/stm32f10x_tim.c ****   */
 112:.//FWLIB/src/stm32f10x_tim.c **** 
 113:.//FWLIB/src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Functions
 114:.//FWLIB/src/stm32f10x_tim.c ****   * @{
 115:.//FWLIB/src/stm32f10x_tim.c ****   */
 116:.//FWLIB/src/stm32f10x_tim.c **** 
 117:.//FWLIB/src/stm32f10x_tim.c **** /**
 118:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 119:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 120:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 121:.//FWLIB/src/stm32f10x_tim.c ****   */
 122:.//FWLIB/src/stm32f10x_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 123:.//FWLIB/src/stm32f10x_tim.c **** {
 124:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 125:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 126:.//FWLIB/src/stm32f10x_tim.c ****  
 127:.//FWLIB/src/stm32f10x_tim.c ****   if (TIMx == TIM1)
 128:.//FWLIB/src/stm32f10x_tim.c ****   {
 129:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 130:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 131:.//FWLIB/src/stm32f10x_tim.c ****   }     
 132:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM2)
 133:.//FWLIB/src/stm32f10x_tim.c ****   {
 134:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 135:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 136:.//FWLIB/src/stm32f10x_tim.c ****   }
 137:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM3)
 138:.//FWLIB/src/stm32f10x_tim.c ****   {
 139:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 140:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 141:.//FWLIB/src/stm32f10x_tim.c ****   }
 142:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM4)
 143:.//FWLIB/src/stm32f10x_tim.c ****   {
 144:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 145:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 146:.//FWLIB/src/stm32f10x_tim.c ****   } 
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 4


 147:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM5)
 148:.//FWLIB/src/stm32f10x_tim.c ****   {
 149:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 150:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 151:.//FWLIB/src/stm32f10x_tim.c ****   } 
 152:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM6)
 153:.//FWLIB/src/stm32f10x_tim.c ****   {
 154:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 155:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 156:.//FWLIB/src/stm32f10x_tim.c ****   } 
 157:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM7)
 158:.//FWLIB/src/stm32f10x_tim.c ****   {
 159:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 160:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 161:.//FWLIB/src/stm32f10x_tim.c ****   } 
 162:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM8)
 163:.//FWLIB/src/stm32f10x_tim.c ****   {
 164:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 165:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 166:.//FWLIB/src/stm32f10x_tim.c ****   }
 167:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM9)
 168:.//FWLIB/src/stm32f10x_tim.c ****   {      
 169:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 170:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 171:.//FWLIB/src/stm32f10x_tim.c ****    }  
 172:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM10)
 173:.//FWLIB/src/stm32f10x_tim.c ****   {      
 174:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 175:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 176:.//FWLIB/src/stm32f10x_tim.c ****   }  
 177:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM11) 
 178:.//FWLIB/src/stm32f10x_tim.c ****   {     
 179:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 180:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 181:.//FWLIB/src/stm32f10x_tim.c ****   }  
 182:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM12)
 183:.//FWLIB/src/stm32f10x_tim.c ****   {      
 184:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 185:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 186:.//FWLIB/src/stm32f10x_tim.c ****   }  
 187:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM13) 
 188:.//FWLIB/src/stm32f10x_tim.c ****   {       
 189:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 190:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 191:.//FWLIB/src/stm32f10x_tim.c ****   }
 192:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM14) 
 193:.//FWLIB/src/stm32f10x_tim.c ****   {       
 194:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 195:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 196:.//FWLIB/src/stm32f10x_tim.c ****   }        
 197:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM15)
 198:.//FWLIB/src/stm32f10x_tim.c ****   {
 199:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 200:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 201:.//FWLIB/src/stm32f10x_tim.c ****   } 
 202:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIMx == TIM16)
 203:.//FWLIB/src/stm32f10x_tim.c ****   {
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 5


 204:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 205:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 206:.//FWLIB/src/stm32f10x_tim.c ****   } 
 207:.//FWLIB/src/stm32f10x_tim.c ****   else
 208:.//FWLIB/src/stm32f10x_tim.c ****   {
 209:.//FWLIB/src/stm32f10x_tim.c ****     if (TIMx == TIM17)
 210:.//FWLIB/src/stm32f10x_tim.c ****     {
 211:.//FWLIB/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 212:.//FWLIB/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 213:.//FWLIB/src/stm32f10x_tim.c ****     }  
 214:.//FWLIB/src/stm32f10x_tim.c ****   }
 215:.//FWLIB/src/stm32f10x_tim.c **** }
 216:.//FWLIB/src/stm32f10x_tim.c **** 
 217:.//FWLIB/src/stm32f10x_tim.c **** /**
 218:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 219:.//FWLIB/src/stm32f10x_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 220:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 221:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef
 222:.//FWLIB/src/stm32f10x_tim.c ****   *         structure that contains the configuration information for the 
 223:.//FWLIB/src/stm32f10x_tim.c ****   *         specified TIM peripheral.
 224:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 225:.//FWLIB/src/stm32f10x_tim.c ****   */
 226:.//FWLIB/src/stm32f10x_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 227:.//FWLIB/src/stm32f10x_tim.c **** {
 228:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 229:.//FWLIB/src/stm32f10x_tim.c **** 
 230:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 231:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 232:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 233:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 234:.//FWLIB/src/stm32f10x_tim.c **** 
 235:.//FWLIB/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;  
 236:.//FWLIB/src/stm32f10x_tim.c **** 
 237:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 238:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 239:.//FWLIB/src/stm32f10x_tim.c ****   {
 240:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Counter Mode */
 241:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 242:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 243:.//FWLIB/src/stm32f10x_tim.c ****   }
 244:.//FWLIB/src/stm32f10x_tim.c ****  
 245:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 246:.//FWLIB/src/stm32f10x_tim.c ****   {
 247:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the clock division */
 248:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 249:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 250:.//FWLIB/src/stm32f10x_tim.c ****   }
 251:.//FWLIB/src/stm32f10x_tim.c **** 
 252:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 253:.//FWLIB/src/stm32f10x_tim.c **** 
 254:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Autoreload value */
 255:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 256:.//FWLIB/src/stm32f10x_tim.c ****  
 257:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
 258:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 259:.//FWLIB/src/stm32f10x_tim.c ****     
 260:.//FWLIB/src/stm32f10x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 6


 261:.//FWLIB/src/stm32f10x_tim.c ****   {
 262:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Repetition Counter value */
 263:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 264:.//FWLIB/src/stm32f10x_tim.c ****   }
 265:.//FWLIB/src/stm32f10x_tim.c **** 
 266:.//FWLIB/src/stm32f10x_tim.c ****   /* Generate an update event to reload the Prescaler and the Repetition counter
 267:.//FWLIB/src/stm32f10x_tim.c ****      values immediately */
 268:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 269:.//FWLIB/src/stm32f10x_tim.c **** }
 270:.//FWLIB/src/stm32f10x_tim.c **** 
 271:.//FWLIB/src/stm32f10x_tim.c **** /**
 272:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified
 273:.//FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 274:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 275:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 276:.//FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 277:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 278:.//FWLIB/src/stm32f10x_tim.c ****   */
 279:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 280:.//FWLIB/src/stm32f10x_tim.c **** {
 281:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 282:.//FWLIB/src/stm32f10x_tim.c ****    
 283:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 284:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 285:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 286:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 287:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 288:.//FWLIB/src/stm32f10x_tim.c ****  /* Disable the Channel 1: Reset the CC1E Bit */
 289:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~(uint16_t)TIM_CCER_CC1E);
 290:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 291:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 292:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 293:.//FWLIB/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 294:.//FWLIB/src/stm32f10x_tim.c ****   
 295:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 296:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 297:.//FWLIB/src/stm32f10x_tim.c ****     
 298:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Compare Mode Bits */
 299:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC1M));
 300:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 301:.//FWLIB/src/stm32f10x_tim.c **** 
 302:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 303:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 304:.//FWLIB/src/stm32f10x_tim.c ****   
 305:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 306:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1P));
 307:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 308:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 309:.//FWLIB/src/stm32f10x_tim.c ****   
 310:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output State */
 311:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 312:.//FWLIB/src/stm32f10x_tim.c ****     
 313:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)||
 314:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 315:.//FWLIB/src/stm32f10x_tim.c ****   {
 316:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 317:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 7


 318:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 319:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 320:.//FWLIB/src/stm32f10x_tim.c ****     
 321:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 322:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NP));
 323:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 324:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 325:.//FWLIB/src/stm32f10x_tim.c ****     
 326:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 327:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NE));    
 328:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 329:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 330:.//FWLIB/src/stm32f10x_tim.c ****     
 331:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 332:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1));
 333:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 334:.//FWLIB/src/stm32f10x_tim.c ****     
 335:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 336:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 337:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 338:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 339:.//FWLIB/src/stm32f10x_tim.c ****   }
 340:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 341:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 342:.//FWLIB/src/stm32f10x_tim.c ****   
 343:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 344:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 345:.//FWLIB/src/stm32f10x_tim.c **** 
 346:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 347:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse; 
 348:.//FWLIB/src/stm32f10x_tim.c ****  
 349:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 350:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 351:.//FWLIB/src/stm32f10x_tim.c **** }
 352:.//FWLIB/src/stm32f10x_tim.c **** 
 353:.//FWLIB/src/stm32f10x_tim.c **** /**
 354:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified
 355:.//FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 356:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
 357:.//FWLIB/src/stm32f10x_tim.c ****   *         the TIM peripheral.
 358:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 359:.//FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 360:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 361:.//FWLIB/src/stm32f10x_tim.c ****   */
 362:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 363:.//FWLIB/src/stm32f10x_tim.c **** {
 364:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 365:.//FWLIB/src/stm32f10x_tim.c ****    
 366:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 367:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 368:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 369:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 370:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 371:.//FWLIB/src/stm32f10x_tim.c ****    /* Disable the Channel 2: Reset the CC2E Bit */
 372:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC2E));
 373:.//FWLIB/src/stm32f10x_tim.c ****   
 374:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */  
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 8


 375:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 376:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 377:.//FWLIB/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 378:.//FWLIB/src/stm32f10x_tim.c ****   
 379:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 380:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 381:.//FWLIB/src/stm32f10x_tim.c ****     
 382:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 383:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC2M));
 384:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 385:.//FWLIB/src/stm32f10x_tim.c ****   
 386:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 387:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 388:.//FWLIB/src/stm32f10x_tim.c ****   
 389:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 390:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2P));
 391:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 392:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 393:.//FWLIB/src/stm32f10x_tim.c ****   
 394:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output State */
 395:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 396:.//FWLIB/src/stm32f10x_tim.c ****     
 397:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 398:.//FWLIB/src/stm32f10x_tim.c ****   {
 399:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 400:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 401:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 402:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 403:.//FWLIB/src/stm32f10x_tim.c ****     
 404:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 405:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NP));
 406:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 407:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 408:.//FWLIB/src/stm32f10x_tim.c ****     
 409:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 410:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NE));    
 411:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 412:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 413:.//FWLIB/src/stm32f10x_tim.c ****     
 414:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 415:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2));
 416:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 417:.//FWLIB/src/stm32f10x_tim.c ****     
 418:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 419:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 420:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 421:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 422:.//FWLIB/src/stm32f10x_tim.c ****   }
 423:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 424:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 425:.//FWLIB/src/stm32f10x_tim.c ****   
 426:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 427:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 428:.//FWLIB/src/stm32f10x_tim.c **** 
 429:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 430:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 431:.//FWLIB/src/stm32f10x_tim.c ****   
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 9


 432:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 433:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 434:.//FWLIB/src/stm32f10x_tim.c **** }
 435:.//FWLIB/src/stm32f10x_tim.c **** 
 436:.//FWLIB/src/stm32f10x_tim.c **** /**
 437:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified
 438:.//FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 439:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 440:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 441:.//FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 442:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 443:.//FWLIB/src/stm32f10x_tim.c ****   */
 444:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 445:.//FWLIB/src/stm32f10x_tim.c **** {
 446:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 447:.//FWLIB/src/stm32f10x_tim.c ****    
 448:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 449:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 450:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 451:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 452:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 453:.//FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 454:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC3E));
 455:.//FWLIB/src/stm32f10x_tim.c ****   
 456:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 457:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 458:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 459:.//FWLIB/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 460:.//FWLIB/src/stm32f10x_tim.c ****   
 461:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 462:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 463:.//FWLIB/src/stm32f10x_tim.c ****     
 464:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 465:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC3M));
 466:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 467:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 468:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 469:.//FWLIB/src/stm32f10x_tim.c ****   
 470:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 471:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3P));
 472:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 473:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 474:.//FWLIB/src/stm32f10x_tim.c ****   
 475:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output State */
 476:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 477:.//FWLIB/src/stm32f10x_tim.c ****     
 478:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 479:.//FWLIB/src/stm32f10x_tim.c ****   {
 480:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 481:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 482:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 483:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 484:.//FWLIB/src/stm32f10x_tim.c ****     
 485:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 486:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NP));
 487:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 488:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 10


 489:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 490:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NE));
 491:.//FWLIB/src/stm32f10x_tim.c ****     
 492:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 493:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 494:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 495:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3));
 496:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 497:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 498:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 499:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 500:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 501:.//FWLIB/src/stm32f10x_tim.c ****   }
 502:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 503:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 504:.//FWLIB/src/stm32f10x_tim.c ****   
 505:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 506:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 507:.//FWLIB/src/stm32f10x_tim.c **** 
 508:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 509:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 510:.//FWLIB/src/stm32f10x_tim.c ****   
 511:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 512:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 513:.//FWLIB/src/stm32f10x_tim.c **** }
 514:.//FWLIB/src/stm32f10x_tim.c **** 
 515:.//FWLIB/src/stm32f10x_tim.c **** /**
 516:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified
 517:.//FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 518:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 519:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 520:.//FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 521:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 522:.//FWLIB/src/stm32f10x_tim.c ****   */
 523:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 524:.//FWLIB/src/stm32f10x_tim.c **** {
 525:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 526:.//FWLIB/src/stm32f10x_tim.c ****    
 527:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 528:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 529:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 530:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 531:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 532:.//FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC4E Bit */
 533:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC4E));
 534:.//FWLIB/src/stm32f10x_tim.c ****   
 535:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 536:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 537:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 538:.//FWLIB/src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 539:.//FWLIB/src/stm32f10x_tim.c ****   
 540:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 541:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 542:.//FWLIB/src/stm32f10x_tim.c ****     
 543:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 544:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC4M));
 545:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 11


 546:.//FWLIB/src/stm32f10x_tim.c ****   
 547:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 548:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 549:.//FWLIB/src/stm32f10x_tim.c ****   
 550:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 551:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC4P));
 552:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 553:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 554:.//FWLIB/src/stm32f10x_tim.c ****   
 555:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output State */
 556:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 557:.//FWLIB/src/stm32f10x_tim.c ****     
 558:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 559:.//FWLIB/src/stm32f10x_tim.c ****   {
 560:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 561:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare IDLE State */
 562:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS4));
 563:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 564:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 565:.//FWLIB/src/stm32f10x_tim.c ****   }
 566:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 567:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 568:.//FWLIB/src/stm32f10x_tim.c ****   
 569:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */  
 570:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 571:.//FWLIB/src/stm32f10x_tim.c **** 
 572:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 573:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 574:.//FWLIB/src/stm32f10x_tim.c ****   
 575:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 576:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 577:.//FWLIB/src/stm32f10x_tim.c **** }
 578:.//FWLIB/src/stm32f10x_tim.c **** 
 579:.//FWLIB/src/stm32f10x_tim.c **** /**
 580:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified
 581:.//FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct.
 582:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 583:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 584:.//FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 585:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 586:.//FWLIB/src/stm32f10x_tim.c ****   */
 587:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 588:.//FWLIB/src/stm32f10x_tim.c **** {
 589:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 590:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_ICInitStruct->TIM_Channel));  
 591:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
 592:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
 593:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
 594:.//FWLIB/src/stm32f10x_tim.c ****   
 595:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 596:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 597:.//FWLIB/src/stm32f10x_tim.c ****   {
 598:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
 599:.//FWLIB/src/stm32f10x_tim.c ****   }
 600:.//FWLIB/src/stm32f10x_tim.c ****   else
 601:.//FWLIB/src/stm32f10x_tim.c ****   {
 602:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY_LITE(TIM_ICInitStruct->TIM_ICPolarity));
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 12


 603:.//FWLIB/src/stm32f10x_tim.c ****   }
 604:.//FWLIB/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 605:.//FWLIB/src/stm32f10x_tim.c ****   {
 606:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 607:.//FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 608:.//FWLIB/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 609:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 610:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 611:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 612:.//FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 613:.//FWLIB/src/stm32f10x_tim.c ****   }
 614:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 615:.//FWLIB/src/stm32f10x_tim.c ****   {
 616:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 617:.//FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 618:.//FWLIB/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 619:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 620:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 621:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 622:.//FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 623:.//FWLIB/src/stm32f10x_tim.c ****   }
 624:.//FWLIB/src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 625:.//FWLIB/src/stm32f10x_tim.c ****   {
 626:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 627:.//FWLIB/src/stm32f10x_tim.c ****     /* TI3 Configuration */
 628:.//FWLIB/src/stm32f10x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 629:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 630:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 631:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 632:.//FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 633:.//FWLIB/src/stm32f10x_tim.c ****   }
 634:.//FWLIB/src/stm32f10x_tim.c ****   else
 635:.//FWLIB/src/stm32f10x_tim.c ****   {
 636:.//FWLIB/src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 637:.//FWLIB/src/stm32f10x_tim.c ****     /* TI4 Configuration */
 638:.//FWLIB/src/stm32f10x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 639:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 640:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 641:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 642:.//FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 643:.//FWLIB/src/stm32f10x_tim.c ****   }
 644:.//FWLIB/src/stm32f10x_tim.c **** }
 645:.//FWLIB/src/stm32f10x_tim.c **** 
 646:.//FWLIB/src/stm32f10x_tim.c **** /**
 647:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIM peripheral according to the specified
 648:.//FWLIB/src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct to measure an external PWM signal.
 649:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
 650:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 651:.//FWLIB/src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 652:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 653:.//FWLIB/src/stm32f10x_tim.c ****   */
 654:.//FWLIB/src/stm32f10x_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 655:.//FWLIB/src/stm32f10x_tim.c **** {
 656:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 657:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 658:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 659:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 13


 660:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Opposite Input Polarity */
 661:.//FWLIB/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 662:.//FWLIB/src/stm32f10x_tim.c ****   {
 663:.//FWLIB/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 664:.//FWLIB/src/stm32f10x_tim.c ****   }
 665:.//FWLIB/src/stm32f10x_tim.c ****   else
 666:.//FWLIB/src/stm32f10x_tim.c ****   {
 667:.//FWLIB/src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 668:.//FWLIB/src/stm32f10x_tim.c ****   }
 669:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Opposite Input */
 670:.//FWLIB/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 671:.//FWLIB/src/stm32f10x_tim.c ****   {
 672:.//FWLIB/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 673:.//FWLIB/src/stm32f10x_tim.c ****   }
 674:.//FWLIB/src/stm32f10x_tim.c ****   else
 675:.//FWLIB/src/stm32f10x_tim.c ****   {
 676:.//FWLIB/src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 677:.//FWLIB/src/stm32f10x_tim.c ****   }
 678:.//FWLIB/src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 679:.//FWLIB/src/stm32f10x_tim.c ****   {
 680:.//FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 681:.//FWLIB/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 682:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 683:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 684:.//FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 685:.//FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 686:.//FWLIB/src/stm32f10x_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 687:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 688:.//FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 689:.//FWLIB/src/stm32f10x_tim.c ****   }
 690:.//FWLIB/src/stm32f10x_tim.c ****   else
 691:.//FWLIB/src/stm32f10x_tim.c ****   { 
 692:.//FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 693:.//FWLIB/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 694:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 695:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 696:.//FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 697:.//FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 698:.//FWLIB/src/stm32f10x_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 699:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 700:.//FWLIB/src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 701:.//FWLIB/src/stm32f10x_tim.c ****   }
 702:.//FWLIB/src/stm32f10x_tim.c **** }
 703:.//FWLIB/src/stm32f10x_tim.c **** 
 704:.//FWLIB/src/stm32f10x_tim.c **** /**
 705:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the: Break feature, dead time, Lock level, the OSSI,
 706:.//FWLIB/src/stm32f10x_tim.c ****   *         the OSSR State and the AOE(automatic output enable).
 707:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
 708:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
 709:.//FWLIB/src/stm32f10x_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
 710:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 711:.//FWLIB/src/stm32f10x_tim.c ****   */
 712:.//FWLIB/src/stm32f10x_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
 713:.//FWLIB/src/stm32f10x_tim.c **** {
 714:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 715:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 716:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 14


 717:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
 718:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
 719:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
 720:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
 721:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
 722:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
 723:.//FWLIB/src/stm32f10x_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
 724:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 725:.//FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 726:.//FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 727:.//FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 728:.//FWLIB/src/stm32f10x_tim.c **** }
 729:.//FWLIB/src/stm32f10x_tim.c **** 
 730:.//FWLIB/src/stm32f10x_tim.c **** /**
 731:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 732:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 733:.//FWLIB/src/stm32f10x_tim.c ****   *         structure which will be initialized.
 734:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 735:.//FWLIB/src/stm32f10x_tim.c ****   */
 736:.//FWLIB/src/stm32f10x_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 737:.//FWLIB/src/stm32f10x_tim.c **** {
 738:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 739:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFF;
 740:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 741:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 742:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 743:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 744:.//FWLIB/src/stm32f10x_tim.c **** }
 745:.//FWLIB/src/stm32f10x_tim.c **** 
 746:.//FWLIB/src/stm32f10x_tim.c **** /**
 747:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 748:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct : pointer to a TIM_OCInitTypeDef structure which will
 749:.//FWLIB/src/stm32f10x_tim.c ****   *         be initialized.
 750:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 751:.//FWLIB/src/stm32f10x_tim.c ****   */
 752:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 753:.//FWLIB/src/stm32f10x_tim.c **** {
 754:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 755:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 756:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 757:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 758:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 759:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 760:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 761:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 762:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 763:.//FWLIB/src/stm32f10x_tim.c **** }
 764:.//FWLIB/src/stm32f10x_tim.c **** 
 765:.//FWLIB/src/stm32f10x_tim.c **** /**
 766:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
 767:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
 768:.//FWLIB/src/stm32f10x_tim.c ****   *         be initialized.
 769:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 770:.//FWLIB/src/stm32f10x_tim.c ****   */
 771:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
 772:.//FWLIB/src/stm32f10x_tim.c **** {
 773:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 15


 774:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 775:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 776:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 777:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 778:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 779:.//FWLIB/src/stm32f10x_tim.c **** }
 780:.//FWLIB/src/stm32f10x_tim.c **** 
 781:.//FWLIB/src/stm32f10x_tim.c **** /**
 782:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
 783:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
 784:.//FWLIB/src/stm32f10x_tim.c ****   *         will be initialized.
 785:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 786:.//FWLIB/src/stm32f10x_tim.c ****   */
 787:.//FWLIB/src/stm32f10x_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
 788:.//FWLIB/src/stm32f10x_tim.c **** {
 789:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 790:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 791:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 792:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 793:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 794:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 795:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 796:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 797:.//FWLIB/src/stm32f10x_tim.c **** }
 798:.//FWLIB/src/stm32f10x_tim.c **** 
 799:.//FWLIB/src/stm32f10x_tim.c **** /**
 800:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 801:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 802:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 803:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 804:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 805:.//FWLIB/src/stm32f10x_tim.c ****   */
 806:.//FWLIB/src/stm32f10x_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 807:.//FWLIB/src/stm32f10x_tim.c **** {
 808:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 809:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 810:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 811:.//FWLIB/src/stm32f10x_tim.c ****   
 812:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 813:.//FWLIB/src/stm32f10x_tim.c ****   {
 814:.//FWLIB/src/stm32f10x_tim.c ****     /* Enable the TIM Counter */
 815:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 816:.//FWLIB/src/stm32f10x_tim.c ****   }
 817:.//FWLIB/src/stm32f10x_tim.c ****   else
 818:.//FWLIB/src/stm32f10x_tim.c ****   {
 819:.//FWLIB/src/stm32f10x_tim.c ****     /* Disable the TIM Counter */
 820:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 821:.//FWLIB/src/stm32f10x_tim.c ****   }
 822:.//FWLIB/src/stm32f10x_tim.c **** }
 823:.//FWLIB/src/stm32f10x_tim.c **** 
 824:.//FWLIB/src/stm32f10x_tim.c **** /**
 825:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
 826:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIMx peripheral.
 827:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
 828:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 829:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 830:.//FWLIB/src/stm32f10x_tim.c ****   */
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 16


 831:.//FWLIB/src/stm32f10x_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
 832:.//FWLIB/src/stm32f10x_tim.c **** {
 833:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 834:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 835:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 836:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 837:.//FWLIB/src/stm32f10x_tim.c ****   {
 838:.//FWLIB/src/stm32f10x_tim.c ****     /* Enable the TIM Main Output */
 839:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 840:.//FWLIB/src/stm32f10x_tim.c ****   }
 841:.//FWLIB/src/stm32f10x_tim.c ****   else
 842:.//FWLIB/src/stm32f10x_tim.c ****   {
 843:.//FWLIB/src/stm32f10x_tim.c ****     /* Disable the TIM Main Output */
 844:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->BDTR &= (uint16_t)(~((uint16_t)TIM_BDTR_MOE));
 845:.//FWLIB/src/stm32f10x_tim.c ****   }  
 846:.//FWLIB/src/stm32f10x_tim.c **** }
 847:.//FWLIB/src/stm32f10x_tim.c **** 
 848:.//FWLIB/src/stm32f10x_tim.c **** /**
 849:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
 850:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 851:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
 852:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 853:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
 854:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
 855:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
 856:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
 857:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
 858:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
 859:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
 860:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
 861:.//FWLIB/src/stm32f10x_tim.c ****   * @note 
 862:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update interrupt.
 863:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
 864:.//FWLIB/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
 865:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
 866:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
 867:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
 868:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM interrupts.
 869:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 870:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 871:.//FWLIB/src/stm32f10x_tim.c ****   */
 872:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
 873:.//FWLIB/src/stm32f10x_tim.c **** {  
 874:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 875:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 876:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 877:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 878:.//FWLIB/src/stm32f10x_tim.c ****   
 879:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 880:.//FWLIB/src/stm32f10x_tim.c ****   {
 881:.//FWLIB/src/stm32f10x_tim.c ****     /* Enable the Interrupt sources */
 882:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_IT;
 883:.//FWLIB/src/stm32f10x_tim.c ****   }
 884:.//FWLIB/src/stm32f10x_tim.c ****   else
 885:.//FWLIB/src/stm32f10x_tim.c ****   {
 886:.//FWLIB/src/stm32f10x_tim.c ****     /* Disable the Interrupt sources */
 887:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 17


 888:.//FWLIB/src/stm32f10x_tim.c ****   }
 889:.//FWLIB/src/stm32f10x_tim.c **** }
 890:.//FWLIB/src/stm32f10x_tim.c **** 
 891:.//FWLIB/src/stm32f10x_tim.c **** /**
 892:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
 893:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 894:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_EventSource: specifies the event source.
 895:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one or more of the following values:	   
 896:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Update: Timer update Event source
 897:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
 898:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
 899:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
 900:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
 901:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_COM: Timer COM event source  
 902:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Trigger: Timer Trigger Event source
 903:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Break: Timer Break event source
 904:.//FWLIB/src/stm32f10x_tim.c ****   * @note 
 905:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update event. 
 906:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.      
 907:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 908:.//FWLIB/src/stm32f10x_tim.c ****   */
 909:.//FWLIB/src/stm32f10x_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
 910:.//FWLIB/src/stm32f10x_tim.c **** { 
 911:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 912:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 913:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
 914:.//FWLIB/src/stm32f10x_tim.c ****   
 915:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the event sources */
 916:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_EventSource;
 917:.//FWLIB/src/stm32f10x_tim.c **** }
 918:.//FWLIB/src/stm32f10x_tim.c **** 
 919:.//FWLIB/src/stm32f10x_tim.c **** /**
 920:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx's DMA interface.
 921:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
 922:.//FWLIB/src/stm32f10x_tim.c ****   *   the TIM peripheral.
 923:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_DMABase: DMA Base address.
 924:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
 925:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMABase_CR, TIM_DMABase_CR2, TIM_DMABase_SMCR,
 926:.//FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_DIER, TIM1_DMABase_SR, TIM_DMABase_EGR,
 927:.//FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCMR1, TIM_DMABase_CCMR2, TIM_DMABase_CCER,
 928:.//FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_CNT, TIM_DMABase_PSC, TIM_DMABase_ARR,
 929:.//FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_RCR, TIM_DMABase_CCR1, TIM_DMABase_CCR2,
 930:.//FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_CCR3, TIM_DMABase_CCR4, TIM_DMABase_BDTR,
 931:.//FWLIB/src/stm32f10x_tim.c ****   *          TIM_DMABase_DCR.
 932:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length.
 933:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one value between:
 934:.//FWLIB/src/stm32f10x_tim.c ****   *   TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
 935:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 936:.//FWLIB/src/stm32f10x_tim.c ****   */
 937:.//FWLIB/src/stm32f10x_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
 938:.//FWLIB/src/stm32f10x_tim.c **** {
 939:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 940:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 941:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase));
 942:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
 943:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
 944:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 18


 945:.//FWLIB/src/stm32f10x_tim.c **** }
 946:.//FWLIB/src/stm32f10x_tim.c **** 
 947:.//FWLIB/src/stm32f10x_tim.c **** /**
 948:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
 949:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 6, 7, 8, 15, 16 or 17 
 950:.//FWLIB/src/stm32f10x_tim.c ****   *   to select the TIM peripheral. 
 951:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
 952:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 953:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Update: TIM update Interrupt source
 954:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
 955:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
 956:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
 957:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
 958:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_COM: TIM Commutation DMA source
 959:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Trigger: TIM Trigger DMA source
 960:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the DMA Request sources.
 961:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 962:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 963:.//FWLIB/src/stm32f10x_tim.c ****   */
 964:.//FWLIB/src/stm32f10x_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
 965:.//FWLIB/src/stm32f10x_tim.c **** { 
 966:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 967:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST9_PERIPH(TIMx));
 968:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
 969:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 970:.//FWLIB/src/stm32f10x_tim.c ****   
 971:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 972:.//FWLIB/src/stm32f10x_tim.c ****   {
 973:.//FWLIB/src/stm32f10x_tim.c ****     /* Enable the DMA sources */
 974:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 975:.//FWLIB/src/stm32f10x_tim.c ****   }
 976:.//FWLIB/src/stm32f10x_tim.c ****   else
 977:.//FWLIB/src/stm32f10x_tim.c ****   {
 978:.//FWLIB/src/stm32f10x_tim.c ****     /* Disable the DMA sources */
 979:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 980:.//FWLIB/src/stm32f10x_tim.c ****   }
 981:.//FWLIB/src/stm32f10x_tim.c **** }
 982:.//FWLIB/src/stm32f10x_tim.c **** 
 983:.//FWLIB/src/stm32f10x_tim.c **** /**
 984:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx internal Clock
 985:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15
 986:.//FWLIB/src/stm32f10x_tim.c ****   *         to select the TIM peripheral.
 987:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
 988:.//FWLIB/src/stm32f10x_tim.c ****   */
 989:.//FWLIB/src/stm32f10x_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
 990:.//FWLIB/src/stm32f10x_tim.c **** {
 991:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 992:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 993:.//FWLIB/src/stm32f10x_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
 994:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR &=  (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 995:.//FWLIB/src/stm32f10x_tim.c **** }
 996:.//FWLIB/src/stm32f10x_tim.c **** 
 997:.//FWLIB/src/stm32f10x_tim.c **** /**
 998:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
 999:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1000:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ITRSource: Trigger source.
1001:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 19


1002:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR0: Internal Trigger 0
1003:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR1: Internal Trigger 1
1004:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR2: Internal Trigger 2
1005:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR3: Internal Trigger 3
1006:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1007:.//FWLIB/src/stm32f10x_tim.c ****   */
1008:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1009:.//FWLIB/src/stm32f10x_tim.c **** {
1010:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1011:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1012:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
1013:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Internal Trigger */
1014:.//FWLIB/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
1015:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1016:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1017:.//FWLIB/src/stm32f10x_tim.c **** }
1018:.//FWLIB/src/stm32f10x_tim.c **** 
1019:.//FWLIB/src/stm32f10x_tim.c **** /**
1020:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
1021:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1022:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
1023:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1024:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
1025:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
1026:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
1027:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
1028:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1029:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
1030:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
1031:.//FWLIB/src/stm32f10x_tim.c ****   * @param  ICFilter : specifies the filter value.
1032:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x0 and 0xF.
1033:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1034:.//FWLIB/src/stm32f10x_tim.c ****   */
1035:.//FWLIB/src/stm32f10x_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
1036:.//FWLIB/src/stm32f10x_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
1037:.//FWLIB/src/stm32f10x_tim.c **** {
1038:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1039:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1040:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
1041:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
1042:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
1043:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure the Timer Input Clock Source */
1044:.//FWLIB/src/stm32f10x_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
1045:.//FWLIB/src/stm32f10x_tim.c ****   {
1046:.//FWLIB/src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1047:.//FWLIB/src/stm32f10x_tim.c ****   }
1048:.//FWLIB/src/stm32f10x_tim.c ****   else
1049:.//FWLIB/src/stm32f10x_tim.c ****   {
1050:.//FWLIB/src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1051:.//FWLIB/src/stm32f10x_tim.c ****   }
1052:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Trigger source */
1053:.//FWLIB/src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
1054:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1055:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1056:.//FWLIB/src/stm32f10x_tim.c **** }
1057:.//FWLIB/src/stm32f10x_tim.c **** 
1058:.//FWLIB/src/stm32f10x_tim.c **** /**
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 20


1059:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode1
1060:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1061:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1062:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1063:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1064:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1065:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1066:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1067:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1068:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1069:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1070:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1071:.//FWLIB/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1072:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1073:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1074:.//FWLIB/src/stm32f10x_tim.c ****   */
1075:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPo
1076:.//FWLIB/src/stm32f10x_tim.c ****                              uint16_t ExtTRGFilter)
1077:.//FWLIB/src/stm32f10x_tim.c **** {
1078:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1079:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1080:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1081:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1082:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1083:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1084:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1085:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1086:.//FWLIB/src/stm32f10x_tim.c ****   
1087:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1088:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1089:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
1090:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1091:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1092:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
1093:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Trigger selection : ETRF */
1094:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1095:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
1096:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1097:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1098:.//FWLIB/src/stm32f10x_tim.c **** }
1099:.//FWLIB/src/stm32f10x_tim.c **** 
1100:.//FWLIB/src/stm32f10x_tim.c **** /**
1101:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode2
1102:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1103:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1104:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1105:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1106:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1107:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1108:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1109:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1110:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1111:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1112:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1113:.//FWLIB/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1114:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1115:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 21


1116:.//FWLIB/src/stm32f10x_tim.c ****   */
1117:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
1118:.//FWLIB/src/stm32f10x_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
1119:.//FWLIB/src/stm32f10x_tim.c **** {
1120:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1121:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1122:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1123:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1124:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1125:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1126:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1127:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
1128:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
1129:.//FWLIB/src/stm32f10x_tim.c **** }
1130:.//FWLIB/src/stm32f10x_tim.c **** 
1131:.//FWLIB/src/stm32f10x_tim.c **** /**
1132:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
1133:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1134:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1135:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1136:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1137:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1138:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1139:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1140:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1141:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1142:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1143:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1144:.//FWLIB/src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1145:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1146:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1147:.//FWLIB/src/stm32f10x_tim.c ****   */
1148:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
1149:.//FWLIB/src/stm32f10x_tim.c ****                    uint16_t ExtTRGFilter)
1150:.//FWLIB/src/stm32f10x_tim.c **** {
1151:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1152:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1153:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1154:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1155:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1156:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1157:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1158:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
1159:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= SMCR_ETR_Mask;
1160:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
1161:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
1162:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1163:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1164:.//FWLIB/src/stm32f10x_tim.c **** }
1165:.//FWLIB/src/stm32f10x_tim.c **** 
1166:.//FWLIB/src/stm32f10x_tim.c **** /**
1167:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Prescaler.
1168:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
1169:.//FWLIB/src/stm32f10x_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
1170:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
1171:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1172:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 22


1173:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediately.
1174:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1175:.//FWLIB/src/stm32f10x_tim.c ****   */
1176:.//FWLIB/src/stm32f10x_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
1177:.//FWLIB/src/stm32f10x_tim.c **** {
1178:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1179:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1180:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
1181:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler value */
1182:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->PSC = Prescaler;
1183:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
1184:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
1185:.//FWLIB/src/stm32f10x_tim.c **** }
1186:.//FWLIB/src/stm32f10x_tim.c **** 
1187:.//FWLIB/src/stm32f10x_tim.c **** /**
1188:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
1189:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1190:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
1191:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1192:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Up: TIM Up Counting Mode
1193:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Down: TIM Down Counting Mode
1194:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
1195:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
1196:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
1197:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1198:.//FWLIB/src/stm32f10x_tim.c ****   */
1199:.//FWLIB/src/stm32f10x_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
1200:.//FWLIB/src/stm32f10x_tim.c **** {
1201:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
1202:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1203:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1204:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
1205:.//FWLIB/src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;
1206:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
1207:.//FWLIB/src/stm32f10x_tim.c ****   tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
1208:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
1209:.//FWLIB/src/stm32f10x_tim.c ****   tmpcr1 |= TIM_CounterMode;
1210:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
1211:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
1212:.//FWLIB/src/stm32f10x_tim.c **** }
1213:.//FWLIB/src/stm32f10x_tim.c **** 
1214:.//FWLIB/src/stm32f10x_tim.c **** /**
1215:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the Input Trigger source
1216:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1217:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
1218:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1219:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR0: Internal Trigger 0
1220:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR1: Internal Trigger 1
1221:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR2: Internal Trigger 2
1222:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR3: Internal Trigger 3
1223:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1F_ED: TI1 Edge Detector
1224:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1FP1: Filtered Timer Input 1
1225:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI2FP2: Filtered Timer Input 2
1226:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TS_ETRF: External Trigger input
1227:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1228:.//FWLIB/src/stm32f10x_tim.c ****   */
1229:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 23


1230:.//FWLIB/src/stm32f10x_tim.c **** {
1231:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1232:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1233:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1234:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
1235:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1236:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1237:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
1238:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1239:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
1240:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
1241:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1242:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1243:.//FWLIB/src/stm32f10x_tim.c **** }
1244:.//FWLIB/src/stm32f10x_tim.c **** 
1245:.//FWLIB/src/stm32f10x_tim.c **** /**
1246:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
1247:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1248:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
1249:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1250:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
1251:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
1252:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
1253:.//FWLIB/src/stm32f10x_tim.c ****   *                                on the level of the other input.
1254:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
1255:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1256:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1257:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1258:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
1259:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1260:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1261:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1262:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1263:.//FWLIB/src/stm32f10x_tim.c ****   */
1264:.//FWLIB/src/stm32f10x_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
1265:.//FWLIB/src/stm32f10x_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
1266:.//FWLIB/src/stm32f10x_tim.c **** {
1267:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1268:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1269:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1270:.//FWLIB/src/stm32f10x_tim.c ****     
1271:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1272:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1273:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
1274:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
1275:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
1276:.//FWLIB/src/stm32f10x_tim.c **** 
1277:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1278:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1279:.//FWLIB/src/stm32f10x_tim.c ****   
1280:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1281:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1282:.//FWLIB/src/stm32f10x_tim.c ****   
1283:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
1284:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1285:.//FWLIB/src/stm32f10x_tim.c ****   
1286:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the encoder Mode */
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 24


1287:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1288:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
1289:.//FWLIB/src/stm32f10x_tim.c ****   
1290:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
1291:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & (uint16_t)(~((uint16_t)TIM_CCMR1
1292:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
1293:.//FWLIB/src/stm32f10x_tim.c ****   
1294:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the TI1 and the TI2 Polarities */
1295:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCER_CC1P)) & ((uint16_t)~((uint16_t)TIM_CCER_CC
1296:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
1297:.//FWLIB/src/stm32f10x_tim.c ****   
1298:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1299:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1300:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1301:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1302:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
1303:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1304:.//FWLIB/src/stm32f10x_tim.c **** }
1305:.//FWLIB/src/stm32f10x_tim.c **** 
1306:.//FWLIB/src/stm32f10x_tim.c **** /**
1307:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1308:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1309:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1310:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1311:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC1REF
1312:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1313:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1314:.//FWLIB/src/stm32f10x_tim.c ****   */
1315:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1316:.//FWLIB/src/stm32f10x_tim.c **** {
1317:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1318:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1319:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1320:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1321:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1322:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1323:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1M);
1324:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1325:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1326:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1327:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1328:.//FWLIB/src/stm32f10x_tim.c **** }
1329:.//FWLIB/src/stm32f10x_tim.c **** 
1330:.//FWLIB/src/stm32f10x_tim.c **** /**
1331:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1332:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1333:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1334:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1335:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC2REF
1336:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1337:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1338:.//FWLIB/src/stm32f10x_tim.c ****   */
1339:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1340:.//FWLIB/src/stm32f10x_tim.c **** {
1341:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1342:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1343:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 25


1344:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1345:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1346:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1347:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2M);
1348:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1349:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1350:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1351:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1352:.//FWLIB/src/stm32f10x_tim.c **** }
1353:.//FWLIB/src/stm32f10x_tim.c **** 
1354:.//FWLIB/src/stm32f10x_tim.c **** /**
1355:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1356:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1357:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1358:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1359:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC3REF
1360:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1361:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1362:.//FWLIB/src/stm32f10x_tim.c ****   */
1363:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1364:.//FWLIB/src/stm32f10x_tim.c **** {
1365:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1366:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1367:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1368:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1369:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1370:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1371:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3M);
1372:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1373:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1374:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1375:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1376:.//FWLIB/src/stm32f10x_tim.c **** }
1377:.//FWLIB/src/stm32f10x_tim.c **** 
1378:.//FWLIB/src/stm32f10x_tim.c **** /**
1379:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1380:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1381:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1382:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1383:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC4REF
1384:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1385:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1386:.//FWLIB/src/stm32f10x_tim.c ****   */
1387:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1388:.//FWLIB/src/stm32f10x_tim.c **** {
1389:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1390:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1391:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1392:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1393:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1394:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1395:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4M);
1396:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1397:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1398:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1399:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1400:.//FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 26


1401:.//FWLIB/src/stm32f10x_tim.c **** 
1402:.//FWLIB/src/stm32f10x_tim.c **** /**
1403:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
1404:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 to select the TIM peripheral.
1405:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
1406:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1407:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1408:.//FWLIB/src/stm32f10x_tim.c ****   */
1409:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
1410:.//FWLIB/src/stm32f10x_tim.c **** {
1411:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1412:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1413:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1414:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1415:.//FWLIB/src/stm32f10x_tim.c ****   {
1416:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the ARR Preload Bit */
1417:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
1418:.//FWLIB/src/stm32f10x_tim.c ****   }
1419:.//FWLIB/src/stm32f10x_tim.c ****   else
1420:.//FWLIB/src/stm32f10x_tim.c ****   {
1421:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the ARR Preload Bit */
1422:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_ARPE);
1423:.//FWLIB/src/stm32f10x_tim.c ****   }
1424:.//FWLIB/src/stm32f10x_tim.c **** }
1425:.//FWLIB/src/stm32f10x_tim.c **** 
1426:.//FWLIB/src/stm32f10x_tim.c **** /**
1427:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
1428:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 8, 15, 16 or 17 to select the TIMx peripheral
1429:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Commutation event.
1430:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1431:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1432:.//FWLIB/src/stm32f10x_tim.c ****   */
1433:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
1434:.//FWLIB/src/stm32f10x_tim.c **** {
1435:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1436:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1437:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1438:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1439:.//FWLIB/src/stm32f10x_tim.c ****   {
1440:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the COM Bit */
1441:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
1442:.//FWLIB/src/stm32f10x_tim.c ****   }
1443:.//FWLIB/src/stm32f10x_tim.c ****   else
1444:.//FWLIB/src/stm32f10x_tim.c ****   {
1445:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the COM Bit */
1446:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCUS);
1447:.//FWLIB/src/stm32f10x_tim.c ****   }
1448:.//FWLIB/src/stm32f10x_tim.c **** }
1449:.//FWLIB/src/stm32f10x_tim.c **** 
1450:.//FWLIB/src/stm32f10x_tim.c **** /**
1451:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
1452:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
1453:.//FWLIB/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1454:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
1455:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1456:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1457:.//FWLIB/src/stm32f10x_tim.c ****   */
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 27


1458:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
1459:.//FWLIB/src/stm32f10x_tim.c **** {
1460:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1461:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1462:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1463:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1464:.//FWLIB/src/stm32f10x_tim.c ****   {
1465:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the CCDS Bit */
1466:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
1467:.//FWLIB/src/stm32f10x_tim.c ****   }
1468:.//FWLIB/src/stm32f10x_tim.c ****   else
1469:.//FWLIB/src/stm32f10x_tim.c ****   {
1470:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the CCDS Bit */
1471:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCDS);
1472:.//FWLIB/src/stm32f10x_tim.c ****   }
1473:.//FWLIB/src/stm32f10x_tim.c **** }
1474:.//FWLIB/src/stm32f10x_tim.c **** 
1475:.//FWLIB/src/stm32f10x_tim.c **** /**
1476:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
1477:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be   1, 2, 3, 4, 5, 8 or 15 
1478:.//FWLIB/src/stm32f10x_tim.c ****   *         to select the TIMx peripheral
1479:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
1480:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1481:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1482:.//FWLIB/src/stm32f10x_tim.c ****   */
1483:.//FWLIB/src/stm32f10x_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
1484:.//FWLIB/src/stm32f10x_tim.c **** { 
1485:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1486:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1487:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1488:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1489:.//FWLIB/src/stm32f10x_tim.c ****   {
1490:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the CCPC Bit */
1491:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
1492:.//FWLIB/src/stm32f10x_tim.c ****   }
1493:.//FWLIB/src/stm32f10x_tim.c ****   else
1494:.//FWLIB/src/stm32f10x_tim.c ****   {
1495:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the CCPC Bit */
1496:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCPC);
1497:.//FWLIB/src/stm32f10x_tim.c ****   }
1498:.//FWLIB/src/stm32f10x_tim.c **** }
1499:.//FWLIB/src/stm32f10x_tim.c **** 
1500:.//FWLIB/src/stm32f10x_tim.c **** /**
1501:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1502:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1503:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1504:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1505:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1506:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1507:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1508:.//FWLIB/src/stm32f10x_tim.c ****   */
1509:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1510:.//FWLIB/src/stm32f10x_tim.c **** {
1511:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1512:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1513:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1514:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 28


1515:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1516:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
1517:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1PE);
1518:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1519:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1520:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1521:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1522:.//FWLIB/src/stm32f10x_tim.c **** }
1523:.//FWLIB/src/stm32f10x_tim.c **** 
1524:.//FWLIB/src/stm32f10x_tim.c **** /**
1525:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1526:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1527:.//FWLIB/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1528:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1529:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1530:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1531:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1532:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1533:.//FWLIB/src/stm32f10x_tim.c ****   */
1534:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1535:.//FWLIB/src/stm32f10x_tim.c **** {
1536:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1537:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1538:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1539:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1540:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1541:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
1542:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2PE);
1543:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1544:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1545:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1546:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1547:.//FWLIB/src/stm32f10x_tim.c **** }
1548:.//FWLIB/src/stm32f10x_tim.c **** 
1549:.//FWLIB/src/stm32f10x_tim.c **** /**
1550:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1551:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1552:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1553:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1554:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1555:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1556:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1557:.//FWLIB/src/stm32f10x_tim.c ****   */
1558:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1559:.//FWLIB/src/stm32f10x_tim.c **** {
1560:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1561:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1562:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1563:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1564:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1565:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
1566:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3PE);
1567:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1568:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1569:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1570:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1571:.//FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 29


1572:.//FWLIB/src/stm32f10x_tim.c **** 
1573:.//FWLIB/src/stm32f10x_tim.c **** /**
1574:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1575:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1576:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1577:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1578:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1579:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1580:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1581:.//FWLIB/src/stm32f10x_tim.c ****   */
1582:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1583:.//FWLIB/src/stm32f10x_tim.c **** {
1584:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1585:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1586:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1587:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1588:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1589:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
1590:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4PE);
1591:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1592:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1593:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1594:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1595:.//FWLIB/src/stm32f10x_tim.c **** }
1596:.//FWLIB/src/stm32f10x_tim.c **** 
1597:.//FWLIB/src/stm32f10x_tim.c **** /**
1598:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1599:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1600:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1601:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1602:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1603:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1604:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1605:.//FWLIB/src/stm32f10x_tim.c ****   */
1606:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1607:.//FWLIB/src/stm32f10x_tim.c **** {
1608:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1609:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1610:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1611:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1612:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1613:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1614:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
1615:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1FE);
1616:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1617:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCFast;
1618:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1619:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1620:.//FWLIB/src/stm32f10x_tim.c **** }
1621:.//FWLIB/src/stm32f10x_tim.c **** 
1622:.//FWLIB/src/stm32f10x_tim.c **** /**
1623:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1624:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1625:.//FWLIB/src/stm32f10x_tim.c ****   *         the TIM peripheral.
1626:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1627:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1628:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 30


1629:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1630:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1631:.//FWLIB/src/stm32f10x_tim.c ****   */
1632:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1633:.//FWLIB/src/stm32f10x_tim.c **** {
1634:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1635:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1636:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1637:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1638:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1639:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1640:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
1641:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2FE);
1642:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1643:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1644:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1645:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1646:.//FWLIB/src/stm32f10x_tim.c **** }
1647:.//FWLIB/src/stm32f10x_tim.c **** 
1648:.//FWLIB/src/stm32f10x_tim.c **** /**
1649:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1650:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1651:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1652:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1653:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1654:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1655:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1656:.//FWLIB/src/stm32f10x_tim.c ****   */
1657:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1658:.//FWLIB/src/stm32f10x_tim.c **** {
1659:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1660:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1661:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1662:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1663:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1664:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1665:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
1666:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3FE);
1667:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1668:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCFast;
1669:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1670:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1671:.//FWLIB/src/stm32f10x_tim.c **** }
1672:.//FWLIB/src/stm32f10x_tim.c **** 
1673:.//FWLIB/src/stm32f10x_tim.c **** /**
1674:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1675:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1676:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1677:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1678:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1679:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1680:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1681:.//FWLIB/src/stm32f10x_tim.c ****   */
1682:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1683:.//FWLIB/src/stm32f10x_tim.c **** {
1684:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1685:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 31


1686:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1687:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1688:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1689:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1690:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
1691:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4FE);
1692:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1693:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1694:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1695:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1696:.//FWLIB/src/stm32f10x_tim.c **** }
1697:.//FWLIB/src/stm32f10x_tim.c **** 
1698:.//FWLIB/src/stm32f10x_tim.c **** /**
1699:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1700:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1701:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1702:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1703:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1704:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1705:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1706:.//FWLIB/src/stm32f10x_tim.c ****   */
1707:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1708:.//FWLIB/src/stm32f10x_tim.c **** {
1709:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1710:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1711:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1712:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1713:.//FWLIB/src/stm32f10x_tim.c **** 
1714:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1715:.//FWLIB/src/stm32f10x_tim.c **** 
1716:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1CE Bit */
1717:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1CE);
1718:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1719:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCClear;
1720:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1721:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1722:.//FWLIB/src/stm32f10x_tim.c **** }
1723:.//FWLIB/src/stm32f10x_tim.c **** 
1724:.//FWLIB/src/stm32f10x_tim.c **** /**
1725:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1726:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1727:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1728:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1729:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1730:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1731:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1732:.//FWLIB/src/stm32f10x_tim.c ****   */
1733:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1734:.//FWLIB/src/stm32f10x_tim.c **** {
1735:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1736:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1737:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1738:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1739:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1740:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
1741:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2CE);
1742:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 32


1743:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1744:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1745:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1746:.//FWLIB/src/stm32f10x_tim.c **** }
1747:.//FWLIB/src/stm32f10x_tim.c **** 
1748:.//FWLIB/src/stm32f10x_tim.c **** /**
1749:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1750:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1751:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1752:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1753:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1754:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1755:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1756:.//FWLIB/src/stm32f10x_tim.c ****   */
1757:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1758:.//FWLIB/src/stm32f10x_tim.c **** {
1759:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1760:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1761:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1762:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1763:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1764:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
1765:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3CE);
1766:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1767:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCClear;
1768:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1769:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1770:.//FWLIB/src/stm32f10x_tim.c **** }
1771:.//FWLIB/src/stm32f10x_tim.c **** 
1772:.//FWLIB/src/stm32f10x_tim.c **** /**
1773:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1774:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1775:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1776:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1777:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1778:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1779:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1780:.//FWLIB/src/stm32f10x_tim.c ****   */
1781:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1782:.//FWLIB/src/stm32f10x_tim.c **** {
1783:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1784:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1785:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1786:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1787:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1788:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
1789:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4CE);
1790:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1791:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1792:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1793:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1794:.//FWLIB/src/stm32f10x_tim.c **** }
1795:.//FWLIB/src/stm32f10x_tim.c **** 
1796:.//FWLIB/src/stm32f10x_tim.c **** /**
1797:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1798:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1799:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 33


1800:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1801:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1802:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1803:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1804:.//FWLIB/src/stm32f10x_tim.c ****   */
1805:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1806:.//FWLIB/src/stm32f10x_tim.c **** {
1807:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1808:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1809:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1810:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1811:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1812:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
1813:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1P);
1814:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
1815:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1816:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1817:.//FWLIB/src/stm32f10x_tim.c **** }
1818:.//FWLIB/src/stm32f10x_tim.c **** 
1819:.//FWLIB/src/stm32f10x_tim.c **** /**
1820:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1821:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1822:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1823:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1824:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1825:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1826:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1827:.//FWLIB/src/stm32f10x_tim.c ****   */
1828:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1829:.//FWLIB/src/stm32f10x_tim.c **** {
1830:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1831:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1832:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1833:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1834:.//FWLIB/src/stm32f10x_tim.c ****    
1835:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1836:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
1837:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1NP);
1838:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
1839:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1840:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1841:.//FWLIB/src/stm32f10x_tim.c **** }
1842:.//FWLIB/src/stm32f10x_tim.c **** 
1843:.//FWLIB/src/stm32f10x_tim.c **** /**
1844:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1845:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1846:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1847:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1848:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1849:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1850:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1851:.//FWLIB/src/stm32f10x_tim.c ****   */
1852:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1853:.//FWLIB/src/stm32f10x_tim.c **** {
1854:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1855:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1856:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 34


1857:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1858:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1859:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
1860:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2P);
1861:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1862:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1863:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1864:.//FWLIB/src/stm32f10x_tim.c **** }
1865:.//FWLIB/src/stm32f10x_tim.c **** 
1866:.//FWLIB/src/stm32f10x_tim.c **** /**
1867:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1868:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1869:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1870:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1871:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1872:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1873:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1874:.//FWLIB/src/stm32f10x_tim.c ****   */
1875:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1876:.//FWLIB/src/stm32f10x_tim.c **** {
1877:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1878:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1879:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1880:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1881:.//FWLIB/src/stm32f10x_tim.c ****   
1882:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1883:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
1884:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2NP);
1885:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1886:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1887:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1888:.//FWLIB/src/stm32f10x_tim.c **** }
1889:.//FWLIB/src/stm32f10x_tim.c **** 
1890:.//FWLIB/src/stm32f10x_tim.c **** /**
1891:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1892:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1893:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1894:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1895:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1896:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1897:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1898:.//FWLIB/src/stm32f10x_tim.c ****   */
1899:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1900:.//FWLIB/src/stm32f10x_tim.c **** {
1901:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1902:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1903:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1904:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1905:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1906:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
1907:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3P);
1908:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1909:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1910:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1911:.//FWLIB/src/stm32f10x_tim.c **** }
1912:.//FWLIB/src/stm32f10x_tim.c **** 
1913:.//FWLIB/src/stm32f10x_tim.c **** /**
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 35


1914:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1915:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1916:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1917:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1918:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1919:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1920:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1921:.//FWLIB/src/stm32f10x_tim.c ****   */
1922:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1923:.//FWLIB/src/stm32f10x_tim.c **** {
1924:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1925:.//FWLIB/src/stm32f10x_tim.c ****  
1926:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1927:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1928:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1929:.//FWLIB/src/stm32f10x_tim.c ****     
1930:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1931:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
1932:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3NP);
1933:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
1934:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1935:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1936:.//FWLIB/src/stm32f10x_tim.c **** }
1937:.//FWLIB/src/stm32f10x_tim.c **** 
1938:.//FWLIB/src/stm32f10x_tim.c **** /**
1939:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1940:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1941:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1942:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1943:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1944:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1945:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1946:.//FWLIB/src/stm32f10x_tim.c ****   */
1947:.//FWLIB/src/stm32f10x_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1948:.//FWLIB/src/stm32f10x_tim.c **** {
1949:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1950:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1951:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1952:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1953:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1954:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
1955:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC4P);
1956:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1957:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1958:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1959:.//FWLIB/src/stm32f10x_tim.c **** }
1960:.//FWLIB/src/stm32f10x_tim.c **** 
1961:.//FWLIB/src/stm32f10x_tim.c **** /**
1962:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1963:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1964:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1965:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1966:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1967:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1968:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1969:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
1970:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 36


1971:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1972:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
1973:.//FWLIB/src/stm32f10x_tim.c ****   */
1974:.//FWLIB/src/stm32f10x_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1975:.//FWLIB/src/stm32f10x_tim.c **** {
1976:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
1977:.//FWLIB/src/stm32f10x_tim.c **** 
1978:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
1979:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1980:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1981:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1982:.//FWLIB/src/stm32f10x_tim.c **** 
1983:.//FWLIB/src/stm32f10x_tim.c ****   tmp = CCER_CCE_Set << TIM_Channel;
1984:.//FWLIB/src/stm32f10x_tim.c **** 
1985:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the CCxE Bit */
1986:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1987:.//FWLIB/src/stm32f10x_tim.c **** 
1988:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the CCxE Bit */ 
1989:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1990:.//FWLIB/src/stm32f10x_tim.c **** }
1991:.//FWLIB/src/stm32f10x_tim.c **** 
1992:.//FWLIB/src/stm32f10x_tim.c **** /**
1993:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1994:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1995:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1996:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1997:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1998:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1999:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2000:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
2001:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
2002:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2003:.//FWLIB/src/stm32f10x_tim.c ****   */
2004:.//FWLIB/src/stm32f10x_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
2005:.//FWLIB/src/stm32f10x_tim.c **** {
2006:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
2007:.//FWLIB/src/stm32f10x_tim.c **** 
2008:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2009:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2010:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
2011:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
2012:.//FWLIB/src/stm32f10x_tim.c **** 
2013:.//FWLIB/src/stm32f10x_tim.c ****   tmp = CCER_CCNE_Set << TIM_Channel;
2014:.//FWLIB/src/stm32f10x_tim.c **** 
2015:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the CCxNE Bit */
2016:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
2017:.//FWLIB/src/stm32f10x_tim.c **** 
2018:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the CCxNE Bit */ 
2019:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
2020:.//FWLIB/src/stm32f10x_tim.c **** }
2021:.//FWLIB/src/stm32f10x_tim.c **** 
2022:.//FWLIB/src/stm32f10x_tim.c **** /**
2023:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
2024:.//FWLIB/src/stm32f10x_tim.c ****   * @note   This function disables the selected channel before changing the Output
2025:.//FWLIB/src/stm32f10x_tim.c ****   *         Compare Mode.
2026:.//FWLIB/src/stm32f10x_tim.c ****   *         User has to enable this channel using TIM_CCxCmd and TIM_CCxNCmd functions.
2027:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 37


2028:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2029:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2030:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
2031:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
2032:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2033:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
2034:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
2035:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2036:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Timing
2037:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Active
2038:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Toggle
2039:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM1
2040:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM2
2041:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active
2042:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive
2043:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2044:.//FWLIB/src/stm32f10x_tim.c ****   */
2045:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
2046:.//FWLIB/src/stm32f10x_tim.c **** {
2047:.//FWLIB/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
2048:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp1 = 0;
2049:.//FWLIB/src/stm32f10x_tim.c **** 
2050:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2051:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2052:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
2053:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
2054:.//FWLIB/src/stm32f10x_tim.c **** 
2055:.//FWLIB/src/stm32f10x_tim.c ****   tmp = (uint32_t) TIMx;
2056:.//FWLIB/src/stm32f10x_tim.c ****   tmp += CCMR_Offset;
2057:.//FWLIB/src/stm32f10x_tim.c **** 
2058:.//FWLIB/src/stm32f10x_tim.c ****   tmp1 = CCER_CCE_Set << (uint16_t)TIM_Channel;
2059:.//FWLIB/src/stm32f10x_tim.c **** 
2060:.//FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
2061:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
2062:.//FWLIB/src/stm32f10x_tim.c **** 
2063:.//FWLIB/src/stm32f10x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
2064:.//FWLIB/src/stm32f10x_tim.c ****   {
2065:.//FWLIB/src/stm32f10x_tim.c ****     tmp += (TIM_Channel>>1);
2066:.//FWLIB/src/stm32f10x_tim.c **** 
2067:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2068:.//FWLIB/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC1M);
2069:.//FWLIB/src/stm32f10x_tim.c ****    
2070:.//FWLIB/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2071:.//FWLIB/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
2072:.//FWLIB/src/stm32f10x_tim.c ****   }
2073:.//FWLIB/src/stm32f10x_tim.c ****   else
2074:.//FWLIB/src/stm32f10x_tim.c ****   {
2075:.//FWLIB/src/stm32f10x_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
2076:.//FWLIB/src/stm32f10x_tim.c **** 
2077:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2078:.//FWLIB/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC2M);
2079:.//FWLIB/src/stm32f10x_tim.c ****     
2080:.//FWLIB/src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2081:.//FWLIB/src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
2082:.//FWLIB/src/stm32f10x_tim.c ****   }
2083:.//FWLIB/src/stm32f10x_tim.c **** }
2084:.//FWLIB/src/stm32f10x_tim.c **** 
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 38


2085:.//FWLIB/src/stm32f10x_tim.c **** /**
2086:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
2087:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2088:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
2089:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2090:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2091:.//FWLIB/src/stm32f10x_tim.c ****   */
2092:.//FWLIB/src/stm32f10x_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
2093:.//FWLIB/src/stm32f10x_tim.c **** {
2094:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2095:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2096:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2097:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2098:.//FWLIB/src/stm32f10x_tim.c ****   {
2099:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Update Disable Bit */
2100:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
2101:.//FWLIB/src/stm32f10x_tim.c ****   }
2102:.//FWLIB/src/stm32f10x_tim.c ****   else
2103:.//FWLIB/src/stm32f10x_tim.c ****   {
2104:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Update Disable Bit */
2105:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_UDIS);
2106:.//FWLIB/src/stm32f10x_tim.c ****   }
2107:.//FWLIB/src/stm32f10x_tim.c **** }
2108:.//FWLIB/src/stm32f10x_tim.c **** 
2109:.//FWLIB/src/stm32f10x_tim.c **** /**
2110:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
2111:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2112:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
2113:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2114:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Regular: Source of update is the counter overflow/underflow
2115:.//FWLIB/src/stm32f10x_tim.c ****                                        or the setting of UG bit, or an update generation
2116:.//FWLIB/src/stm32f10x_tim.c ****                                        through the slave mode controller.
2117:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
2118:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2119:.//FWLIB/src/stm32f10x_tim.c ****   */
2120:.//FWLIB/src/stm32f10x_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
2121:.//FWLIB/src/stm32f10x_tim.c **** {
2122:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2123:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2124:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
2125:.//FWLIB/src/stm32f10x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
2126:.//FWLIB/src/stm32f10x_tim.c ****   {
2127:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the URS Bit */
2128:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
2129:.//FWLIB/src/stm32f10x_tim.c ****   }
2130:.//FWLIB/src/stm32f10x_tim.c ****   else
2131:.//FWLIB/src/stm32f10x_tim.c ****   {
2132:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the URS Bit */
2133:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_URS);
2134:.//FWLIB/src/stm32f10x_tim.c ****   }
2135:.//FWLIB/src/stm32f10x_tim.c **** }
2136:.//FWLIB/src/stm32f10x_tim.c **** 
2137:.//FWLIB/src/stm32f10x_tim.c **** /**
2138:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
2139:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2140:.//FWLIB/src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
2141:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 39


2142:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2143:.//FWLIB/src/stm32f10x_tim.c ****   */
2144:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
2145:.//FWLIB/src/stm32f10x_tim.c **** {
2146:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2147:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2148:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2149:.//FWLIB/src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2150:.//FWLIB/src/stm32f10x_tim.c ****   {
2151:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the TI1S Bit */
2152:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
2153:.//FWLIB/src/stm32f10x_tim.c ****   }
2154:.//FWLIB/src/stm32f10x_tim.c ****   else
2155:.//FWLIB/src/stm32f10x_tim.c ****   {
2156:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the TI1S Bit */
2157:.//FWLIB/src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_TI1S);
2158:.//FWLIB/src/stm32f10x_tim.c ****   }
2159:.//FWLIB/src/stm32f10x_tim.c **** }
2160:.//FWLIB/src/stm32f10x_tim.c **** 
2161:.//FWLIB/src/stm32f10x_tim.c **** /**
2162:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
2163:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2164:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
2165:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2166:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Single
2167:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Repetitive
2168:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2169:.//FWLIB/src/stm32f10x_tim.c ****   */
2170:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
2171:.//FWLIB/src/stm32f10x_tim.c **** {
2172:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2173:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2174:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
2175:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OPM Bit */
2176:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_OPM);
2177:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
2178:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_OPMode;
2179:.//FWLIB/src/stm32f10x_tim.c **** }
2180:.//FWLIB/src/stm32f10x_tim.c **** 
2181:.//FWLIB/src/stm32f10x_tim.c **** /**
2182:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2183:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7, 8, 9, 12 or 15 to select the TIM peripheral.
2184:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2185:.//FWLIB/src/stm32f10x_tim.c ****   *   This paramter can be one of the following values:
2186:.//FWLIB/src/stm32f10x_tim.c ****   *
2187:.//FWLIB/src/stm32f10x_tim.c ****   *  - For all TIMx
2188:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigger outpu
2189:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output (TRGO).
2190:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Update: The update event is selected as the trigger output (TRGO).
2191:.//FWLIB/src/stm32f10x_tim.c ****   *
2192:.//FWLIB/src/stm32f10x_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2193:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF flag
2194:.//FWLIB/src/stm32f10x_tim.c ****   *                              is to be set, as soon as a capture or compare match occurs (TRGO).
2195:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output (TRGO).
2196:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output (TRGO).
2197:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output (TRGO).
2198:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output (TRGO).
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 40


2199:.//FWLIB/src/stm32f10x_tim.c ****   *
2200:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2201:.//FWLIB/src/stm32f10x_tim.c ****   */
2202:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2203:.//FWLIB/src/stm32f10x_tim.c **** {
2204:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2205:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST7_PERIPH(TIMx));
2206:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2207:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the MMS Bits */
2208:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_MMS);
2209:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the TRGO source */
2210:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2211:.//FWLIB/src/stm32f10x_tim.c **** }
2212:.//FWLIB/src/stm32f10x_tim.c **** 
2213:.//FWLIB/src/stm32f10x_tim.c **** /**
2214:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2215:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2216:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2217:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2218:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal (TRGI) re-initializes
2219:.//FWLIB/src/stm32f10x_tim.c ****   *                               the counter and triggers an update of the registers.
2220:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (TRGI) i
2221:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRGI.
2222:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the counter
2223:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2224:.//FWLIB/src/stm32f10x_tim.c ****   */
2225:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2226:.//FWLIB/src/stm32f10x_tim.c **** {
2227:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2228:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2229:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2230:.//FWLIB/src/stm32f10x_tim.c ****  /* Reset the SMS Bits */
2231:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_SMS);
2232:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
2233:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2234:.//FWLIB/src/stm32f10x_tim.c **** }
2235:.//FWLIB/src/stm32f10x_tim.c **** 
2236:.//FWLIB/src/stm32f10x_tim.c **** /**
2237:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2238:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2239:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2240:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2241:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2242:.//FWLIB/src/stm32f10x_tim.c ****   *                                      and its slaves (through TRGO).
2243:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Disable: No action
2244:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2245:.//FWLIB/src/stm32f10x_tim.c ****   */
2246:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2247:.//FWLIB/src/stm32f10x_tim.c **** {
2248:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2249:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2250:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2251:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the MSM Bit */
2252:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_MSM);
2253:.//FWLIB/src/stm32f10x_tim.c ****   
2254:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the MSM Bit */
2255:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 41


2256:.//FWLIB/src/stm32f10x_tim.c **** }
2257:.//FWLIB/src/stm32f10x_tim.c **** 
2258:.//FWLIB/src/stm32f10x_tim.c **** /**
2259:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Counter Register value
2260:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2261:.//FWLIB/src/stm32f10x_tim.c ****   * @param  Counter: specifies the Counter register new value.
2262:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2263:.//FWLIB/src/stm32f10x_tim.c ****   */
2264:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter)
2265:.//FWLIB/src/stm32f10x_tim.c **** {
2266:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2267:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2268:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Counter Register value */
2269:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CNT = Counter;
2270:.//FWLIB/src/stm32f10x_tim.c **** }
2271:.//FWLIB/src/stm32f10x_tim.c **** 
2272:.//FWLIB/src/stm32f10x_tim.c **** /**
2273:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
2274:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2275:.//FWLIB/src/stm32f10x_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
2276:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2277:.//FWLIB/src/stm32f10x_tim.c ****   */
2278:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload)
2279:.//FWLIB/src/stm32f10x_tim.c **** {
2280:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2281:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2282:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Autoreload Register value */
2283:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->ARR = Autoreload;
2284:.//FWLIB/src/stm32f10x_tim.c **** }
2285:.//FWLIB/src/stm32f10x_tim.c **** 
2286:.//FWLIB/src/stm32f10x_tim.c **** /**
2287:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
2288:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2289:.//FWLIB/src/stm32f10x_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
2290:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2291:.//FWLIB/src/stm32f10x_tim.c ****   */
2292:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1)
2293:.//FWLIB/src/stm32f10x_tim.c **** {
2294:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2295:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2296:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare1 Register value */
2297:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR1 = Compare1;
2298:.//FWLIB/src/stm32f10x_tim.c **** }
2299:.//FWLIB/src/stm32f10x_tim.c **** 
2300:.//FWLIB/src/stm32f10x_tim.c **** /**
2301:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
2302:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2303:.//FWLIB/src/stm32f10x_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
2304:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2305:.//FWLIB/src/stm32f10x_tim.c ****   */
2306:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2)
2307:.//FWLIB/src/stm32f10x_tim.c **** {
2308:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2309:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2310:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare2 Register value */
2311:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR2 = Compare2;
2312:.//FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 42


2313:.//FWLIB/src/stm32f10x_tim.c **** 
2314:.//FWLIB/src/stm32f10x_tim.c **** /**
2315:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
2316:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2317:.//FWLIB/src/stm32f10x_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
2318:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2319:.//FWLIB/src/stm32f10x_tim.c ****   */
2320:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3)
2321:.//FWLIB/src/stm32f10x_tim.c **** {
2322:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2323:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2324:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare3 Register value */
2325:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR3 = Compare3;
2326:.//FWLIB/src/stm32f10x_tim.c **** }
2327:.//FWLIB/src/stm32f10x_tim.c **** 
2328:.//FWLIB/src/stm32f10x_tim.c **** /**
2329:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
2330:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2331:.//FWLIB/src/stm32f10x_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
2332:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2333:.//FWLIB/src/stm32f10x_tim.c ****   */
2334:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4)
2335:.//FWLIB/src/stm32f10x_tim.c **** {
2336:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2337:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2338:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Capture Compare4 Register value */
2339:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCR4 = Compare4;
2340:.//FWLIB/src/stm32f10x_tim.c **** }
2341:.//FWLIB/src/stm32f10x_tim.c **** 
2342:.//FWLIB/src/stm32f10x_tim.c **** /**
2343:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2344:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2345:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2346:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2347:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2348:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2349:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2350:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2351:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2352:.//FWLIB/src/stm32f10x_tim.c ****   */
2353:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2354:.//FWLIB/src/stm32f10x_tim.c **** {
2355:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2356:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2357:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2358:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC1PSC Bits */
2359:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC1PSC);
2360:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
2361:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2362:.//FWLIB/src/stm32f10x_tim.c **** }
2363:.//FWLIB/src/stm32f10x_tim.c **** 
2364:.//FWLIB/src/stm32f10x_tim.c **** /**
2365:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2366:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2367:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2368:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2369:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 43


2370:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2371:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2372:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2373:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2374:.//FWLIB/src/stm32f10x_tim.c ****   */
2375:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2376:.//FWLIB/src/stm32f10x_tim.c **** {
2377:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2378:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2379:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2380:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC2PSC Bits */
2381:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC2PSC);
2382:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
2383:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2384:.//FWLIB/src/stm32f10x_tim.c **** }
2385:.//FWLIB/src/stm32f10x_tim.c **** 
2386:.//FWLIB/src/stm32f10x_tim.c **** /**
2387:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2388:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2389:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2390:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2391:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2392:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2393:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2394:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2395:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2396:.//FWLIB/src/stm32f10x_tim.c ****   */
2397:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2398:.//FWLIB/src/stm32f10x_tim.c **** {
2399:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2400:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2401:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2402:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC3PSC Bits */
2403:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC3PSC);
2404:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
2405:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2406:.//FWLIB/src/stm32f10x_tim.c **** }
2407:.//FWLIB/src/stm32f10x_tim.c **** 
2408:.//FWLIB/src/stm32f10x_tim.c **** /**
2409:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2410:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2411:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2412:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2413:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2414:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2415:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2416:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2417:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2418:.//FWLIB/src/stm32f10x_tim.c ****   */
2419:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2420:.//FWLIB/src/stm32f10x_tim.c **** {  
2421:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2422:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2423:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2424:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the IC4PSC Bits */
2425:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC4PSC);
2426:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 44


2427:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2428:.//FWLIB/src/stm32f10x_tim.c **** }
2429:.//FWLIB/src/stm32f10x_tim.c **** 
2430:.//FWLIB/src/stm32f10x_tim.c **** /**
2431:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Clock Division value.
2432:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select 
2433:.//FWLIB/src/stm32f10x_tim.c ****   *   the TIM peripheral.
2434:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
2435:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following value:
2436:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV1: TDTS = Tck_tim
2437:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
2438:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
2439:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2440:.//FWLIB/src/stm32f10x_tim.c ****   */
2441:.//FWLIB/src/stm32f10x_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
2442:.//FWLIB/src/stm32f10x_tim.c **** {
2443:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2444:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2445:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
2446:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the CKD Bits */
2447:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_CKD);
2448:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the CKD value */
2449:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_CKD;
2450:.//FWLIB/src/stm32f10x_tim.c **** }
2451:.//FWLIB/src/stm32f10x_tim.c **** 
2452:.//FWLIB/src/stm32f10x_tim.c **** /**
2453:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2454:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2455:.//FWLIB/src/stm32f10x_tim.c ****   * @retval Capture Compare 1 Register value.
2456:.//FWLIB/src/stm32f10x_tim.c ****   */
2457:.//FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2458:.//FWLIB/src/stm32f10x_tim.c **** {
2459:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2460:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2461:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 1 Register value */
2462:.//FWLIB/src/stm32f10x_tim.c ****   return TIMx->CCR1;
2463:.//FWLIB/src/stm32f10x_tim.c **** }
2464:.//FWLIB/src/stm32f10x_tim.c **** 
2465:.//FWLIB/src/stm32f10x_tim.c **** /**
2466:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2467:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2468:.//FWLIB/src/stm32f10x_tim.c ****   * @retval Capture Compare 2 Register value.
2469:.//FWLIB/src/stm32f10x_tim.c ****   */
2470:.//FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2471:.//FWLIB/src/stm32f10x_tim.c **** {
2472:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2473:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2474:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 2 Register value */
2475:.//FWLIB/src/stm32f10x_tim.c ****   return TIMx->CCR2;
2476:.//FWLIB/src/stm32f10x_tim.c **** }
2477:.//FWLIB/src/stm32f10x_tim.c **** 
2478:.//FWLIB/src/stm32f10x_tim.c **** /**
2479:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2480:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2481:.//FWLIB/src/stm32f10x_tim.c ****   * @retval Capture Compare 3 Register value.
2482:.//FWLIB/src/stm32f10x_tim.c ****   */
2483:.//FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture3(TIM_TypeDef* TIMx)
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 45


2484:.//FWLIB/src/stm32f10x_tim.c **** {
2485:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2486:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2487:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 3 Register value */
2488:.//FWLIB/src/stm32f10x_tim.c ****   return TIMx->CCR3;
2489:.//FWLIB/src/stm32f10x_tim.c **** }
2490:.//FWLIB/src/stm32f10x_tim.c **** 
2491:.//FWLIB/src/stm32f10x_tim.c **** /**
2492:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2493:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2494:.//FWLIB/src/stm32f10x_tim.c ****   * @retval Capture Compare 4 Register value.
2495:.//FWLIB/src/stm32f10x_tim.c ****   */
2496:.//FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2497:.//FWLIB/src/stm32f10x_tim.c **** {
2498:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2499:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2500:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the Capture 4 Register value */
2501:.//FWLIB/src/stm32f10x_tim.c ****   return TIMx->CCR4;
2502:.//FWLIB/src/stm32f10x_tim.c **** }
2503:.//FWLIB/src/stm32f10x_tim.c **** 
2504:.//FWLIB/src/stm32f10x_tim.c **** /**
2505:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Counter value.
2506:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2507:.//FWLIB/src/stm32f10x_tim.c ****   * @retval Counter Register value.
2508:.//FWLIB/src/stm32f10x_tim.c ****   */
2509:.//FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetCounter(TIM_TypeDef* TIMx)
2510:.//FWLIB/src/stm32f10x_tim.c **** {
2511:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2512:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2513:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the Counter Register value */
2514:.//FWLIB/src/stm32f10x_tim.c ****   return TIMx->CNT;
2515:.//FWLIB/src/stm32f10x_tim.c **** }
2516:.//FWLIB/src/stm32f10x_tim.c **** 
2517:.//FWLIB/src/stm32f10x_tim.c **** /**
2518:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Prescaler value.
2519:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2520:.//FWLIB/src/stm32f10x_tim.c ****   * @retval Prescaler Register value.
2521:.//FWLIB/src/stm32f10x_tim.c ****   */
2522:.//FWLIB/src/stm32f10x_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
2523:.//FWLIB/src/stm32f10x_tim.c **** {
2524:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2525:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2526:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the Prescaler Register value */
2527:.//FWLIB/src/stm32f10x_tim.c ****   return TIMx->PSC;
2528:.//FWLIB/src/stm32f10x_tim.c **** }
2529:.//FWLIB/src/stm32f10x_tim.c **** 
2530:.//FWLIB/src/stm32f10x_tim.c **** /**
2531:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2532:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2533:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2534:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2535:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2536:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2537:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2538:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2539:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2540:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 46


2541:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2542:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2543:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2544:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2545:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2546:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2547:.//FWLIB/src/stm32f10x_tim.c ****   * @note
2548:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2549:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2550:.//FWLIB/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2551:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2552:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2553:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2554:.//FWLIB/src/stm32f10x_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2555:.//FWLIB/src/stm32f10x_tim.c ****   */
2556:.//FWLIB/src/stm32f10x_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2557:.//FWLIB/src/stm32f10x_tim.c **** { 
2558:.//FWLIB/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2559:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2560:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2561:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2562:.//FWLIB/src/stm32f10x_tim.c ****   
2563:.//FWLIB/src/stm32f10x_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2564:.//FWLIB/src/stm32f10x_tim.c ****   {
2565:.//FWLIB/src/stm32f10x_tim.c ****     bitstatus = SET;
2566:.//FWLIB/src/stm32f10x_tim.c ****   }
2567:.//FWLIB/src/stm32f10x_tim.c ****   else
2568:.//FWLIB/src/stm32f10x_tim.c ****   {
2569:.//FWLIB/src/stm32f10x_tim.c ****     bitstatus = RESET;
2570:.//FWLIB/src/stm32f10x_tim.c ****   }
2571:.//FWLIB/src/stm32f10x_tim.c ****   return bitstatus;
2572:.//FWLIB/src/stm32f10x_tim.c **** }
2573:.//FWLIB/src/stm32f10x_tim.c **** 
2574:.//FWLIB/src/stm32f10x_tim.c **** /**
2575:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's pending flags.
2576:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2577:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2578:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2579:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2580:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2581:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2582:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2583:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2584:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2585:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2586:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2587:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2588:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2589:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2590:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2591:.//FWLIB/src/stm32f10x_tim.c ****   * @note
2592:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2593:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2594:.//FWLIB/src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2595:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2596:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2597:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.   
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 47


2598:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2599:.//FWLIB/src/stm32f10x_tim.c ****   */
2600:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2601:.//FWLIB/src/stm32f10x_tim.c **** {  
2602:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2603:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2604:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_CLEAR_FLAG(TIM_FLAG));
2605:.//FWLIB/src/stm32f10x_tim.c ****    
2606:.//FWLIB/src/stm32f10x_tim.c ****   /* Clear the flags */
2607:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2608:.//FWLIB/src/stm32f10x_tim.c **** }
2609:.//FWLIB/src/stm32f10x_tim.c **** 
2610:.//FWLIB/src/stm32f10x_tim.c **** /**
2611:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2612:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2613:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2614:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2615:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
2616:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2617:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2618:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2619:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2620:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2621:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2622:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2623:.//FWLIB/src/stm32f10x_tim.c ****   * @note
2624:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2625:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2626:.//FWLIB/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2627:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2628:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2629:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.  
2630:.//FWLIB/src/stm32f10x_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2631:.//FWLIB/src/stm32f10x_tim.c ****   */
2632:.//FWLIB/src/stm32f10x_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2633:.//FWLIB/src/stm32f10x_tim.c **** {
2634:.//FWLIB/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2635:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2636:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2637:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2638:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2639:.//FWLIB/src/stm32f10x_tim.c ****    
2640:.//FWLIB/src/stm32f10x_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2641:.//FWLIB/src/stm32f10x_tim.c ****   
2642:.//FWLIB/src/stm32f10x_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2643:.//FWLIB/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2644:.//FWLIB/src/stm32f10x_tim.c ****   {
2645:.//FWLIB/src/stm32f10x_tim.c ****     bitstatus = SET;
2646:.//FWLIB/src/stm32f10x_tim.c ****   }
2647:.//FWLIB/src/stm32f10x_tim.c ****   else
2648:.//FWLIB/src/stm32f10x_tim.c ****   {
2649:.//FWLIB/src/stm32f10x_tim.c ****     bitstatus = RESET;
2650:.//FWLIB/src/stm32f10x_tim.c ****   }
2651:.//FWLIB/src/stm32f10x_tim.c ****   return bitstatus;
2652:.//FWLIB/src/stm32f10x_tim.c **** }
2653:.//FWLIB/src/stm32f10x_tim.c **** 
2654:.//FWLIB/src/stm32f10x_tim.c **** /**
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 48


2655:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2656:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2657:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2658:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2659:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM1 update Interrupt source
2660:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2661:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2662:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2663:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2664:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2665:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2666:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2667:.//FWLIB/src/stm32f10x_tim.c ****   * @note
2668:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2669:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2670:.//FWLIB/src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2671:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2672:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2673:.//FWLIB/src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2674:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2675:.//FWLIB/src/stm32f10x_tim.c ****   */
2676:.//FWLIB/src/stm32f10x_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2677:.//FWLIB/src/stm32f10x_tim.c **** {
2678:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
2679:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2680:.//FWLIB/src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2681:.//FWLIB/src/stm32f10x_tim.c ****   /* Clear the IT pending Bit */
2682:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2683:.//FWLIB/src/stm32f10x_tim.c **** }
2684:.//FWLIB/src/stm32f10x_tim.c **** 
2685:.//FWLIB/src/stm32f10x_tim.c **** /**
2686:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configure the TI1 as Input.
2687:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2688:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2689:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2690:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2691:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2692:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2693:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2694:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
2695:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
2696:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
2697:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2698:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2699:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2700:.//FWLIB/src/stm32f10x_tim.c ****   */
2701:.//FWLIB/src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2702:.//FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2703:.//FWLIB/src/stm32f10x_tim.c **** {
  27              		.loc 1 2703 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 30B4     		push	{r4, r5}
  34              	.LCFI0:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 49


  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 5, -4
  38              	.LVL1:
2704:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
2705:.//FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
2706:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC1E);
  39              		.loc 1 2706 0
  40 0002 048C     		ldrh	r4, [r0, #32]
  41 0004 A4B2     		uxth	r4, r4
  42 0006 24F00104 		bic	r4, r4, #1
  43 000a A4B2     		uxth	r4, r4
  44 000c 0484     		strh	r4, [r0, #32]	@ movhi
2707:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  45              		.loc 1 2707 0
  46 000e 048B     		ldrh	r4, [r0, #24]
  47 0010 A4B2     		uxth	r4, r4
  48              	.LVL2:
2708:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
  49              		.loc 1 2708 0
  50 0012 058C     		ldrh	r5, [r0, #32]
  51 0014 ADB2     		uxth	r5, r5
  52              	.LVL3:
2709:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2710:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
  53              		.loc 1 2710 0
  54 0016 24F0F304 		bic	r4, r4, #243
  55              	.LVL4:
2711:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  56              		.loc 1 2711 0
  57 001a 1B01     		lsls	r3, r3, #4
  58              	.LVL5:
  59 001c 9BB2     		uxth	r3, r3
  60 001e 1A43     		orrs	r2, r2, r3
  61              	.LVL6:
  62 0020 44EA0203 		orr	r3, r4, r2
  63              	.LVL7:
2712:.//FWLIB/src/stm32f10x_tim.c ****   
2713:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
  64              		.loc 1 2713 0
  65 0024 124A     		ldr	r2, .L6
  66 0026 9042     		cmp	r0, r2
  67 0028 12D0     		beq	.L2
  68              		.loc 1 2713 0 is_stmt 0 discriminator 1
  69 002a 02F50062 		add	r2, r2, #2048
  70 002e 9042     		cmp	r0, r2
  71 0030 0ED0     		beq	.L2
  72              		.loc 1 2713 0 discriminator 2
  73 0032 B0F1804F 		cmp	r0, #1073741824
  74 0036 0BD0     		beq	.L2
  75              		.loc 1 2713 0 discriminator 3
  76 0038 A2F59832 		sub	r2, r2, #77824
  77 003c 9042     		cmp	r0, r2
  78 003e 07D0     		beq	.L2
  79              		.loc 1 2713 0 discriminator 4
  80 0040 02F58062 		add	r2, r2, #1024
  81 0044 9042     		cmp	r0, r2
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 50


  82 0046 03D0     		beq	.L2
2714:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
  83              		.loc 1 2714 0 is_stmt 1
  84 0048 02F58062 		add	r2, r2, #1024
  85 004c 9042     		cmp	r0, r2
  86 004e 05D1     		bne	.L3
  87              	.L2:
2715:.//FWLIB/src/stm32f10x_tim.c ****   {
2716:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2717:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P));
  88              		.loc 1 2717 0
  89 0050 25F00205 		bic	r5, r5, #2
  90              	.LVL8:
2718:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  91              		.loc 1 2718 0
  92 0054 2943     		orrs	r1, r1, r5
  93              	.LVL9:
  94 0056 41F00101 		orr	r1, r1, #1
  95              	.LVL10:
  96 005a 04E0     		b	.L4
  97              	.LVL11:
  98              	.L3:
2719:.//FWLIB/src/stm32f10x_tim.c ****   }
2720:.//FWLIB/src/stm32f10x_tim.c ****   else
2721:.//FWLIB/src/stm32f10x_tim.c ****   {
2722:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2723:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P | TIM_CCER_CC1NP));
  99              		.loc 1 2723 0
 100 005c 25F00A02 		bic	r2, r5, #10
 101              	.LVL12:
2724:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 102              		.loc 1 2724 0
 103 0060 1143     		orrs	r1, r1, r2
 104              	.LVL13:
 105 0062 41F00101 		orr	r1, r1, #1
 106              	.LVL14:
 107              	.L4:
2725:.//FWLIB/src/stm32f10x_tim.c ****   }
2726:.//FWLIB/src/stm32f10x_tim.c **** 
2727:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2728:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 108              		.loc 1 2728 0
 109 0066 0383     		strh	r3, [r0, #24]	@ movhi
2729:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 110              		.loc 1 2729 0
 111 0068 0184     		strh	r1, [r0, #32]	@ movhi
2730:.//FWLIB/src/stm32f10x_tim.c **** }
 112              		.loc 1 2730 0
 113 006a 30BC     		pop	{r4, r5}
 114              	.LCFI1:
 115              		.cfi_restore 5
 116              		.cfi_restore 4
 117              		.cfi_def_cfa_offset 0
 118 006c 7047     		bx	lr
 119              	.L7:
 120 006e 00BF     		.align	2
 121              	.L6:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 51


 122 0070 002C0140 		.word	1073818624
 123              		.cfi_endproc
 124              	.LFE116:
 126              		.section	.text.TI2_Config,"ax",%progbits
 127              		.align	2
 128              		.thumb
 129              		.thumb_func
 131              	TI2_Config:
 132              	.LFB117:
2731:.//FWLIB/src/stm32f10x_tim.c **** 
2732:.//FWLIB/src/stm32f10x_tim.c **** /**
2733:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configure the TI2 as Input.
2734:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2735:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2736:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2737:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2738:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2739:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2740:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2741:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
2742:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
2743:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
2744:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2745:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2746:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2747:.//FWLIB/src/stm32f10x_tim.c ****   */
2748:.//FWLIB/src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2749:.//FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2750:.//FWLIB/src/stm32f10x_tim.c **** {
 133              		.loc 1 2750 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.LVL15:
 139 0000 70B4     		push	{r4, r5, r6}
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 12
 142              		.cfi_offset 4, -12
 143              		.cfi_offset 5, -8
 144              		.cfi_offset 6, -4
 145              	.LVL16:
2751:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
2752:.//FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
2753:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC2E);
 146              		.loc 1 2753 0
 147 0002 048C     		ldrh	r4, [r0, #32]
 148 0004 A4B2     		uxth	r4, r4
 149 0006 24F01004 		bic	r4, r4, #16
 150 000a A4B2     		uxth	r4, r4
 151 000c 0484     		strh	r4, [r0, #32]	@ movhi
2754:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 152              		.loc 1 2754 0
 153 000e 058B     		ldrh	r5, [r0, #24]
 154              	.LVL17:
2755:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 155              		.loc 1 2755 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 52


 156 0010 048C     		ldrh	r4, [r0, #32]
 157 0012 A4B2     		uxth	r4, r4
 158              	.LVL18:
2756:.//FWLIB/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 159              		.loc 1 2756 0
 160 0014 0E01     		lsls	r6, r1, #4
 161 0016 B6B2     		uxth	r6, r6
 162              	.LVL19:
2757:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2758:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC2S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 163              		.loc 1 2758 0
 164 0018 25F44075 		bic	r5, r5, #768
 165              	.LVL20:
 166 001c 2D05     		lsls	r5, r5, #20
 167 001e 2D0D     		lsrs	r5, r5, #20
 168              	.LVL21:
2759:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 169              		.loc 1 2759 0
 170 0020 1B03     		lsls	r3, r3, #12
 171              	.LVL22:
 172 0022 9BB2     		uxth	r3, r3
 173 0024 2B43     		orrs	r3, r3, r5
 174              	.LVL23:
2760:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 175              		.loc 1 2760 0
 176 0026 1202     		lsls	r2, r2, #8
 177              	.LVL24:
 178 0028 92B2     		uxth	r2, r2
 179 002a 1A43     		orrs	r2, r2, r3
 180              	.LVL25:
2761:.//FWLIB/src/stm32f10x_tim.c ****   
2762:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 181              		.loc 1 2762 0
 182 002c 124B     		ldr	r3, .L13
 183 002e 9842     		cmp	r0, r3
 184 0030 12D0     		beq	.L9
 185              		.loc 1 2762 0 is_stmt 0 discriminator 1
 186 0032 03F50063 		add	r3, r3, #2048
 187 0036 9842     		cmp	r0, r3
 188 0038 0ED0     		beq	.L9
 189              		.loc 1 2762 0 discriminator 2
 190 003a B0F1804F 		cmp	r0, #1073741824
 191 003e 0BD0     		beq	.L9
 192              		.loc 1 2762 0 discriminator 3
 193 0040 A3F59833 		sub	r3, r3, #77824
 194 0044 9842     		cmp	r0, r3
 195 0046 07D0     		beq	.L9
 196              		.loc 1 2762 0 discriminator 4
 197 0048 03F58063 		add	r3, r3, #1024
 198 004c 9842     		cmp	r0, r3
 199 004e 03D0     		beq	.L9
2763:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 200              		.loc 1 2763 0 is_stmt 1
 201 0050 03F58063 		add	r3, r3, #1024
 202 0054 9842     		cmp	r0, r3
 203 0056 05D1     		bne	.L10
 204              	.L9:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 53


2764:.//FWLIB/src/stm32f10x_tim.c ****   {
2765:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2766:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P));
 205              		.loc 1 2766 0
 206 0058 24F02001 		bic	r1, r4, #32
 207              	.LVL26:
2767:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 208              		.loc 1 2767 0
 209 005c 3143     		orrs	r1, r1, r6
 210              	.LVL27:
 211 005e 41F01001 		orr	r1, r1, #16
 212              	.LVL28:
 213 0062 04E0     		b	.L11
 214              	.LVL29:
 215              	.L10:
2768:.//FWLIB/src/stm32f10x_tim.c ****   }
2769:.//FWLIB/src/stm32f10x_tim.c ****   else
2770:.//FWLIB/src/stm32f10x_tim.c ****   {
2771:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2772:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P | TIM_CCER_CC2NP));
 216              		.loc 1 2772 0
 217 0064 24F0A004 		bic	r4, r4, #160
 218              	.LVL30:
2773:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC2E);
 219              		.loc 1 2773 0
 220 0068 2143     		orrs	r1, r1, r4
 221              	.LVL31:
 222 006a 41F01001 		orr	r1, r1, #16
 223              	.LVL32:
 224              	.L11:
2774:.//FWLIB/src/stm32f10x_tim.c ****   }
2775:.//FWLIB/src/stm32f10x_tim.c ****   
2776:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2777:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 225              		.loc 1 2777 0
 226 006e 0283     		strh	r2, [r0, #24]	@ movhi
2778:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 227              		.loc 1 2778 0
 228 0070 0184     		strh	r1, [r0, #32]	@ movhi
2779:.//FWLIB/src/stm32f10x_tim.c **** }
 229              		.loc 1 2779 0
 230 0072 70BC     		pop	{r4, r5, r6}
 231              	.LCFI3:
 232              		.cfi_restore 6
 233              		.cfi_restore 5
 234              		.cfi_restore 4
 235              		.cfi_def_cfa_offset 0
 236              	.LVL33:
 237 0074 7047     		bx	lr
 238              	.L14:
 239 0076 00BF     		.align	2
 240              	.L13:
 241 0078 002C0140 		.word	1073818624
 242              		.cfi_endproc
 243              	.LFE117:
 245              		.section	.text.TI3_Config,"ax",%progbits
 246              		.align	2
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 54


 247              		.thumb
 248              		.thumb_func
 250              	TI3_Config:
 251              	.LFB118:
2780:.//FWLIB/src/stm32f10x_tim.c **** 
2781:.//FWLIB/src/stm32f10x_tim.c **** /**
2782:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configure the TI3 as Input.
2783:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2784:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2785:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2786:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2787:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2788:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2789:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2790:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
2791:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
2792:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
2793:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2794:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2795:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2796:.//FWLIB/src/stm32f10x_tim.c ****   */
2797:.//FWLIB/src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2798:.//FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2799:.//FWLIB/src/stm32f10x_tim.c **** {
 252              		.loc 1 2799 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257              	.LVL34:
 258 0000 70B4     		push	{r4, r5, r6}
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 12
 261              		.cfi_offset 4, -12
 262              		.cfi_offset 5, -8
 263              		.cfi_offset 6, -4
 264              	.LVL35:
2800:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
2801:.//FWLIB/src/stm32f10x_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
2802:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC3E);
 265              		.loc 1 2802 0
 266 0002 048C     		ldrh	r4, [r0, #32]
 267 0004 A4B2     		uxth	r4, r4
 268 0006 24F48074 		bic	r4, r4, #256
 269 000a A4B2     		uxth	r4, r4
 270 000c 0484     		strh	r4, [r0, #32]	@ movhi
2803:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 271              		.loc 1 2803 0
 272 000e 848B     		ldrh	r4, [r0, #28]
 273 0010 A4B2     		uxth	r4, r4
 274              	.LVL36:
2804:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 275              		.loc 1 2804 0
 276 0012 058C     		ldrh	r5, [r0, #32]
 277 0014 AEB2     		uxth	r6, r5
 278              	.LVL37:
2805:.//FWLIB/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 55


 279              		.loc 1 2805 0
 280 0016 0D02     		lsls	r5, r1, #8
 281 0018 ADB2     		uxth	r5, r5
 282              	.LVL38:
2806:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2807:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR2_CC3S)) & ((uint16_t)~((uint16_t)TIM_CCMR2
 283              		.loc 1 2807 0
 284 001a 24F0F304 		bic	r4, r4, #243
 285              	.LVL39:
2808:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 286              		.loc 1 2808 0
 287 001e 1B01     		lsls	r3, r3, #4
 288              	.LVL40:
 289 0020 9BB2     		uxth	r3, r3
 290 0022 1A43     		orrs	r2, r2, r3
 291              	.LVL41:
 292 0024 44EA0203 		orr	r3, r4, r2
 293              	.LVL42:
2809:.//FWLIB/src/stm32f10x_tim.c ****     
2810:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 294              		.loc 1 2810 0
 295 0028 124A     		ldr	r2, .L20
 296 002a 9042     		cmp	r0, r2
 297 002c 12D0     		beq	.L16
 298              		.loc 1 2810 0 is_stmt 0 discriminator 1
 299 002e 02F50062 		add	r2, r2, #2048
 300 0032 9042     		cmp	r0, r2
 301 0034 0ED0     		beq	.L16
 302              		.loc 1 2810 0 discriminator 2
 303 0036 B0F1804F 		cmp	r0, #1073741824
 304 003a 0BD0     		beq	.L16
 305              		.loc 1 2810 0 discriminator 3
 306 003c A2F59832 		sub	r2, r2, #77824
 307 0040 9042     		cmp	r0, r2
 308 0042 07D0     		beq	.L16
 309              		.loc 1 2810 0 discriminator 4
 310 0044 02F58062 		add	r2, r2, #1024
 311 0048 9042     		cmp	r0, r2
 312 004a 03D0     		beq	.L16
2811:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 313              		.loc 1 2811 0 is_stmt 1
 314 004c 02F58062 		add	r2, r2, #1024
 315 0050 9042     		cmp	r0, r2
 316 0052 05D1     		bne	.L17
 317              	.L16:
2812:.//FWLIB/src/stm32f10x_tim.c ****   {
2813:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2814:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P));
 318              		.loc 1 2814 0
 319 0054 26F40071 		bic	r1, r6, #512
 320              	.LVL43:
2815:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 321              		.loc 1 2815 0
 322 0058 2943     		orrs	r1, r1, r5
 323              	.LVL44:
 324 005a 41F48071 		orr	r1, r1, #256
 325              	.LVL45:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 56


 326 005e 04E0     		b	.L18
 327              	.LVL46:
 328              	.L17:
2816:.//FWLIB/src/stm32f10x_tim.c ****   }
2817:.//FWLIB/src/stm32f10x_tim.c ****   else
2818:.//FWLIB/src/stm32f10x_tim.c ****   {
2819:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2820:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC3NP));
 329              		.loc 1 2820 0
 330 0060 26F42062 		bic	r2, r6, #2560
 331              	.LVL47:
2821:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC3E);
 332              		.loc 1 2821 0
 333 0064 1143     		orrs	r1, r1, r2
 334              	.LVL48:
 335 0066 41F48071 		orr	r1, r1, #256
 336              	.LVL49:
 337              	.L18:
2822:.//FWLIB/src/stm32f10x_tim.c ****   }
2823:.//FWLIB/src/stm32f10x_tim.c ****   
2824:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2825:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 338              		.loc 1 2825 0
 339 006a 8383     		strh	r3, [r0, #28]	@ movhi
2826:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 340              		.loc 1 2826 0
 341 006c 0184     		strh	r1, [r0, #32]	@ movhi
2827:.//FWLIB/src/stm32f10x_tim.c **** }
 342              		.loc 1 2827 0
 343 006e 70BC     		pop	{r4, r5, r6}
 344              	.LCFI5:
 345              		.cfi_restore 6
 346              		.cfi_restore 5
 347              		.cfi_restore 4
 348              		.cfi_def_cfa_offset 0
 349              	.LVL50:
 350 0070 7047     		bx	lr
 351              	.L21:
 352 0072 00BF     		.align	2
 353              	.L20:
 354 0074 002C0140 		.word	1073818624
 355              		.cfi_endproc
 356              	.LFE118:
 358              		.section	.text.TI4_Config,"ax",%progbits
 359              		.align	2
 360              		.thumb
 361              		.thumb_func
 363              	TI4_Config:
 364              	.LFB119:
2828:.//FWLIB/src/stm32f10x_tim.c **** 
2829:.//FWLIB/src/stm32f10x_tim.c **** /**
2830:.//FWLIB/src/stm32f10x_tim.c ****   * @brief  Configure the TI4 as Input.
2831:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2832:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2833:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2834:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2835:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 57


2836:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2837:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2838:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
2839:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
2840:.//FWLIB/src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
2841:.//FWLIB/src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2842:.//FWLIB/src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2843:.//FWLIB/src/stm32f10x_tim.c ****   * @retval None
2844:.//FWLIB/src/stm32f10x_tim.c ****   */
2845:.//FWLIB/src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2846:.//FWLIB/src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2847:.//FWLIB/src/stm32f10x_tim.c **** {
 365              		.loc 1 2847 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370              	.LVL51:
 371 0000 70B4     		push	{r4, r5, r6}
 372              	.LCFI6:
 373              		.cfi_def_cfa_offset 12
 374              		.cfi_offset 4, -12
 375              		.cfi_offset 5, -8
 376              		.cfi_offset 6, -4
 377              	.LVL52:
2848:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
2849:.//FWLIB/src/stm32f10x_tim.c **** 
2850:.//FWLIB/src/stm32f10x_tim.c ****    /* Disable the Channel 4: Reset the CC4E Bit */
2851:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC4E);
 378              		.loc 1 2851 0
 379 0002 058C     		ldrh	r5, [r0, #32]
 380 0004 ADB2     		uxth	r5, r5
 381 0006 25F48055 		bic	r5, r5, #4096
 382 000a ADB2     		uxth	r5, r5
 383 000c 0584     		strh	r5, [r0, #32]	@ movhi
2852:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 384              		.loc 1 2852 0
 385 000e 868B     		ldrh	r6, [r0, #28]
 386              	.LVL53:
2853:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 387              		.loc 1 2853 0
 388 0010 048C     		ldrh	r4, [r0, #32]
 389 0012 A4B2     		uxth	r4, r4
 390              	.LVL54:
2854:.//FWLIB/src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 391              		.loc 1 2854 0
 392 0014 0D03     		lsls	r5, r1, #12
 393 0016 ADB2     		uxth	r5, r5
 394              	.LVL55:
2855:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2856:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)((uint16_t)(~(uint16_t)TIM_CCMR2_CC4S) & ((uint16_t)~((uint16_t)TIM_CCMR2_I
 395              		.loc 1 2856 0
 396 0018 26F44076 		bic	r6, r6, #768
 397              	.LVL56:
 398 001c 3605     		lsls	r6, r6, #20
 399 001e 360D     		lsrs	r6, r6, #20
 400              	.LVL57:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 58


2857:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 401              		.loc 1 2857 0
 402 0020 1202     		lsls	r2, r2, #8
 403              	.LVL58:
 404 0022 92B2     		uxth	r2, r2
 405 0024 3243     		orrs	r2, r2, r6
 406              	.LVL59:
2858:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 407              		.loc 1 2858 0
 408 0026 1B03     		lsls	r3, r3, #12
 409              	.LVL60:
 410 0028 9BB2     		uxth	r3, r3
 411 002a 1343     		orrs	r3, r3, r2
 412              	.LVL61:
2859:.//FWLIB/src/stm32f10x_tim.c ****   
2860:.//FWLIB/src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 413              		.loc 1 2860 0
 414 002c 134A     		ldr	r2, .L27
 415 002e 9042     		cmp	r0, r2
 416 0030 12D0     		beq	.L23
 417              		.loc 1 2860 0 is_stmt 0 discriminator 1
 418 0032 02F50062 		add	r2, r2, #2048
 419 0036 9042     		cmp	r0, r2
 420 0038 0ED0     		beq	.L23
 421              		.loc 1 2860 0 discriminator 2
 422 003a B0F1804F 		cmp	r0, #1073741824
 423 003e 0BD0     		beq	.L23
 424              		.loc 1 2860 0 discriminator 3
 425 0040 A2F59832 		sub	r2, r2, #77824
 426 0044 9042     		cmp	r0, r2
 427 0046 07D0     		beq	.L23
 428              		.loc 1 2860 0 discriminator 4
 429 0048 02F58062 		add	r2, r2, #1024
 430 004c 9042     		cmp	r0, r2
 431 004e 03D0     		beq	.L23
2861:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 432              		.loc 1 2861 0 is_stmt 1
 433 0050 02F58062 		add	r2, r2, #1024
 434 0054 9042     		cmp	r0, r2
 435 0056 05D1     		bne	.L24
 436              	.L23:
2862:.//FWLIB/src/stm32f10x_tim.c ****   {
2863:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2864:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC4P));
 437              		.loc 1 2864 0
 438 0058 24F40054 		bic	r4, r4, #8192
 439              	.LVL62:
2865:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 440              		.loc 1 2865 0
 441 005c 2C43     		orrs	r4, r4, r5
 442              	.LVL63:
 443 005e 44F48054 		orr	r4, r4, #4096
 444              	.LVL64:
 445 0062 06E0     		b	.L25
 446              	.L24:
2866:.//FWLIB/src/stm32f10x_tim.c ****   }
2867:.//FWLIB/src/stm32f10x_tim.c ****   else
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 59


2868:.//FWLIB/src/stm32f10x_tim.c ****   {
2869:.//FWLIB/src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2870:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC4NP));
 447              		.loc 1 2870 0
 448 0064 24F40074 		bic	r4, r4, #512
 449              	.LVL65:
 450 0068 6404     		lsls	r4, r4, #17
 451 006a 640C     		lsrs	r4, r4, #17
 452              	.LVL66:
2871:.//FWLIB/src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC4E);
 453              		.loc 1 2871 0
 454 006c 0C43     		orrs	r4, r4, r1
 455              	.LVL67:
 456 006e 44F48054 		orr	r4, r4, #4096
 457              	.LVL68:
 458              	.L25:
2872:.//FWLIB/src/stm32f10x_tim.c ****   }
2873:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2874:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 459              		.loc 1 2874 0
 460 0072 8383     		strh	r3, [r0, #28]	@ movhi
2875:.//FWLIB/src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 461              		.loc 1 2875 0
 462 0074 0484     		strh	r4, [r0, #32]	@ movhi
2876:.//FWLIB/src/stm32f10x_tim.c **** }
 463              		.loc 1 2876 0
 464 0076 70BC     		pop	{r4, r5, r6}
 465              	.LCFI7:
 466              		.cfi_restore 6
 467              		.cfi_restore 5
 468              		.cfi_restore 4
 469              		.cfi_def_cfa_offset 0
 470              	.LVL69:
 471 0078 7047     		bx	lr
 472              	.L28:
 473 007a 00BF     		.align	2
 474              	.L27:
 475 007c 002C0140 		.word	1073818624
 476              		.cfi_endproc
 477              	.LFE119:
 479              		.section	.text.TIM_DeInit,"ax",%progbits
 480              		.align	2
 481              		.global	TIM_DeInit
 482              		.thumb
 483              		.thumb_func
 485              	TIM_DeInit:
 486              	.LFB29:
 123:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 487              		.loc 1 123 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              	.LVL70:
 492 0000 08B5     		push	{r3, lr}
 493              	.LCFI8:
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 3, -8
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 60


 496              		.cfi_offset 14, -4
 127:.//FWLIB/src/stm32f10x_tim.c ****   {
 497              		.loc 1 127 0
 498 0002 6F4B     		ldr	r3, .L48
 499 0004 9842     		cmp	r0, r3
 500 0006 0AD1     		bne	.L30
 129:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 501              		.loc 1 129 0
 502 0008 0121     		movs	r1, #1
 503 000a 4FF40060 		mov	r0, #2048
 504              	.LVL71:
 505 000e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 506              	.LVL72:
 130:.//FWLIB/src/stm32f10x_tim.c ****   }     
 507              		.loc 1 130 0
 508 0012 0021     		movs	r1, #0
 509 0014 4FF40060 		mov	r0, #2048
 510 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 511              	.LVL73:
 512 001c 08BD     		pop	{r3, pc}
 513              	.LVL74:
 514              	.L30:
 132:.//FWLIB/src/stm32f10x_tim.c ****   {
 515              		.loc 1 132 0
 516 001e B0F1804F 		cmp	r0, #1073741824
 517 0022 08D1     		bne	.L32
 134:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 518              		.loc 1 134 0
 519 0024 0121     		movs	r1, #1
 520 0026 0846     		mov	r0, r1
 521              	.LVL75:
 522 0028 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 523              	.LVL76:
 135:.//FWLIB/src/stm32f10x_tim.c ****   }
 524              		.loc 1 135 0
 525 002c 0021     		movs	r1, #0
 526 002e 0120     		movs	r0, #1
 527 0030 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 528              	.LVL77:
 529 0034 08BD     		pop	{r3, pc}
 530              	.LVL78:
 531              	.L32:
 137:.//FWLIB/src/stm32f10x_tim.c ****   {
 532              		.loc 1 137 0
 533 0036 634B     		ldr	r3, .L48+4
 534 0038 9842     		cmp	r0, r3
 535 003a 08D1     		bne	.L33
 139:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 536              		.loc 1 139 0
 537 003c 0121     		movs	r1, #1
 538 003e 0220     		movs	r0, #2
 539              	.LVL79:
 540 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 541              	.LVL80:
 140:.//FWLIB/src/stm32f10x_tim.c ****   }
 542              		.loc 1 140 0
 543 0044 0021     		movs	r1, #0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 61


 544 0046 0220     		movs	r0, #2
 545 0048 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 546              	.LVL81:
 547 004c 08BD     		pop	{r3, pc}
 548              	.LVL82:
 549              	.L33:
 142:.//FWLIB/src/stm32f10x_tim.c ****   {
 550              		.loc 1 142 0
 551 004e 5E4B     		ldr	r3, .L48+8
 552 0050 9842     		cmp	r0, r3
 553 0052 08D1     		bne	.L34
 144:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 554              		.loc 1 144 0
 555 0054 0121     		movs	r1, #1
 556 0056 0420     		movs	r0, #4
 557              	.LVL83:
 558 0058 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 559              	.LVL84:
 145:.//FWLIB/src/stm32f10x_tim.c ****   } 
 560              		.loc 1 145 0
 561 005c 0021     		movs	r1, #0
 562 005e 0420     		movs	r0, #4
 563 0060 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 564              	.LVL85:
 565 0064 08BD     		pop	{r3, pc}
 566              	.LVL86:
 567              	.L34:
 147:.//FWLIB/src/stm32f10x_tim.c ****   {
 568              		.loc 1 147 0
 569 0066 594B     		ldr	r3, .L48+12
 570 0068 9842     		cmp	r0, r3
 571 006a 08D1     		bne	.L35
 149:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 572              		.loc 1 149 0
 573 006c 0121     		movs	r1, #1
 574 006e 0820     		movs	r0, #8
 575              	.LVL87:
 576 0070 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 577              	.LVL88:
 150:.//FWLIB/src/stm32f10x_tim.c ****   } 
 578              		.loc 1 150 0
 579 0074 0021     		movs	r1, #0
 580 0076 0820     		movs	r0, #8
 581 0078 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 582              	.LVL89:
 583 007c 08BD     		pop	{r3, pc}
 584              	.LVL90:
 585              	.L35:
 152:.//FWLIB/src/stm32f10x_tim.c ****   {
 586              		.loc 1 152 0
 587 007e 544B     		ldr	r3, .L48+16
 588 0080 9842     		cmp	r0, r3
 589 0082 08D1     		bne	.L36
 154:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 590              		.loc 1 154 0
 591 0084 0121     		movs	r1, #1
 592 0086 1020     		movs	r0, #16
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 62


 593              	.LVL91:
 594 0088 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 595              	.LVL92:
 155:.//FWLIB/src/stm32f10x_tim.c ****   } 
 596              		.loc 1 155 0
 597 008c 0021     		movs	r1, #0
 598 008e 1020     		movs	r0, #16
 599 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 600              	.LVL93:
 601 0094 08BD     		pop	{r3, pc}
 602              	.LVL94:
 603              	.L36:
 157:.//FWLIB/src/stm32f10x_tim.c ****   {
 604              		.loc 1 157 0
 605 0096 4F4B     		ldr	r3, .L48+20
 606 0098 9842     		cmp	r0, r3
 607 009a 08D1     		bne	.L37
 159:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 608              		.loc 1 159 0
 609 009c 0121     		movs	r1, #1
 610 009e 2020     		movs	r0, #32
 611              	.LVL95:
 612 00a0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 613              	.LVL96:
 160:.//FWLIB/src/stm32f10x_tim.c ****   } 
 614              		.loc 1 160 0
 615 00a4 0021     		movs	r1, #0
 616 00a6 2020     		movs	r0, #32
 617 00a8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 618              	.LVL97:
 619 00ac 08BD     		pop	{r3, pc}
 620              	.LVL98:
 621              	.L37:
 162:.//FWLIB/src/stm32f10x_tim.c ****   {
 622              		.loc 1 162 0
 623 00ae 4A4B     		ldr	r3, .L48+24
 624 00b0 9842     		cmp	r0, r3
 625 00b2 0AD1     		bne	.L38
 164:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 626              		.loc 1 164 0
 627 00b4 0121     		movs	r1, #1
 628 00b6 4FF40050 		mov	r0, #8192
 629              	.LVL99:
 630 00ba FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 631              	.LVL100:
 165:.//FWLIB/src/stm32f10x_tim.c ****   }
 632              		.loc 1 165 0
 633 00be 0021     		movs	r1, #0
 634 00c0 4FF40050 		mov	r0, #8192
 635 00c4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 636              	.LVL101:
 637 00c8 08BD     		pop	{r3, pc}
 638              	.LVL102:
 639              	.L38:
 167:.//FWLIB/src/stm32f10x_tim.c ****   {      
 640              		.loc 1 167 0
 641 00ca 444B     		ldr	r3, .L48+28
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 63


 642 00cc 9842     		cmp	r0, r3
 643 00ce 0AD1     		bne	.L39
 169:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 644              		.loc 1 169 0
 645 00d0 0121     		movs	r1, #1
 646 00d2 4FF40020 		mov	r0, #524288
 647              	.LVL103:
 648 00d6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 649              	.LVL104:
 170:.//FWLIB/src/stm32f10x_tim.c ****    }  
 650              		.loc 1 170 0
 651 00da 0021     		movs	r1, #0
 652 00dc 4FF40020 		mov	r0, #524288
 653 00e0 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 654              	.LVL105:
 655 00e4 08BD     		pop	{r3, pc}
 656              	.LVL106:
 657              	.L39:
 172:.//FWLIB/src/stm32f10x_tim.c ****   {      
 658              		.loc 1 172 0
 659 00e6 3E4B     		ldr	r3, .L48+32
 660 00e8 9842     		cmp	r0, r3
 661 00ea 0AD1     		bne	.L40
 174:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 662              		.loc 1 174 0
 663 00ec 0121     		movs	r1, #1
 664 00ee 4FF48010 		mov	r0, #1048576
 665              	.LVL107:
 666 00f2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 667              	.LVL108:
 175:.//FWLIB/src/stm32f10x_tim.c ****   }  
 668              		.loc 1 175 0
 669 00f6 0021     		movs	r1, #0
 670 00f8 4FF48010 		mov	r0, #1048576
 671 00fc FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 672              	.LVL109:
 673 0100 08BD     		pop	{r3, pc}
 674              	.LVL110:
 675              	.L40:
 177:.//FWLIB/src/stm32f10x_tim.c ****   {     
 676              		.loc 1 177 0
 677 0102 384B     		ldr	r3, .L48+36
 678 0104 9842     		cmp	r0, r3
 679 0106 0AD1     		bne	.L41
 179:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 680              		.loc 1 179 0
 681 0108 0121     		movs	r1, #1
 682 010a 4FF40010 		mov	r0, #2097152
 683              	.LVL111:
 684 010e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 685              	.LVL112:
 180:.//FWLIB/src/stm32f10x_tim.c ****   }  
 686              		.loc 1 180 0
 687 0112 0021     		movs	r1, #0
 688 0114 4FF40010 		mov	r0, #2097152
 689 0118 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 690              	.LVL113:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 64


 691 011c 08BD     		pop	{r3, pc}
 692              	.LVL114:
 693              	.L41:
 182:.//FWLIB/src/stm32f10x_tim.c ****   {      
 694              		.loc 1 182 0
 695 011e 324B     		ldr	r3, .L48+40
 696 0120 9842     		cmp	r0, r3
 697 0122 08D1     		bne	.L42
 184:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 698              		.loc 1 184 0
 699 0124 0121     		movs	r1, #1
 700 0126 4020     		movs	r0, #64
 701              	.LVL115:
 702 0128 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 703              	.LVL116:
 185:.//FWLIB/src/stm32f10x_tim.c ****   }  
 704              		.loc 1 185 0
 705 012c 0021     		movs	r1, #0
 706 012e 4020     		movs	r0, #64
 707 0130 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 708              	.LVL117:
 709 0134 08BD     		pop	{r3, pc}
 710              	.LVL118:
 711              	.L42:
 187:.//FWLIB/src/stm32f10x_tim.c ****   {       
 712              		.loc 1 187 0
 713 0136 2D4B     		ldr	r3, .L48+44
 714 0138 9842     		cmp	r0, r3
 715 013a 08D1     		bne	.L43
 189:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 716              		.loc 1 189 0
 717 013c 0121     		movs	r1, #1
 718 013e 8020     		movs	r0, #128
 719              	.LVL119:
 720 0140 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 721              	.LVL120:
 190:.//FWLIB/src/stm32f10x_tim.c ****   }
 722              		.loc 1 190 0
 723 0144 0021     		movs	r1, #0
 724 0146 8020     		movs	r0, #128
 725 0148 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 726              	.LVL121:
 727 014c 08BD     		pop	{r3, pc}
 728              	.LVL122:
 729              	.L43:
 192:.//FWLIB/src/stm32f10x_tim.c ****   {       
 730              		.loc 1 192 0
 731 014e 284B     		ldr	r3, .L48+48
 732 0150 9842     		cmp	r0, r3
 733 0152 0AD1     		bne	.L44
 194:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 734              		.loc 1 194 0
 735 0154 0121     		movs	r1, #1
 736 0156 4FF48070 		mov	r0, #256
 737              	.LVL123:
 738 015a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 739              	.LVL124:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 65


 195:.//FWLIB/src/stm32f10x_tim.c ****   }        
 740              		.loc 1 195 0
 741 015e 0021     		movs	r1, #0
 742 0160 4FF48070 		mov	r0, #256
 743 0164 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 744              	.LVL125:
 745 0168 08BD     		pop	{r3, pc}
 746              	.LVL126:
 747              	.L44:
 197:.//FWLIB/src/stm32f10x_tim.c ****   {
 748              		.loc 1 197 0
 749 016a 224B     		ldr	r3, .L48+52
 750 016c 9842     		cmp	r0, r3
 751 016e 0AD1     		bne	.L45
 199:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 752              		.loc 1 199 0
 753 0170 0121     		movs	r1, #1
 754 0172 4FF48030 		mov	r0, #65536
 755              	.LVL127:
 756 0176 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 757              	.LVL128:
 200:.//FWLIB/src/stm32f10x_tim.c ****   } 
 758              		.loc 1 200 0
 759 017a 0021     		movs	r1, #0
 760 017c 4FF48030 		mov	r0, #65536
 761 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 762              	.LVL129:
 763 0184 08BD     		pop	{r3, pc}
 764              	.LVL130:
 765              	.L45:
 202:.//FWLIB/src/stm32f10x_tim.c ****   {
 766              		.loc 1 202 0
 767 0186 1C4B     		ldr	r3, .L48+56
 768 0188 9842     		cmp	r0, r3
 769 018a 0AD1     		bne	.L46
 204:.//FWLIB/src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 770              		.loc 1 204 0
 771 018c 0121     		movs	r1, #1
 772 018e 4FF40030 		mov	r0, #131072
 773              	.LVL131:
 774 0192 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 775              	.LVL132:
 205:.//FWLIB/src/stm32f10x_tim.c ****   } 
 776              		.loc 1 205 0
 777 0196 0021     		movs	r1, #0
 778 0198 4FF40030 		mov	r0, #131072
 779 019c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 780              	.LVL133:
 781 01a0 08BD     		pop	{r3, pc}
 782              	.LVL134:
 783              	.L46:
 209:.//FWLIB/src/stm32f10x_tim.c ****     {
 784              		.loc 1 209 0
 785 01a2 164B     		ldr	r3, .L48+60
 786 01a4 9842     		cmp	r0, r3
 787 01a6 09D1     		bne	.L29
 211:.//FWLIB/src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 66


 788              		.loc 1 211 0
 789 01a8 0121     		movs	r1, #1
 790 01aa 4FF48020 		mov	r0, #262144
 791              	.LVL135:
 792 01ae FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 793              	.LVL136:
 212:.//FWLIB/src/stm32f10x_tim.c ****     }  
 794              		.loc 1 212 0
 795 01b2 0021     		movs	r1, #0
 796 01b4 4FF48020 		mov	r0, #262144
 797 01b8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 798              	.LVL137:
 799              	.L29:
 800 01bc 08BD     		pop	{r3, pc}
 801              	.L49:
 802 01be 00BF     		.align	2
 803              	.L48:
 804 01c0 002C0140 		.word	1073818624
 805 01c4 00040040 		.word	1073742848
 806 01c8 00080040 		.word	1073743872
 807 01cc 000C0040 		.word	1073744896
 808 01d0 00100040 		.word	1073745920
 809 01d4 00140040 		.word	1073746944
 810 01d8 00340140 		.word	1073820672
 811 01dc 004C0140 		.word	1073826816
 812 01e0 00500140 		.word	1073827840
 813 01e4 00540140 		.word	1073828864
 814 01e8 00180040 		.word	1073747968
 815 01ec 001C0040 		.word	1073748992
 816 01f0 00200040 		.word	1073750016
 817 01f4 00400140 		.word	1073823744
 818 01f8 00440140 		.word	1073824768
 819 01fc 00480140 		.word	1073825792
 820              		.cfi_endproc
 821              	.LFE29:
 823              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 824              		.align	2
 825              		.global	TIM_TimeBaseInit
 826              		.thumb
 827              		.thumb_func
 829              	TIM_TimeBaseInit:
 830              	.LFB30:
 227:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 831              		.loc 1 227 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836              	.LVL138:
 235:.//FWLIB/src/stm32f10x_tim.c **** 
 837              		.loc 1 235 0
 838 0000 0388     		ldrh	r3, [r0]
 839 0002 9BB2     		uxth	r3, r3
 840              	.LVL139:
 237:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 841              		.loc 1 237 0
 842 0004 214A     		ldr	r2, .L56
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 67


 843 0006 9042     		cmp	r0, r2
 844 0008 12D0     		beq	.L51
 237:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 845              		.loc 1 237 0 is_stmt 0 discriminator 1
 846 000a 02F50062 		add	r2, r2, #2048
 847 000e 9042     		cmp	r0, r2
 848 0010 0ED0     		beq	.L51
 237:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 849              		.loc 1 237 0 discriminator 2
 850 0012 B0F1804F 		cmp	r0, #1073741824
 851 0016 0BD0     		beq	.L51
 237:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 852              		.loc 1 237 0 discriminator 3
 853 0018 A2F59832 		sub	r2, r2, #77824
 854 001c 9042     		cmp	r0, r2
 855 001e 07D0     		beq	.L51
 237:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 856              		.loc 1 237 0 discriminator 4
 857 0020 02F58062 		add	r2, r2, #1024
 858 0024 9042     		cmp	r0, r2
 859 0026 03D0     		beq	.L51
 238:.//FWLIB/src/stm32f10x_tim.c ****   {
 860              		.loc 1 238 0 is_stmt 1
 861 0028 02F58062 		add	r2, r2, #1024
 862 002c 9042     		cmp	r0, r2
 863 002e 03D1     		bne	.L52
 864              	.L51:
 241:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 865              		.loc 1 241 0
 866 0030 23F07003 		bic	r3, r3, #112
 867              	.LVL140:
 242:.//FWLIB/src/stm32f10x_tim.c ****   }
 868              		.loc 1 242 0
 869 0034 4A88     		ldrh	r2, [r1, #2]
 870 0036 1343     		orrs	r3, r3, r2
 871              	.LVL141:
 872              	.L52:
 245:.//FWLIB/src/stm32f10x_tim.c ****   {
 873              		.loc 1 245 0
 874 0038 154A     		ldr	r2, .L56+4
 875 003a 9042     		cmp	r0, r2
 876 003c 08D0     		beq	.L53
 245:.//FWLIB/src/stm32f10x_tim.c ****   {
 877              		.loc 1 245 0 is_stmt 0 discriminator 1
 878 003e 02F58062 		add	r2, r2, #1024
 879 0042 9042     		cmp	r0, r2
 880 0044 04D0     		beq	.L53
 248:.//FWLIB/src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 881              		.loc 1 248 0 is_stmt 1
 882 0046 23F44073 		bic	r3, r3, #768
 883              	.LVL142:
 884 004a 9BB2     		uxth	r3, r3
 885              	.LVL143:
 249:.//FWLIB/src/stm32f10x_tim.c ****   }
 886              		.loc 1 249 0
 887 004c CA88     		ldrh	r2, [r1, #6]
 888 004e 1343     		orrs	r3, r3, r2
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 68


 889              	.LVL144:
 890              	.L53:
 252:.//FWLIB/src/stm32f10x_tim.c **** 
 891              		.loc 1 252 0
 892 0050 0380     		strh	r3, [r0]	@ movhi
 255:.//FWLIB/src/stm32f10x_tim.c ****  
 893              		.loc 1 255 0
 894 0052 8B88     		ldrh	r3, [r1, #4]
 895              	.LVL145:
 896 0054 8385     		strh	r3, [r0, #44]	@ movhi
 897              	.LVL146:
 258:.//FWLIB/src/stm32f10x_tim.c ****     
 898              		.loc 1 258 0
 899 0056 0B88     		ldrh	r3, [r1]
 900 0058 0385     		strh	r3, [r0, #40]	@ movhi
 260:.//FWLIB/src/stm32f10x_tim.c ****   {
 901              		.loc 1 260 0
 902 005a 0C4B     		ldr	r3, .L56
 903 005c 9842     		cmp	r0, r3
 904 005e 0FD0     		beq	.L54
 260:.//FWLIB/src/stm32f10x_tim.c ****   {
 905              		.loc 1 260 0 is_stmt 0 discriminator 1
 906 0060 03F50063 		add	r3, r3, #2048
 907 0064 9842     		cmp	r0, r3
 908 0066 0BD0     		beq	.L54
 260:.//FWLIB/src/stm32f10x_tim.c ****   {
 909              		.loc 1 260 0 discriminator 2
 910 0068 03F54063 		add	r3, r3, #3072
 911 006c 9842     		cmp	r0, r3
 912 006e 07D0     		beq	.L54
 260:.//FWLIB/src/stm32f10x_tim.c ****   {
 913              		.loc 1 260 0 discriminator 3
 914 0070 03F58063 		add	r3, r3, #1024
 915 0074 9842     		cmp	r0, r3
 916 0076 03D0     		beq	.L54
 260:.//FWLIB/src/stm32f10x_tim.c ****   {
 917              		.loc 1 260 0 discriminator 4
 918 0078 03F58063 		add	r3, r3, #1024
 919 007c 9842     		cmp	r0, r3
 920 007e 01D1     		bne	.L55
 921              	.L54:
 263:.//FWLIB/src/stm32f10x_tim.c ****   }
 922              		.loc 1 263 0 is_stmt 1
 923 0080 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 924 0082 0386     		strh	r3, [r0, #48]	@ movhi
 925              	.L55:
 268:.//FWLIB/src/stm32f10x_tim.c **** }
 926              		.loc 1 268 0
 927 0084 0123     		movs	r3, #1
 928 0086 8382     		strh	r3, [r0, #20]	@ movhi
 929 0088 7047     		bx	lr
 930              	.L57:
 931 008a 00BF     		.align	2
 932              	.L56:
 933 008c 002C0140 		.word	1073818624
 934 0090 00100040 		.word	1073745920
 935              		.cfi_endproc
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 69


 936              	.LFE30:
 938              		.section	.text.TIM_OC1Init,"ax",%progbits
 939              		.align	2
 940              		.global	TIM_OC1Init
 941              		.thumb
 942              		.thumb_func
 944              	TIM_OC1Init:
 945              	.LFB31:
 280:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 946              		.loc 1 280 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              		@ link register save eliminated.
 951              	.LVL147:
 952 0000 30B4     		push	{r4, r5}
 953              	.LCFI9:
 954              		.cfi_def_cfa_offset 8
 955              		.cfi_offset 4, -8
 956              		.cfi_offset 5, -4
 957              	.LVL148:
 289:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 958              		.loc 1 289 0
 959 0002 038C     		ldrh	r3, [r0, #32]
 960 0004 9BB2     		uxth	r3, r3
 961 0006 23F00103 		bic	r3, r3, #1
 962 000a 9BB2     		uxth	r3, r3
 963 000c 0384     		strh	r3, [r0, #32]	@ movhi
 291:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 964              		.loc 1 291 0
 965 000e 038C     		ldrh	r3, [r0, #32]
 966 0010 9BB2     		uxth	r3, r3
 967              	.LVL149:
 293:.//FWLIB/src/stm32f10x_tim.c ****   
 968              		.loc 1 293 0
 969 0012 8288     		ldrh	r2, [r0, #4]
 970 0014 92B2     		uxth	r2, r2
 971              	.LVL150:
 296:.//FWLIB/src/stm32f10x_tim.c ****     
 972              		.loc 1 296 0
 973 0016 048B     		ldrh	r4, [r0, #24]
 974 0018 A4B2     		uxth	r4, r4
 975              	.LVL151:
 300:.//FWLIB/src/stm32f10x_tim.c **** 
 976              		.loc 1 300 0
 977 001a 24F07304 		bic	r4, r4, #115
 978              	.LVL152:
 303:.//FWLIB/src/stm32f10x_tim.c ****   
 979              		.loc 1 303 0
 980 001e 0D88     		ldrh	r5, [r1]
 981 0020 2C43     		orrs	r4, r4, r5
 982              	.LVL153:
 306:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 983              		.loc 1 306 0
 984 0022 23F00203 		bic	r3, r3, #2
 985              	.LVL154:
 308:.//FWLIB/src/stm32f10x_tim.c ****   
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 70


 986              		.loc 1 308 0
 987 0026 0D89     		ldrh	r5, [r1, #8]
 988 0028 2B43     		orrs	r3, r3, r5
 989              	.LVL155:
 311:.//FWLIB/src/stm32f10x_tim.c ****     
 990              		.loc 1 311 0
 991 002a 4D88     		ldrh	r5, [r1, #2]
 992 002c 2B43     		orrs	r3, r3, r5
 993              	.LVL156:
 313:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 994              		.loc 1 313 0
 995 002e 144D     		ldr	r5, .L62
 996 0030 A842     		cmp	r0, r5
 997 0032 0FD0     		beq	.L59
 313:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 998              		.loc 1 313 0 is_stmt 0 discriminator 1
 999 0034 05F50065 		add	r5, r5, #2048
 1000 0038 A842     		cmp	r0, r5
 1001 003a 0BD0     		beq	.L59
 313:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1002              		.loc 1 313 0 discriminator 2
 1003 003c 05F54065 		add	r5, r5, #3072
 1004 0040 A842     		cmp	r0, r5
 1005 0042 07D0     		beq	.L59
 313:.//FWLIB/src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 1006              		.loc 1 313 0 discriminator 3
 1007 0044 05F58065 		add	r5, r5, #1024
 1008 0048 A842     		cmp	r0, r5
 1009 004a 03D0     		beq	.L59
 314:.//FWLIB/src/stm32f10x_tim.c ****   {
 1010              		.loc 1 314 0 is_stmt 1
 1011 004c 05F58065 		add	r5, r5, #1024
 1012 0050 A842     		cmp	r0, r5
 1013 0052 0DD1     		bne	.L60
 1014              	.L59:
 322:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1015              		.loc 1 322 0
 1016 0054 23F00803 		bic	r3, r3, #8
 1017              	.LVL157:
 324:.//FWLIB/src/stm32f10x_tim.c ****     
 1018              		.loc 1 324 0
 1019 0058 4D89     		ldrh	r5, [r1, #10]
 1020 005a 2B43     		orrs	r3, r3, r5
 1021              	.LVL158:
 327:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 1022              		.loc 1 327 0
 1023 005c 23F00403 		bic	r3, r3, #4
 1024              	.LVL159:
 329:.//FWLIB/src/stm32f10x_tim.c ****     
 1025              		.loc 1 329 0
 1026 0060 8D88     		ldrh	r5, [r1, #4]
 1027 0062 2B43     		orrs	r3, r3, r5
 1028              	.LVL160:
 333:.//FWLIB/src/stm32f10x_tim.c ****     
 1029              		.loc 1 333 0
 1030 0064 22F44072 		bic	r2, r2, #768
 1031              	.LVL161:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 71


 336:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1032              		.loc 1 336 0
 1033 0068 8D89     		ldrh	r5, [r1, #12]
 1034 006a 2A43     		orrs	r2, r2, r5
 1035              	.LVL162:
 338:.//FWLIB/src/stm32f10x_tim.c ****   }
 1036              		.loc 1 338 0
 1037 006c CD89     		ldrh	r5, [r1, #14]
 1038 006e 2A43     		orrs	r2, r2, r5
 1039              	.LVL163:
 1040              	.L60:
 341:.//FWLIB/src/stm32f10x_tim.c ****   
 1041              		.loc 1 341 0
 1042 0070 8280     		strh	r2, [r0, #4]	@ movhi
 344:.//FWLIB/src/stm32f10x_tim.c **** 
 1043              		.loc 1 344 0
 1044 0072 0483     		strh	r4, [r0, #24]	@ movhi
 347:.//FWLIB/src/stm32f10x_tim.c ****  
 1045              		.loc 1 347 0
 1046 0074 CA88     		ldrh	r2, [r1, #6]
 1047              	.LVL164:
 1048 0076 8286     		strh	r2, [r0, #52]	@ movhi
 350:.//FWLIB/src/stm32f10x_tim.c **** }
 1049              		.loc 1 350 0
 1050 0078 0384     		strh	r3, [r0, #32]	@ movhi
 351:.//FWLIB/src/stm32f10x_tim.c **** 
 1051              		.loc 1 351 0
 1052 007a 30BC     		pop	{r4, r5}
 1053              	.LCFI10:
 1054              		.cfi_restore 5
 1055              		.cfi_restore 4
 1056              		.cfi_def_cfa_offset 0
 1057              	.LVL165:
 1058 007c 7047     		bx	lr
 1059              	.L63:
 1060 007e 00BF     		.align	2
 1061              	.L62:
 1062 0080 002C0140 		.word	1073818624
 1063              		.cfi_endproc
 1064              	.LFE31:
 1066              		.section	.text.TIM_OC2Init,"ax",%progbits
 1067              		.align	2
 1068              		.global	TIM_OC2Init
 1069              		.thumb
 1070              		.thumb_func
 1072              	TIM_OC2Init:
 1073              	.LFB32:
 363:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1074              		.loc 1 363 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              		@ link register save eliminated.
 1079              	.LVL166:
 1080 0000 30B4     		push	{r4, r5}
 1081              	.LCFI11:
 1082              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 72


 1083              		.cfi_offset 4, -8
 1084              		.cfi_offset 5, -4
 1085              	.LVL167:
 372:.//FWLIB/src/stm32f10x_tim.c ****   
 1086              		.loc 1 372 0
 1087 0002 038C     		ldrh	r3, [r0, #32]
 1088 0004 9BB2     		uxth	r3, r3
 1089 0006 23F01003 		bic	r3, r3, #16
 1090 000a 9BB2     		uxth	r3, r3
 1091 000c 0384     		strh	r3, [r0, #32]	@ movhi
 375:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1092              		.loc 1 375 0
 1093 000e 028C     		ldrh	r2, [r0, #32]
 1094 0010 92B2     		uxth	r2, r2
 1095              	.LVL168:
 377:.//FWLIB/src/stm32f10x_tim.c ****   
 1096              		.loc 1 377 0
 1097 0012 8588     		ldrh	r5, [r0, #4]
 1098 0014 ADB2     		uxth	r5, r5
 1099              	.LVL169:
 380:.//FWLIB/src/stm32f10x_tim.c ****     
 1100              		.loc 1 380 0
 1101 0016 048B     		ldrh	r4, [r0, #24]
 1102 0018 A4B2     		uxth	r4, r4
 1103              	.LVL170:
 384:.//FWLIB/src/stm32f10x_tim.c ****   
 1104              		.loc 1 384 0
 1105 001a 24F4E644 		bic	r4, r4, #29440
 1106              	.LVL171:
 387:.//FWLIB/src/stm32f10x_tim.c ****   
 1107              		.loc 1 387 0
 1108 001e 0B88     		ldrh	r3, [r1]
 1109 0020 1B02     		lsls	r3, r3, #8
 1110 0022 9BB2     		uxth	r3, r3
 1111 0024 1C43     		orrs	r4, r4, r3
 1112              	.LVL172:
 390:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1113              		.loc 1 390 0
 1114 0026 22F02002 		bic	r2, r2, #32
 1115              	.LVL173:
 392:.//FWLIB/src/stm32f10x_tim.c ****   
 1116              		.loc 1 392 0
 1117 002a 0B89     		ldrh	r3, [r1, #8]
 1118 002c 1B01     		lsls	r3, r3, #4
 1119 002e 9BB2     		uxth	r3, r3
 1120 0030 1A43     		orrs	r2, r2, r3
 1121              	.LVL174:
 395:.//FWLIB/src/stm32f10x_tim.c ****     
 1122              		.loc 1 395 0
 1123 0032 4B88     		ldrh	r3, [r1, #2]
 1124 0034 1B01     		lsls	r3, r3, #4
 1125 0036 9BB2     		uxth	r3, r3
 1126 0038 1343     		orrs	r3, r3, r2
 1127              	.LVL175:
 397:.//FWLIB/src/stm32f10x_tim.c ****   {
 1128              		.loc 1 397 0
 1129 003a 124A     		ldr	r2, .L68
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 73


 1130 003c 9042     		cmp	r0, r2
 1131 003e 03D0     		beq	.L65
 397:.//FWLIB/src/stm32f10x_tim.c ****   {
 1132              		.loc 1 397 0 is_stmt 0 discriminator 1
 1133 0040 02F50062 		add	r2, r2, #2048
 1134 0044 9042     		cmp	r0, r2
 1135 0046 15D1     		bne	.L66
 1136              	.L65:
 405:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1137              		.loc 1 405 0 is_stmt 1
 1138 0048 23F08003 		bic	r3, r3, #128
 1139              	.LVL176:
 407:.//FWLIB/src/stm32f10x_tim.c ****     
 1140              		.loc 1 407 0
 1141 004c 4A89     		ldrh	r2, [r1, #10]
 1142 004e 1201     		lsls	r2, r2, #4
 1143 0050 92B2     		uxth	r2, r2
 1144 0052 1343     		orrs	r3, r3, r2
 1145              	.LVL177:
 410:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N State */
 1146              		.loc 1 410 0
 1147 0054 23F04002 		bic	r2, r3, #64
 1148              	.LVL178:
 412:.//FWLIB/src/stm32f10x_tim.c ****     
 1149              		.loc 1 412 0
 1150 0058 8B88     		ldrh	r3, [r1, #4]
 1151 005a 1B01     		lsls	r3, r3, #4
 1152 005c 9BB2     		uxth	r3, r3
 1153 005e 1343     		orrs	r3, r3, r2
 1154              	.LVL179:
 416:.//FWLIB/src/stm32f10x_tim.c ****     
 1155              		.loc 1 416 0
 1156 0060 25F44065 		bic	r5, r5, #3072
 1157              	.LVL180:
 419:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1158              		.loc 1 419 0
 1159 0064 8A89     		ldrh	r2, [r1, #12]
 1160 0066 9200     		lsls	r2, r2, #2
 1161 0068 92B2     		uxth	r2, r2
 1162 006a 2A43     		orrs	r2, r2, r5
 1163              	.LVL181:
 421:.//FWLIB/src/stm32f10x_tim.c ****   }
 1164              		.loc 1 421 0
 1165 006c CD89     		ldrh	r5, [r1, #14]
 1166 006e AD00     		lsls	r5, r5, #2
 1167 0070 ADB2     		uxth	r5, r5
 1168 0072 1543     		orrs	r5, r5, r2
 1169              	.LVL182:
 1170              	.L66:
 424:.//FWLIB/src/stm32f10x_tim.c ****   
 1171              		.loc 1 424 0
 1172 0074 8580     		strh	r5, [r0, #4]	@ movhi
 427:.//FWLIB/src/stm32f10x_tim.c **** 
 1173              		.loc 1 427 0
 1174 0076 0483     		strh	r4, [r0, #24]	@ movhi
 430:.//FWLIB/src/stm32f10x_tim.c ****   
 1175              		.loc 1 430 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 74


 1176 0078 CA88     		ldrh	r2, [r1, #6]
 1177 007a 0287     		strh	r2, [r0, #56]	@ movhi
 433:.//FWLIB/src/stm32f10x_tim.c **** }
 1178              		.loc 1 433 0
 1179 007c 0384     		strh	r3, [r0, #32]	@ movhi
 434:.//FWLIB/src/stm32f10x_tim.c **** 
 1180              		.loc 1 434 0
 1181 007e 30BC     		pop	{r4, r5}
 1182              	.LCFI12:
 1183              		.cfi_restore 5
 1184              		.cfi_restore 4
 1185              		.cfi_def_cfa_offset 0
 1186              	.LVL183:
 1187 0080 7047     		bx	lr
 1188              	.L69:
 1189 0082 00BF     		.align	2
 1190              	.L68:
 1191 0084 002C0140 		.word	1073818624
 1192              		.cfi_endproc
 1193              	.LFE32:
 1195              		.section	.text.TIM_OC3Init,"ax",%progbits
 1196              		.align	2
 1197              		.global	TIM_OC3Init
 1198              		.thumb
 1199              		.thumb_func
 1201              	TIM_OC3Init:
 1202              	.LFB33:
 445:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1203              		.loc 1 445 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              		@ link register save eliminated.
 1208              	.LVL184:
 1209 0000 30B4     		push	{r4, r5}
 1210              	.LCFI13:
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 4, -8
 1213              		.cfi_offset 5, -4
 1214              	.LVL185:
 454:.//FWLIB/src/stm32f10x_tim.c ****   
 1215              		.loc 1 454 0
 1216 0002 038C     		ldrh	r3, [r0, #32]
 1217 0004 9BB2     		uxth	r3, r3
 1218 0006 23F48073 		bic	r3, r3, #256
 1219 000a 9BB2     		uxth	r3, r3
 1220 000c 0384     		strh	r3, [r0, #32]	@ movhi
 457:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1221              		.loc 1 457 0
 1222 000e 028C     		ldrh	r2, [r0, #32]
 1223 0010 92B2     		uxth	r2, r2
 1224              	.LVL186:
 459:.//FWLIB/src/stm32f10x_tim.c ****   
 1225              		.loc 1 459 0
 1226 0012 8488     		ldrh	r4, [r0, #4]
 1227 0014 A4B2     		uxth	r4, r4
 1228              	.LVL187:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 75


 462:.//FWLIB/src/stm32f10x_tim.c ****     
 1229              		.loc 1 462 0
 1230 0016 838B     		ldrh	r3, [r0, #28]
 1231 0018 9BB2     		uxth	r3, r3
 1232              	.LVL188:
 466:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 1233              		.loc 1 466 0
 1234 001a 23F07303 		bic	r3, r3, #115
 1235              	.LVL189:
 468:.//FWLIB/src/stm32f10x_tim.c ****   
 1236              		.loc 1 468 0
 1237 001e 0D88     		ldrh	r5, [r1]
 1238 0020 1D43     		orrs	r5, r5, r3
 1239              	.LVL190:
 471:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1240              		.loc 1 471 0
 1241 0022 22F40072 		bic	r2, r2, #512
 1242              	.LVL191:
 473:.//FWLIB/src/stm32f10x_tim.c ****   
 1243              		.loc 1 473 0
 1244 0026 0B89     		ldrh	r3, [r1, #8]
 1245 0028 1B02     		lsls	r3, r3, #8
 1246 002a 9BB2     		uxth	r3, r3
 1247 002c 1A43     		orrs	r2, r2, r3
 1248              	.LVL192:
 476:.//FWLIB/src/stm32f10x_tim.c ****     
 1249              		.loc 1 476 0
 1250 002e 4B88     		ldrh	r3, [r1, #2]
 1251 0030 1B02     		lsls	r3, r3, #8
 1252 0032 9BB2     		uxth	r3, r3
 1253 0034 1343     		orrs	r3, r3, r2
 1254              	.LVL193:
 478:.//FWLIB/src/stm32f10x_tim.c ****   {
 1255              		.loc 1 478 0
 1256 0036 124A     		ldr	r2, .L74
 1257 0038 9042     		cmp	r0, r2
 1258 003a 03D0     		beq	.L71
 478:.//FWLIB/src/stm32f10x_tim.c ****   {
 1259              		.loc 1 478 0 is_stmt 0 discriminator 1
 1260 003c 02F50062 		add	r2, r2, #2048
 1261 0040 9042     		cmp	r0, r2
 1262 0042 15D1     		bne	.L72
 1263              	.L71:
 486:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1264              		.loc 1 486 0 is_stmt 1
 1265 0044 23F40063 		bic	r3, r3, #2048
 1266              	.LVL194:
 488:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output N State */
 1267              		.loc 1 488 0
 1268 0048 4A89     		ldrh	r2, [r1, #10]
 1269 004a 1202     		lsls	r2, r2, #8
 1270 004c 92B2     		uxth	r2, r2
 1271 004e 1343     		orrs	r3, r3, r2
 1272              	.LVL195:
 490:.//FWLIB/src/stm32f10x_tim.c ****     
 1273              		.loc 1 490 0
 1274 0050 23F48062 		bic	r2, r3, #1024
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 76


 1275              	.LVL196:
 493:.//FWLIB/src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1276              		.loc 1 493 0
 1277 0054 8B88     		ldrh	r3, [r1, #4]
 1278 0056 1B02     		lsls	r3, r3, #8
 1279 0058 9BB2     		uxth	r3, r3
 1280 005a 1343     		orrs	r3, r3, r2
 1281              	.LVL197:
 496:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1282              		.loc 1 496 0
 1283 005c 24F44054 		bic	r4, r4, #12288
 1284              	.LVL198:
 498:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1285              		.loc 1 498 0
 1286 0060 8A89     		ldrh	r2, [r1, #12]
 1287 0062 1201     		lsls	r2, r2, #4
 1288 0064 92B2     		uxth	r2, r2
 1289 0066 2243     		orrs	r2, r2, r4
 1290              	.LVL199:
 500:.//FWLIB/src/stm32f10x_tim.c ****   }
 1291              		.loc 1 500 0
 1292 0068 CC89     		ldrh	r4, [r1, #14]
 1293 006a 2401     		lsls	r4, r4, #4
 1294 006c A4B2     		uxth	r4, r4
 1295 006e 1443     		orrs	r4, r4, r2
 1296              	.LVL200:
 1297              	.L72:
 503:.//FWLIB/src/stm32f10x_tim.c ****   
 1298              		.loc 1 503 0
 1299 0070 8480     		strh	r4, [r0, #4]	@ movhi
 506:.//FWLIB/src/stm32f10x_tim.c **** 
 1300              		.loc 1 506 0
 1301 0072 8583     		strh	r5, [r0, #28]	@ movhi
 509:.//FWLIB/src/stm32f10x_tim.c ****   
 1302              		.loc 1 509 0
 1303 0074 CA88     		ldrh	r2, [r1, #6]
 1304 0076 8287     		strh	r2, [r0, #60]	@ movhi
 512:.//FWLIB/src/stm32f10x_tim.c **** }
 1305              		.loc 1 512 0
 1306 0078 0384     		strh	r3, [r0, #32]	@ movhi
 513:.//FWLIB/src/stm32f10x_tim.c **** 
 1307              		.loc 1 513 0
 1308 007a 30BC     		pop	{r4, r5}
 1309              	.LCFI14:
 1310              		.cfi_restore 5
 1311              		.cfi_restore 4
 1312              		.cfi_def_cfa_offset 0
 1313              	.LVL201:
 1314 007c 7047     		bx	lr
 1315              	.L75:
 1316 007e 00BF     		.align	2
 1317              	.L74:
 1318 0080 002C0140 		.word	1073818624
 1319              		.cfi_endproc
 1320              	.LFE33:
 1322              		.section	.text.TIM_OC4Init,"ax",%progbits
 1323              		.align	2
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 77


 1324              		.global	TIM_OC4Init
 1325              		.thumb
 1326              		.thumb_func
 1328              	TIM_OC4Init:
 1329              	.LFB34:
 524:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1330              		.loc 1 524 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335              	.LVL202:
 1336 0000 30B4     		push	{r4, r5}
 1337              	.LCFI15:
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 4, -8
 1340              		.cfi_offset 5, -4
 1341              	.LVL203:
 533:.//FWLIB/src/stm32f10x_tim.c ****   
 1342              		.loc 1 533 0
 1343 0002 038C     		ldrh	r3, [r0, #32]
 1344 0004 9BB2     		uxth	r3, r3
 1345 0006 23F48053 		bic	r3, r3, #4096
 1346 000a 9BB2     		uxth	r3, r3
 1347 000c 0384     		strh	r3, [r0, #32]	@ movhi
 536:.//FWLIB/src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1348              		.loc 1 536 0
 1349 000e 048C     		ldrh	r4, [r0, #32]
 1350 0010 A4B2     		uxth	r4, r4
 1351              	.LVL204:
 538:.//FWLIB/src/stm32f10x_tim.c ****   
 1352              		.loc 1 538 0
 1353 0012 8588     		ldrh	r5, [r0, #4]
 1354 0014 ADB2     		uxth	r5, r5
 1355              	.LVL205:
 541:.//FWLIB/src/stm32f10x_tim.c ****     
 1356              		.loc 1 541 0
 1357 0016 828B     		ldrh	r2, [r0, #28]
 1358 0018 92B2     		uxth	r2, r2
 1359              	.LVL206:
 545:.//FWLIB/src/stm32f10x_tim.c ****   
 1360              		.loc 1 545 0
 1361 001a 22F4E642 		bic	r2, r2, #29440
 1362              	.LVL207:
 548:.//FWLIB/src/stm32f10x_tim.c ****   
 1363              		.loc 1 548 0
 1364 001e 0B88     		ldrh	r3, [r1]
 1365 0020 1B02     		lsls	r3, r3, #8
 1366 0022 9BB2     		uxth	r3, r3
 1367 0024 1A43     		orrs	r2, r2, r3
 1368              	.LVL208:
 551:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1369              		.loc 1 551 0
 1370 0026 24F40054 		bic	r4, r4, #8192
 1371              	.LVL209:
 553:.//FWLIB/src/stm32f10x_tim.c ****   
 1372              		.loc 1 553 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 78


 1373 002a 0B89     		ldrh	r3, [r1, #8]
 1374 002c 1B03     		lsls	r3, r3, #12
 1375 002e 9BB2     		uxth	r3, r3
 1376 0030 1C43     		orrs	r4, r4, r3
 1377              	.LVL210:
 556:.//FWLIB/src/stm32f10x_tim.c ****     
 1378              		.loc 1 556 0
 1379 0032 4B88     		ldrh	r3, [r1, #2]
 1380 0034 1B03     		lsls	r3, r3, #12
 1381 0036 9BB2     		uxth	r3, r3
 1382 0038 2343     		orrs	r3, r3, r4
 1383              	.LVL211:
 558:.//FWLIB/src/stm32f10x_tim.c ****   {
 1384              		.loc 1 558 0
 1385 003a 0A4C     		ldr	r4, .L80
 1386 003c A042     		cmp	r0, r4
 1387 003e 03D0     		beq	.L77
 558:.//FWLIB/src/stm32f10x_tim.c ****   {
 1388              		.loc 1 558 0 is_stmt 0 discriminator 1
 1389 0040 04F50064 		add	r4, r4, #2048
 1390 0044 A042     		cmp	r0, r4
 1391 0046 05D1     		bne	.L78
 1392              	.L77:
 562:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1393              		.loc 1 562 0 is_stmt 1
 1394 0048 25F48045 		bic	r5, r5, #16384
 1395              	.LVL212:
 564:.//FWLIB/src/stm32f10x_tim.c ****   }
 1396              		.loc 1 564 0
 1397 004c 8C89     		ldrh	r4, [r1, #12]
 1398 004e A401     		lsls	r4, r4, #6
 1399 0050 A4B2     		uxth	r4, r4
 1400 0052 2543     		orrs	r5, r5, r4
 1401              	.LVL213:
 1402              	.L78:
 567:.//FWLIB/src/stm32f10x_tim.c ****   
 1403              		.loc 1 567 0
 1404 0054 8580     		strh	r5, [r0, #4]	@ movhi
 570:.//FWLIB/src/stm32f10x_tim.c **** 
 1405              		.loc 1 570 0
 1406 0056 8283     		strh	r2, [r0, #28]	@ movhi
 573:.//FWLIB/src/stm32f10x_tim.c ****   
 1407              		.loc 1 573 0
 1408 0058 CA88     		ldrh	r2, [r1, #6]
 1409              	.LVL214:
 1410 005a A0F84020 		strh	r2, [r0, #64]	@ movhi
 1411              	.LVL215:
 576:.//FWLIB/src/stm32f10x_tim.c **** }
 1412              		.loc 1 576 0
 1413 005e 0384     		strh	r3, [r0, #32]	@ movhi
 577:.//FWLIB/src/stm32f10x_tim.c **** 
 1414              		.loc 1 577 0
 1415 0060 30BC     		pop	{r4, r5}
 1416              	.LCFI16:
 1417              		.cfi_restore 5
 1418              		.cfi_restore 4
 1419              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 79


 1420              	.LVL216:
 1421 0062 7047     		bx	lr
 1422              	.L81:
 1423              		.align	2
 1424              	.L80:
 1425 0064 002C0140 		.word	1073818624
 1426              		.cfi_endproc
 1427              	.LFE34:
 1429              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 1430              		.align	2
 1431              		.global	TIM_BDTRConfig
 1432              		.thumb
 1433              		.thumb_func
 1435              	TIM_BDTRConfig:
 1436              	.LFB37:
 713:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1437              		.loc 1 713 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              	.LVL217:
 1442 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1443              	.LCFI17:
 1444              		.cfi_def_cfa_offset 20
 1445              		.cfi_offset 4, -20
 1446              		.cfi_offset 5, -16
 1447              		.cfi_offset 6, -12
 1448              		.cfi_offset 7, -8
 1449              		.cfi_offset 14, -4
 724:.//FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1450              		.loc 1 724 0
 1451 0002 B1F800E0 		ldrh	lr, [r1]
 1452 0006 4C88     		ldrh	r4, [r1, #2]
 725:.//FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 1453              		.loc 1 725 0
 1454 0008 8A88     		ldrh	r2, [r1, #4]
 1455 000a CF88     		ldrh	r7, [r1, #6]
 726:.//FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 1456              		.loc 1 726 0
 1457 000c 0B89     		ldrh	r3, [r1, #8]
 1458 000e 4E89     		ldrh	r6, [r1, #10]
 727:.//FWLIB/src/stm32f10x_tim.c **** }
 1459              		.loc 1 727 0
 1460 0010 8D89     		ldrh	r5, [r1, #12]
 724:.//FWLIB/src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1461              		.loc 1 724 0
 1462 0012 4EEA0401 		orr	r1, lr, r4
 1463              	.LVL218:
 1464 0016 1143     		orrs	r1, r1, r2
 1465 0018 47EA0102 		orr	r2, r7, r1
 1466 001c 1A43     		orrs	r2, r2, r3
 1467 001e 46EA0203 		orr	r3, r6, r2
 1468 0022 2B43     		orrs	r3, r3, r5
 1469 0024 A0F84430 		strh	r3, [r0, #68]	@ movhi
 1470 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 1471              		.cfi_endproc
 1472              	.LFE37:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 80


 1474 002a 00BF     		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 1475              		.align	2
 1476              		.global	TIM_TimeBaseStructInit
 1477              		.thumb
 1478              		.thumb_func
 1480              	TIM_TimeBaseStructInit:
 1481              	.LFB38:
 737:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1482              		.loc 1 737 0
 1483              		.cfi_startproc
 1484              		@ args = 0, pretend = 0, frame = 0
 1485              		@ frame_needed = 0, uses_anonymous_args = 0
 1486              		@ link register save eliminated.
 1487              	.LVL219:
 739:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 1488              		.loc 1 739 0
 1489 0000 4FF6FF73 		movw	r3, #65535
 1490 0004 8380     		strh	r3, [r0, #4]	@ movhi
 740:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 1491              		.loc 1 740 0
 1492 0006 0023     		movs	r3, #0
 1493 0008 0380     		strh	r3, [r0]	@ movhi
 741:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 1494              		.loc 1 741 0
 1495 000a C380     		strh	r3, [r0, #6]	@ movhi
 742:.//FWLIB/src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 1496              		.loc 1 742 0
 1497 000c 4380     		strh	r3, [r0, #2]	@ movhi
 743:.//FWLIB/src/stm32f10x_tim.c **** }
 1498              		.loc 1 743 0
 1499 000e 0372     		strb	r3, [r0, #8]
 1500 0010 7047     		bx	lr
 1501              		.cfi_endproc
 1502              	.LFE38:
 1504 0012 00BF     		.section	.text.TIM_OCStructInit,"ax",%progbits
 1505              		.align	2
 1506              		.global	TIM_OCStructInit
 1507              		.thumb
 1508              		.thumb_func
 1510              	TIM_OCStructInit:
 1511              	.LFB39:
 753:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1512              		.loc 1 753 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 1517              	.LVL220:
 755:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1518              		.loc 1 755 0
 1519 0000 0023     		movs	r3, #0
 1520 0002 0380     		strh	r3, [r0]	@ movhi
 756:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1521              		.loc 1 756 0
 1522 0004 4380     		strh	r3, [r0, #2]	@ movhi
 757:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 1523              		.loc 1 757 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 81


 1524 0006 8380     		strh	r3, [r0, #4]	@ movhi
 758:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1525              		.loc 1 758 0
 1526 0008 C380     		strh	r3, [r0, #6]	@ movhi
 759:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1527              		.loc 1 759 0
 1528 000a 0381     		strh	r3, [r0, #8]	@ movhi
 760:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1529              		.loc 1 760 0
 1530 000c 4381     		strh	r3, [r0, #10]	@ movhi
 761:.//FWLIB/src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1531              		.loc 1 761 0
 1532 000e 8381     		strh	r3, [r0, #12]	@ movhi
 762:.//FWLIB/src/stm32f10x_tim.c **** }
 1533              		.loc 1 762 0
 1534 0010 C381     		strh	r3, [r0, #14]	@ movhi
 1535 0012 7047     		bx	lr
 1536              		.cfi_endproc
 1537              	.LFE39:
 1539              		.section	.text.TIM_ICStructInit,"ax",%progbits
 1540              		.align	2
 1541              		.global	TIM_ICStructInit
 1542              		.thumb
 1543              		.thumb_func
 1545              	TIM_ICStructInit:
 1546              	.LFB40:
 772:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1547              		.loc 1 772 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551              		@ link register save eliminated.
 1552              	.LVL221:
 774:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 1553              		.loc 1 774 0
 1554 0000 0023     		movs	r3, #0
 1555 0002 0380     		strh	r3, [r0]	@ movhi
 775:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 1556              		.loc 1 775 0
 1557 0004 4380     		strh	r3, [r0, #2]	@ movhi
 776:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 1558              		.loc 1 776 0
 1559 0006 0122     		movs	r2, #1
 1560 0008 8280     		strh	r2, [r0, #4]	@ movhi
 777:.//FWLIB/src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 1561              		.loc 1 777 0
 1562 000a C380     		strh	r3, [r0, #6]	@ movhi
 778:.//FWLIB/src/stm32f10x_tim.c **** }
 1563              		.loc 1 778 0
 1564 000c 0381     		strh	r3, [r0, #8]	@ movhi
 1565 000e 7047     		bx	lr
 1566              		.cfi_endproc
 1567              	.LFE40:
 1569              		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 1570              		.align	2
 1571              		.global	TIM_BDTRStructInit
 1572              		.thumb
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 82


 1573              		.thumb_func
 1575              	TIM_BDTRStructInit:
 1576              	.LFB41:
 788:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the default configuration */
 1577              		.loc 1 788 0
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 0
 1580              		@ frame_needed = 0, uses_anonymous_args = 0
 1581              		@ link register save eliminated.
 1582              	.LVL222:
 790:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 1583              		.loc 1 790 0
 1584 0000 0023     		movs	r3, #0
 1585 0002 0380     		strh	r3, [r0]	@ movhi
 791:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 1586              		.loc 1 791 0
 1587 0004 4380     		strh	r3, [r0, #2]	@ movhi
 792:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 1588              		.loc 1 792 0
 1589 0006 8380     		strh	r3, [r0, #4]	@ movhi
 793:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 1590              		.loc 1 793 0
 1591 0008 C380     		strh	r3, [r0, #6]	@ movhi
 794:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 1592              		.loc 1 794 0
 1593 000a 0381     		strh	r3, [r0, #8]	@ movhi
 795:.//FWLIB/src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 1594              		.loc 1 795 0
 1595 000c 4381     		strh	r3, [r0, #10]	@ movhi
 796:.//FWLIB/src/stm32f10x_tim.c **** }
 1596              		.loc 1 796 0
 1597 000e 8381     		strh	r3, [r0, #12]	@ movhi
 1598 0010 7047     		bx	lr
 1599              		.cfi_endproc
 1600              	.LFE41:
 1602 0012 00BF     		.section	.text.TIM_Cmd,"ax",%progbits
 1603              		.align	2
 1604              		.global	TIM_Cmd
 1605              		.thumb
 1606              		.thumb_func
 1608              	TIM_Cmd:
 1609              	.LFB42:
 807:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1610              		.loc 1 807 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615              	.LVL223:
 812:.//FWLIB/src/stm32f10x_tim.c ****   {
 1616              		.loc 1 812 0
 1617 0000 29B1     		cbz	r1, .L89
 815:.//FWLIB/src/stm32f10x_tim.c ****   }
 1618              		.loc 1 815 0
 1619 0002 0388     		ldrh	r3, [r0]
 1620 0004 9BB2     		uxth	r3, r3
 1621 0006 43F00103 		orr	r3, r3, #1
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 83


 1622 000a 0380     		strh	r3, [r0]	@ movhi
 1623 000c 7047     		bx	lr
 1624              	.L89:
 820:.//FWLIB/src/stm32f10x_tim.c ****   }
 1625              		.loc 1 820 0
 1626 000e 0388     		ldrh	r3, [r0]
 1627 0010 9BB2     		uxth	r3, r3
 1628 0012 23F00103 		bic	r3, r3, #1
 1629 0016 9BB2     		uxth	r3, r3
 1630 0018 0380     		strh	r3, [r0]	@ movhi
 1631 001a 7047     		bx	lr
 1632              		.cfi_endproc
 1633              	.LFE42:
 1635              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 1636              		.align	2
 1637              		.global	TIM_CtrlPWMOutputs
 1638              		.thumb
 1639              		.thumb_func
 1641              	TIM_CtrlPWMOutputs:
 1642              	.LFB43:
 832:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1643              		.loc 1 832 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
 1648              	.LVL224:
 836:.//FWLIB/src/stm32f10x_tim.c ****   {
 1649              		.loc 1 836 0
 1650 0000 49B1     		cbz	r1, .L92
 839:.//FWLIB/src/stm32f10x_tim.c ****   }
 1651              		.loc 1 839 0
 1652 0002 B0F84430 		ldrh	r3, [r0, #68]
 1653 0006 6FEA4343 		mvn	r3, r3, lsl #17
 1654 000a 6FEA5343 		mvn	r3, r3, lsr #17
 1655 000e 9BB2     		uxth	r3, r3
 1656 0010 A0F84430 		strh	r3, [r0, #68]	@ movhi
 1657 0014 7047     		bx	lr
 1658              	.L92:
 844:.//FWLIB/src/stm32f10x_tim.c ****   }  
 1659              		.loc 1 844 0
 1660 0016 B0F84430 		ldrh	r3, [r0, #68]
 1661 001a C3F30E03 		ubfx	r3, r3, #0, #15
 1662 001e A0F84430 		strh	r3, [r0, #68]	@ movhi
 1663 0022 7047     		bx	lr
 1664              		.cfi_endproc
 1665              	.LFE43:
 1667              		.section	.text.TIM_ITConfig,"ax",%progbits
 1668              		.align	2
 1669              		.global	TIM_ITConfig
 1670              		.thumb
 1671              		.thumb_func
 1673              	TIM_ITConfig:
 1674              	.LFB44:
 873:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1675              		.loc 1 873 0
 1676              		.cfi_startproc
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 84


 1677              		@ args = 0, pretend = 0, frame = 0
 1678              		@ frame_needed = 0, uses_anonymous_args = 0
 1679              		@ link register save eliminated.
 1680              	.LVL225:
 879:.//FWLIB/src/stm32f10x_tim.c ****   {
 1681              		.loc 1 879 0
 1682 0000 22B1     		cbz	r2, .L95
 882:.//FWLIB/src/stm32f10x_tim.c ****   }
 1683              		.loc 1 882 0
 1684 0002 8389     		ldrh	r3, [r0, #12]
 1685 0004 9BB2     		uxth	r3, r3
 1686 0006 1943     		orrs	r1, r1, r3
 1687              	.LVL226:
 1688 0008 8181     		strh	r1, [r0, #12]	@ movhi
 1689 000a 7047     		bx	lr
 1690              	.LVL227:
 1691              	.L95:
 887:.//FWLIB/src/stm32f10x_tim.c ****   }
 1692              		.loc 1 887 0
 1693 000c 8389     		ldrh	r3, [r0, #12]
 1694 000e C943     		mvns	r1, r1
 1695              	.LVL228:
 1696 0010 89B2     		uxth	r1, r1
 1697 0012 1940     		ands	r1, r1, r3
 1698 0014 8181     		strh	r1, [r0, #12]	@ movhi
 1699 0016 7047     		bx	lr
 1700              		.cfi_endproc
 1701              	.LFE44:
 1703              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 1704              		.align	2
 1705              		.global	TIM_GenerateEvent
 1706              		.thumb
 1707              		.thumb_func
 1709              	TIM_GenerateEvent:
 1710              	.LFB45:
 910:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1711              		.loc 1 910 0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715              		@ link register save eliminated.
 1716              	.LVL229:
 916:.//FWLIB/src/stm32f10x_tim.c **** }
 1717              		.loc 1 916 0
 1718 0000 8182     		strh	r1, [r0, #20]	@ movhi
 1719 0002 7047     		bx	lr
 1720              		.cfi_endproc
 1721              	.LFE45:
 1723              		.section	.text.TIM_DMAConfig,"ax",%progbits
 1724              		.align	2
 1725              		.global	TIM_DMAConfig
 1726              		.thumb
 1727              		.thumb_func
 1729              	TIM_DMAConfig:
 1730              	.LFB46:
 938:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1731              		.loc 1 938 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 85


 1732              		.cfi_startproc
 1733              		@ args = 0, pretend = 0, frame = 0
 1734              		@ frame_needed = 0, uses_anonymous_args = 0
 1735              		@ link register save eliminated.
 1736              	.LVL230:
 944:.//FWLIB/src/stm32f10x_tim.c **** }
 1737              		.loc 1 944 0
 1738 0000 0A43     		orrs	r2, r2, r1
 1739              	.LVL231:
 1740 0002 A0F84820 		strh	r2, [r0, #72]	@ movhi
 1741 0006 7047     		bx	lr
 1742              		.cfi_endproc
 1743              	.LFE46:
 1745              		.section	.text.TIM_DMACmd,"ax",%progbits
 1746              		.align	2
 1747              		.global	TIM_DMACmd
 1748              		.thumb
 1749              		.thumb_func
 1751              	TIM_DMACmd:
 1752              	.LFB47:
 965:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1753              		.loc 1 965 0
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 0
 1756              		@ frame_needed = 0, uses_anonymous_args = 0
 1757              		@ link register save eliminated.
 1758              	.LVL232:
 971:.//FWLIB/src/stm32f10x_tim.c ****   {
 1759              		.loc 1 971 0
 1760 0000 22B1     		cbz	r2, .L100
 974:.//FWLIB/src/stm32f10x_tim.c ****   }
 1761              		.loc 1 974 0
 1762 0002 8389     		ldrh	r3, [r0, #12]
 1763 0004 9BB2     		uxth	r3, r3
 1764 0006 1943     		orrs	r1, r1, r3
 1765              	.LVL233:
 1766 0008 8181     		strh	r1, [r0, #12]	@ movhi
 1767 000a 7047     		bx	lr
 1768              	.LVL234:
 1769              	.L100:
 979:.//FWLIB/src/stm32f10x_tim.c ****   }
 1770              		.loc 1 979 0
 1771 000c 8389     		ldrh	r3, [r0, #12]
 1772 000e C943     		mvns	r1, r1
 1773              	.LVL235:
 1774 0010 89B2     		uxth	r1, r1
 1775 0012 1940     		ands	r1, r1, r3
 1776 0014 8181     		strh	r1, [r0, #12]	@ movhi
 1777 0016 7047     		bx	lr
 1778              		.cfi_endproc
 1779              	.LFE47:
 1781              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 1782              		.align	2
 1783              		.global	TIM_InternalClockConfig
 1784              		.thumb
 1785              		.thumb_func
 1787              	TIM_InternalClockConfig:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 86


 1788              	.LFB48:
 990:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1789              		.loc 1 990 0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 0
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 1793              		@ link register save eliminated.
 1794              	.LVL236:
 994:.//FWLIB/src/stm32f10x_tim.c **** }
 1795              		.loc 1 994 0
 1796 0000 0389     		ldrh	r3, [r0, #8]
 1797 0002 9BB2     		uxth	r3, r3
 1798 0004 23F00703 		bic	r3, r3, #7
 1799 0008 9BB2     		uxth	r3, r3
 1800 000a 0381     		strh	r3, [r0, #8]	@ movhi
 1801 000c 7047     		bx	lr
 1802              		.cfi_endproc
 1803              	.LFE48:
 1805 000e 00BF     		.section	.text.TIM_ETRConfig,"ax",%progbits
 1806              		.align	2
 1807              		.global	TIM_ETRConfig
 1808              		.thumb
 1809              		.thumb_func
 1811              	TIM_ETRConfig:
 1812              	.LFB53:
1150:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1813              		.loc 1 1150 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817              		@ link register save eliminated.
 1818              	.LVL237:
 1819 0000 10B4     		push	{r4}
 1820              	.LCFI18:
 1821              		.cfi_def_cfa_offset 4
 1822              		.cfi_offset 4, -4
 1823              	.LVL238:
1157:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
 1824              		.loc 1 1157 0
 1825 0002 0489     		ldrh	r4, [r0, #8]
 1826              	.LVL239:
1159:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
 1827              		.loc 1 1159 0
 1828 0004 E4B2     		uxtb	r4, r4
 1829              	.LVL240:
1161:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1830              		.loc 1 1161 0
 1831 0006 1B02     		lsls	r3, r3, #8
 1832              	.LVL241:
 1833 0008 9BB2     		uxth	r3, r3
 1834 000a 1A43     		orrs	r2, r2, r3
 1835              	.LVL242:
 1836 000c 1143     		orrs	r1, r1, r2
 1837              	.LVL243:
 1838 000e 44EA0103 		orr	r3, r4, r1
 1839              	.LVL244:
1163:.//FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 87


 1840              		.loc 1 1163 0
 1841 0012 0381     		strh	r3, [r0, #8]	@ movhi
1164:.//FWLIB/src/stm32f10x_tim.c **** 
 1842              		.loc 1 1164 0
 1843 0014 10BC     		pop	{r4}
 1844              	.LCFI19:
 1845              		.cfi_restore 4
 1846              		.cfi_def_cfa_offset 0
 1847 0016 7047     		bx	lr
 1848              		.cfi_endproc
 1849              	.LFE53:
 1851              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 1852              		.align	2
 1853              		.global	TIM_ETRClockMode1Config
 1854              		.thumb
 1855              		.thumb_func
 1857              	TIM_ETRClockMode1Config:
 1858              	.LFB51:
1077:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1859              		.loc 1 1077 0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 0
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
 1863              	.LVL245:
 1864 0000 10B5     		push	{r4, lr}
 1865              	.LCFI20:
 1866              		.cfi_def_cfa_offset 8
 1867              		.cfi_offset 4, -8
 1868              		.cfi_offset 14, -4
 1869 0002 0446     		mov	r4, r0
 1870              	.LVL246:
1085:.//FWLIB/src/stm32f10x_tim.c ****   
 1871              		.loc 1 1085 0
 1872 0004 FFF7FEFF 		bl	TIM_ETRConfig
 1873              	.LVL247:
1088:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
 1874              		.loc 1 1088 0
 1875 0008 2389     		ldrh	r3, [r4, #8]
 1876 000a 9BB2     		uxth	r3, r3
 1877              	.LVL248:
1095:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1878              		.loc 1 1095 0
 1879 000c 43F07703 		orr	r3, r3, #119
 1880              	.LVL249:
1097:.//FWLIB/src/stm32f10x_tim.c **** }
 1881              		.loc 1 1097 0
 1882 0010 2381     		strh	r3, [r4, #8]	@ movhi
 1883 0012 10BD     		pop	{r4, pc}
 1884              		.cfi_endproc
 1885              	.LFE51:
 1887              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 1888              		.align	2
 1889              		.global	TIM_ETRClockMode2Config
 1890              		.thumb
 1891              		.thumb_func
 1893              	TIM_ETRClockMode2Config:
 1894              	.LFB52:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 88


1119:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1895              		.loc 1 1119 0
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 0
 1898              		@ frame_needed = 0, uses_anonymous_args = 0
 1899              	.LVL250:
 1900 0000 10B5     		push	{r4, lr}
 1901              	.LCFI21:
 1902              		.cfi_def_cfa_offset 8
 1903              		.cfi_offset 4, -8
 1904              		.cfi_offset 14, -4
 1905 0002 0446     		mov	r4, r0
1126:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
 1906              		.loc 1 1126 0
 1907 0004 FFF7FEFF 		bl	TIM_ETRConfig
 1908              	.LVL251:
1128:.//FWLIB/src/stm32f10x_tim.c **** }
 1909              		.loc 1 1128 0
 1910 0008 2389     		ldrh	r3, [r4, #8]
 1911 000a 9BB2     		uxth	r3, r3
 1912 000c 43F48043 		orr	r3, r3, #16384
 1913 0010 2381     		strh	r3, [r4, #8]	@ movhi
 1914 0012 10BD     		pop	{r4, pc}
 1915              		.cfi_endproc
 1916              	.LFE52:
 1918              		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 1919              		.align	2
 1920              		.global	TIM_PrescalerConfig
 1921              		.thumb
 1922              		.thumb_func
 1924              	TIM_PrescalerConfig:
 1925              	.LFB54:
1177:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 1926              		.loc 1 1177 0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
 1930              		@ link register save eliminated.
 1931              	.LVL252:
1182:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
 1932              		.loc 1 1182 0
 1933 0000 0185     		strh	r1, [r0, #40]	@ movhi
1184:.//FWLIB/src/stm32f10x_tim.c **** }
 1934              		.loc 1 1184 0
 1935 0002 8282     		strh	r2, [r0, #20]	@ movhi
 1936 0004 7047     		bx	lr
 1937              		.cfi_endproc
 1938              	.LFE54:
 1940 0006 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 1941              		.align	2
 1942              		.global	TIM_CounterModeConfig
 1943              		.thumb
 1944              		.thumb_func
 1946              	TIM_CounterModeConfig:
 1947              	.LFB55:
1200:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 1948              		.loc 1 1200 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 89


 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
 1953              	.LVL253:
1205:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
 1954              		.loc 1 1205 0
 1955 0000 0388     		ldrh	r3, [r0]
 1956 0002 9BB2     		uxth	r3, r3
 1957              	.LVL254:
1207:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Counter Mode */
 1958              		.loc 1 1207 0
 1959 0004 23F07003 		bic	r3, r3, #112
 1960              	.LVL255:
1209:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
 1961              		.loc 1 1209 0
 1962 0008 1943     		orrs	r1, r1, r3
 1963              	.LVL256:
1211:.//FWLIB/src/stm32f10x_tim.c **** }
 1964              		.loc 1 1211 0
 1965 000a 0180     		strh	r1, [r0]	@ movhi
 1966 000c 7047     		bx	lr
 1967              		.cfi_endproc
 1968              	.LFE55:
 1970 000e 00BF     		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 1971              		.align	2
 1972              		.global	TIM_SelectInputTrigger
 1973              		.thumb
 1974              		.thumb_func
 1976              	TIM_SelectInputTrigger:
 1977              	.LFB56:
1230:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1978              		.loc 1 1230 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
 1982              		@ link register save eliminated.
 1983              	.LVL257:
1236:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the TS Bits */
 1984              		.loc 1 1236 0
 1985 0000 0389     		ldrh	r3, [r0, #8]
 1986 0002 9BB2     		uxth	r3, r3
 1987              	.LVL258:
1238:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
 1988              		.loc 1 1238 0
 1989 0004 23F07003 		bic	r3, r3, #112
 1990              	.LVL259:
1240:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1991              		.loc 1 1240 0
 1992 0008 1943     		orrs	r1, r1, r3
 1993              	.LVL260:
1242:.//FWLIB/src/stm32f10x_tim.c **** }
 1994              		.loc 1 1242 0
 1995 000a 0181     		strh	r1, [r0, #8]	@ movhi
 1996 000c 7047     		bx	lr
 1997              		.cfi_endproc
 1998              	.LFE56:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 90


 2000 000e 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 2001              		.align	2
 2002              		.global	TIM_ITRxExternalClockConfig
 2003              		.thumb
 2004              		.thumb_func
 2006              	TIM_ITRxExternalClockConfig:
 2007              	.LFB49:
1009:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2008              		.loc 1 1009 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              	.LVL261:
 2013 0000 10B5     		push	{r4, lr}
 2014              	.LCFI22:
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 4, -8
 2017              		.cfi_offset 14, -4
 2018 0002 0446     		mov	r4, r0
1014:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
 2019              		.loc 1 1014 0
 2020 0004 FFF7FEFF 		bl	TIM_SelectInputTrigger
 2021              	.LVL262:
1016:.//FWLIB/src/stm32f10x_tim.c **** }
 2022              		.loc 1 1016 0
 2023 0008 2389     		ldrh	r3, [r4, #8]
 2024 000a 9BB2     		uxth	r3, r3
 2025 000c 43F00703 		orr	r3, r3, #7
 2026 0010 2381     		strh	r3, [r4, #8]	@ movhi
 2027 0012 10BD     		pop	{r4, pc}
 2028              		.cfi_endproc
 2029              	.LFE49:
 2031              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 2032              		.align	2
 2033              		.global	TIM_TIxExternalClockConfig
 2034              		.thumb
 2035              		.thumb_func
 2037              	TIM_TIxExternalClockConfig:
 2038              	.LFB50:
1037:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2039              		.loc 1 1037 0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 0, uses_anonymous_args = 0
 2043              	.LVL263:
 2044 0000 38B5     		push	{r3, r4, r5, lr}
 2045              	.LCFI23:
 2046              		.cfi_def_cfa_offset 16
 2047              		.cfi_offset 3, -16
 2048              		.cfi_offset 4, -12
 2049              		.cfi_offset 5, -8
 2050              		.cfi_offset 14, -4
 2051 0002 0446     		mov	r4, r0
 2052 0004 0D46     		mov	r5, r1
 2053 0006 1146     		mov	r1, r2
 2054              	.LVL264:
1044:.//FWLIB/src/stm32f10x_tim.c ****   {
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 91


 2055              		.loc 1 1044 0
 2056 0008 602D     		cmp	r5, #96
 2057 000a 03D1     		bne	.L115
1046:.//FWLIB/src/stm32f10x_tim.c ****   }
 2058              		.loc 1 1046 0
 2059 000c 0122     		movs	r2, #1
 2060              	.LVL265:
 2061 000e FFF7FEFF 		bl	TI2_Config
 2062              	.LVL266:
 2063 0012 02E0     		b	.L116
 2064              	.LVL267:
 2065              	.L115:
1050:.//FWLIB/src/stm32f10x_tim.c ****   }
 2066              		.loc 1 1050 0
 2067 0014 0122     		movs	r2, #1
 2068              	.LVL268:
 2069 0016 FFF7FEFF 		bl	TI1_Config
 2070              	.LVL269:
 2071              	.L116:
1053:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
 2072              		.loc 1 1053 0
 2073 001a 2946     		mov	r1, r5
 2074 001c 2046     		mov	r0, r4
 2075 001e FFF7FEFF 		bl	TIM_SelectInputTrigger
 2076              	.LVL270:
1055:.//FWLIB/src/stm32f10x_tim.c **** }
 2077              		.loc 1 1055 0
 2078 0022 2389     		ldrh	r3, [r4, #8]
 2079 0024 9BB2     		uxth	r3, r3
 2080 0026 43F00703 		orr	r3, r3, #7
 2081 002a 2381     		strh	r3, [r4, #8]	@ movhi
 2082 002c 38BD     		pop	{r3, r4, r5, pc}
 2083              		.cfi_endproc
 2084              	.LFE50:
 2086 002e 00BF     		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 2087              		.align	2
 2088              		.global	TIM_EncoderInterfaceConfig
 2089              		.thumb
 2090              		.thumb_func
 2092              	TIM_EncoderInterfaceConfig:
 2093              	.LFB57:
1266:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 2094              		.loc 1 1266 0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 0
 2097              		@ frame_needed = 0, uses_anonymous_args = 0
 2098              		@ link register save eliminated.
 2099              	.LVL271:
 2100 0000 70B4     		push	{r4, r5, r6}
 2101              	.LCFI24:
 2102              		.cfi_def_cfa_offset 12
 2103              		.cfi_offset 4, -12
 2104              		.cfi_offset 5, -8
 2105              		.cfi_offset 6, -4
 2106              	.LVL272:
1278:.//FWLIB/src/stm32f10x_tim.c ****   
 2107              		.loc 1 1278 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 92


 2108 0002 0589     		ldrh	r5, [r0, #8]
 2109 0004 ADB2     		uxth	r5, r5
 2110              	.LVL273:
1281:.//FWLIB/src/stm32f10x_tim.c ****   
 2111              		.loc 1 1281 0
 2112 0006 048B     		ldrh	r4, [r0, #24]
 2113 0008 A4B2     		uxth	r4, r4
 2114              	.LVL274:
1284:.//FWLIB/src/stm32f10x_tim.c ****   
 2115              		.loc 1 1284 0
 2116 000a 068C     		ldrh	r6, [r0, #32]
 2117 000c B6B2     		uxth	r6, r6
 2118              	.LVL275:
1287:.//FWLIB/src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 2119              		.loc 1 1287 0
 2120 000e 25F00705 		bic	r5, r5, #7
 2121              	.LVL276:
1288:.//FWLIB/src/stm32f10x_tim.c ****   
 2122              		.loc 1 1288 0
 2123 0012 2943     		orrs	r1, r1, r5
 2124              	.LVL277:
1291:.//FWLIB/src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 2125              		.loc 1 1291 0
 2126 0014 24F44074 		bic	r4, r4, #768
 2127              	.LVL278:
 2128 0018 24F00304 		bic	r4, r4, #3
 2129              	.LVL279:
1292:.//FWLIB/src/stm32f10x_tim.c ****   
 2130              		.loc 1 1292 0
 2131 001c 44F48074 		orr	r4, r4, #256
 2132              	.LVL280:
 2133 0020 44F00104 		orr	r4, r4, #1
 2134              	.LVL281:
1295:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 2135              		.loc 1 1295 0
 2136 0024 26F02206 		bic	r6, r6, #34
 2137              	.LVL282:
1296:.//FWLIB/src/stm32f10x_tim.c ****   
 2138              		.loc 1 1296 0
 2139 0028 1B01     		lsls	r3, r3, #4
 2140              	.LVL283:
 2141 002a 9BB2     		uxth	r3, r3
 2142 002c 1A43     		orrs	r2, r2, r3
 2143              	.LVL284:
 2144 002e 46EA0203 		orr	r3, r6, r2
 2145              	.LVL285:
1299:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2146              		.loc 1 1299 0
 2147 0032 0181     		strh	r1, [r0, #8]	@ movhi
1301:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 2148              		.loc 1 1301 0
 2149 0034 0483     		strh	r4, [r0, #24]	@ movhi
1303:.//FWLIB/src/stm32f10x_tim.c **** }
 2150              		.loc 1 1303 0
 2151 0036 0384     		strh	r3, [r0, #32]	@ movhi
1304:.//FWLIB/src/stm32f10x_tim.c **** 
 2152              		.loc 1 1304 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 93


 2153 0038 70BC     		pop	{r4, r5, r6}
 2154              	.LCFI25:
 2155              		.cfi_restore 6
 2156              		.cfi_restore 5
 2157              		.cfi_restore 4
 2158              		.cfi_def_cfa_offset 0
 2159              	.LVL286:
 2160 003a 7047     		bx	lr
 2161              		.cfi_endproc
 2162              	.LFE57:
 2164              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 2165              		.align	2
 2166              		.global	TIM_ForcedOC1Config
 2167              		.thumb
 2168              		.thumb_func
 2170              	TIM_ForcedOC1Config:
 2171              	.LFB58:
1316:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2172              		.loc 1 1316 0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 0
 2175              		@ frame_needed = 0, uses_anonymous_args = 0
 2176              		@ link register save eliminated.
 2177              	.LVL287:
1321:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2178              		.loc 1 1321 0
 2179 0000 038B     		ldrh	r3, [r0, #24]
 2180 0002 9BB2     		uxth	r3, r3
 2181              	.LVL288:
1323:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2182              		.loc 1 1323 0
 2183 0004 23F07003 		bic	r3, r3, #112
 2184              	.LVL289:
1325:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2185              		.loc 1 1325 0
 2186 0008 1943     		orrs	r1, r1, r3
 2187              	.LVL290:
1327:.//FWLIB/src/stm32f10x_tim.c **** }
 2188              		.loc 1 1327 0
 2189 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2190 000c 7047     		bx	lr
 2191              		.cfi_endproc
 2192              	.LFE58:
 2194 000e 00BF     		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 2195              		.align	2
 2196              		.global	TIM_ForcedOC2Config
 2197              		.thumb
 2198              		.thumb_func
 2200              	TIM_ForcedOC2Config:
 2201              	.LFB59:
1340:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2202              		.loc 1 1340 0
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 0
 2205              		@ frame_needed = 0, uses_anonymous_args = 0
 2206              		@ link register save eliminated.
 2207              	.LVL291:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 94


1345:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2208              		.loc 1 1345 0
 2209 0000 038B     		ldrh	r3, [r0, #24]
 2210 0002 9BB2     		uxth	r3, r3
 2211              	.LVL292:
1347:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2212              		.loc 1 1347 0
 2213 0004 23F4E043 		bic	r3, r3, #28672
 2214              	.LVL293:
1349:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2215              		.loc 1 1349 0
 2216 0008 0902     		lsls	r1, r1, #8
 2217              	.LVL294:
 2218 000a 89B2     		uxth	r1, r1
 2219 000c 1943     		orrs	r1, r1, r3
 2220              	.LVL295:
1351:.//FWLIB/src/stm32f10x_tim.c **** }
 2221              		.loc 1 1351 0
 2222 000e 0183     		strh	r1, [r0, #24]	@ movhi
 2223 0010 7047     		bx	lr
 2224              		.cfi_endproc
 2225              	.LFE59:
 2227 0012 00BF     		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2228              		.align	2
 2229              		.global	TIM_ForcedOC3Config
 2230              		.thumb
 2231              		.thumb_func
 2233              	TIM_ForcedOC3Config:
 2234              	.LFB60:
1364:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2235              		.loc 1 1364 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 0
 2238              		@ frame_needed = 0, uses_anonymous_args = 0
 2239              		@ link register save eliminated.
 2240              	.LVL296:
1369:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2241              		.loc 1 1369 0
 2242 0000 838B     		ldrh	r3, [r0, #28]
 2243 0002 9BB2     		uxth	r3, r3
 2244              	.LVL297:
1371:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2245              		.loc 1 1371 0
 2246 0004 23F07003 		bic	r3, r3, #112
 2247              	.LVL298:
1373:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2248              		.loc 1 1373 0
 2249 0008 1943     		orrs	r1, r1, r3
 2250              	.LVL299:
1375:.//FWLIB/src/stm32f10x_tim.c **** }
 2251              		.loc 1 1375 0
 2252 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2253 000c 7047     		bx	lr
 2254              		.cfi_endproc
 2255              	.LFE60:
 2257 000e 00BF     		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2258              		.align	2
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 95


 2259              		.global	TIM_ForcedOC4Config
 2260              		.thumb
 2261              		.thumb_func
 2263              	TIM_ForcedOC4Config:
 2264              	.LFB61:
1388:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2265              		.loc 1 1388 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              		@ link register save eliminated.
 2270              	.LVL300:
1393:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2271              		.loc 1 1393 0
 2272 0000 838B     		ldrh	r3, [r0, #28]
 2273 0002 9BB2     		uxth	r3, r3
 2274              	.LVL301:
1395:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2275              		.loc 1 1395 0
 2276 0004 23F4E043 		bic	r3, r3, #28672
 2277              	.LVL302:
1397:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2278              		.loc 1 1397 0
 2279 0008 0902     		lsls	r1, r1, #8
 2280              	.LVL303:
 2281 000a 89B2     		uxth	r1, r1
 2282 000c 1943     		orrs	r1, r1, r3
 2283              	.LVL304:
1399:.//FWLIB/src/stm32f10x_tim.c **** }
 2284              		.loc 1 1399 0
 2285 000e 8183     		strh	r1, [r0, #28]	@ movhi
 2286 0010 7047     		bx	lr
 2287              		.cfi_endproc
 2288              	.LFE61:
 2290 0012 00BF     		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 2291              		.align	2
 2292              		.global	TIM_ARRPreloadConfig
 2293              		.thumb
 2294              		.thumb_func
 2296              	TIM_ARRPreloadConfig:
 2297              	.LFB62:
1410:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2298              		.loc 1 1410 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 0, uses_anonymous_args = 0
 2302              		@ link register save eliminated.
 2303              	.LVL305:
1414:.//FWLIB/src/stm32f10x_tim.c ****   {
 2304              		.loc 1 1414 0
 2305 0000 29B1     		cbz	r1, .L125
1417:.//FWLIB/src/stm32f10x_tim.c ****   }
 2306              		.loc 1 1417 0
 2307 0002 0388     		ldrh	r3, [r0]
 2308 0004 9BB2     		uxth	r3, r3
 2309 0006 43F08003 		orr	r3, r3, #128
 2310 000a 0380     		strh	r3, [r0]	@ movhi
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 96


 2311 000c 7047     		bx	lr
 2312              	.L125:
1422:.//FWLIB/src/stm32f10x_tim.c ****   }
 2313              		.loc 1 1422 0
 2314 000e 0388     		ldrh	r3, [r0]
 2315 0010 9BB2     		uxth	r3, r3
 2316 0012 23F08003 		bic	r3, r3, #128
 2317 0016 9BB2     		uxth	r3, r3
 2318 0018 0380     		strh	r3, [r0]	@ movhi
 2319 001a 7047     		bx	lr
 2320              		.cfi_endproc
 2321              	.LFE62:
 2323              		.section	.text.TIM_SelectCOM,"ax",%progbits
 2324              		.align	2
 2325              		.global	TIM_SelectCOM
 2326              		.thumb
 2327              		.thumb_func
 2329              	TIM_SelectCOM:
 2330              	.LFB63:
1434:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2331              		.loc 1 1434 0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 0
 2334              		@ frame_needed = 0, uses_anonymous_args = 0
 2335              		@ link register save eliminated.
 2336              	.LVL306:
1438:.//FWLIB/src/stm32f10x_tim.c ****   {
 2337              		.loc 1 1438 0
 2338 0000 29B1     		cbz	r1, .L128
1441:.//FWLIB/src/stm32f10x_tim.c ****   }
 2339              		.loc 1 1441 0
 2340 0002 8388     		ldrh	r3, [r0, #4]
 2341 0004 9BB2     		uxth	r3, r3
 2342 0006 43F00403 		orr	r3, r3, #4
 2343 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2344 000c 7047     		bx	lr
 2345              	.L128:
1446:.//FWLIB/src/stm32f10x_tim.c ****   }
 2346              		.loc 1 1446 0
 2347 000e 8388     		ldrh	r3, [r0, #4]
 2348 0010 9BB2     		uxth	r3, r3
 2349 0012 23F00403 		bic	r3, r3, #4
 2350 0016 9BB2     		uxth	r3, r3
 2351 0018 8380     		strh	r3, [r0, #4]	@ movhi
 2352 001a 7047     		bx	lr
 2353              		.cfi_endproc
 2354              	.LFE63:
 2356              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 2357              		.align	2
 2358              		.global	TIM_SelectCCDMA
 2359              		.thumb
 2360              		.thumb_func
 2362              	TIM_SelectCCDMA:
 2363              	.LFB64:
1459:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2364              		.loc 1 1459 0
 2365              		.cfi_startproc
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 97


 2366              		@ args = 0, pretend = 0, frame = 0
 2367              		@ frame_needed = 0, uses_anonymous_args = 0
 2368              		@ link register save eliminated.
 2369              	.LVL307:
1463:.//FWLIB/src/stm32f10x_tim.c ****   {
 2370              		.loc 1 1463 0
 2371 0000 29B1     		cbz	r1, .L131
1466:.//FWLIB/src/stm32f10x_tim.c ****   }
 2372              		.loc 1 1466 0
 2373 0002 8388     		ldrh	r3, [r0, #4]
 2374 0004 9BB2     		uxth	r3, r3
 2375 0006 43F00803 		orr	r3, r3, #8
 2376 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2377 000c 7047     		bx	lr
 2378              	.L131:
1471:.//FWLIB/src/stm32f10x_tim.c ****   }
 2379              		.loc 1 1471 0
 2380 000e 8388     		ldrh	r3, [r0, #4]
 2381 0010 9BB2     		uxth	r3, r3
 2382 0012 23F00803 		bic	r3, r3, #8
 2383 0016 9BB2     		uxth	r3, r3
 2384 0018 8380     		strh	r3, [r0, #4]	@ movhi
 2385 001a 7047     		bx	lr
 2386              		.cfi_endproc
 2387              	.LFE64:
 2389              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 2390              		.align	2
 2391              		.global	TIM_CCPreloadControl
 2392              		.thumb
 2393              		.thumb_func
 2395              	TIM_CCPreloadControl:
 2396              	.LFB65:
1484:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 2397              		.loc 1 1484 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 0
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
 2401              		@ link register save eliminated.
 2402              	.LVL308:
1488:.//FWLIB/src/stm32f10x_tim.c ****   {
 2403              		.loc 1 1488 0
 2404 0000 29B1     		cbz	r1, .L134
1491:.//FWLIB/src/stm32f10x_tim.c ****   }
 2405              		.loc 1 1491 0
 2406 0002 8388     		ldrh	r3, [r0, #4]
 2407 0004 9BB2     		uxth	r3, r3
 2408 0006 43F00103 		orr	r3, r3, #1
 2409 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2410 000c 7047     		bx	lr
 2411              	.L134:
1496:.//FWLIB/src/stm32f10x_tim.c ****   }
 2412              		.loc 1 1496 0
 2413 000e 8388     		ldrh	r3, [r0, #4]
 2414 0010 9BB2     		uxth	r3, r3
 2415 0012 23F00103 		bic	r3, r3, #1
 2416 0016 9BB2     		uxth	r3, r3
 2417 0018 8380     		strh	r3, [r0, #4]	@ movhi
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 98


 2418 001a 7047     		bx	lr
 2419              		.cfi_endproc
 2420              	.LFE65:
 2422              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2423              		.align	2
 2424              		.global	TIM_OC1PreloadConfig
 2425              		.thumb
 2426              		.thumb_func
 2428              	TIM_OC1PreloadConfig:
 2429              	.LFB66:
1510:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2430              		.loc 1 1510 0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 0
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
 2434              		@ link register save eliminated.
 2435              	.LVL309:
1515:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
 2436              		.loc 1 1515 0
 2437 0000 038B     		ldrh	r3, [r0, #24]
 2438 0002 9BB2     		uxth	r3, r3
 2439              	.LVL310:
1517:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2440              		.loc 1 1517 0
 2441 0004 23F00803 		bic	r3, r3, #8
 2442              	.LVL311:
1519:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2443              		.loc 1 1519 0
 2444 0008 1943     		orrs	r1, r1, r3
 2445              	.LVL312:
1521:.//FWLIB/src/stm32f10x_tim.c **** }
 2446              		.loc 1 1521 0
 2447 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2448 000c 7047     		bx	lr
 2449              		.cfi_endproc
 2450              	.LFE66:
 2452 000e 00BF     		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2453              		.align	2
 2454              		.global	TIM_OC2PreloadConfig
 2455              		.thumb
 2456              		.thumb_func
 2458              	TIM_OC2PreloadConfig:
 2459              	.LFB67:
1535:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2460              		.loc 1 1535 0
 2461              		.cfi_startproc
 2462              		@ args = 0, pretend = 0, frame = 0
 2463              		@ frame_needed = 0, uses_anonymous_args = 0
 2464              		@ link register save eliminated.
 2465              	.LVL313:
1540:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
 2466              		.loc 1 1540 0
 2467 0000 038B     		ldrh	r3, [r0, #24]
 2468 0002 9BB2     		uxth	r3, r3
 2469              	.LVL314:
1542:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2470              		.loc 1 1542 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 99


 2471 0004 23F40063 		bic	r3, r3, #2048
 2472              	.LVL315:
1544:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2473              		.loc 1 1544 0
 2474 0008 0902     		lsls	r1, r1, #8
 2475              	.LVL316:
 2476 000a 89B2     		uxth	r1, r1
 2477 000c 1943     		orrs	r1, r1, r3
 2478              	.LVL317:
1546:.//FWLIB/src/stm32f10x_tim.c **** }
 2479              		.loc 1 1546 0
 2480 000e 0183     		strh	r1, [r0, #24]	@ movhi
 2481 0010 7047     		bx	lr
 2482              		.cfi_endproc
 2483              	.LFE67:
 2485 0012 00BF     		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2486              		.align	2
 2487              		.global	TIM_OC3PreloadConfig
 2488              		.thumb
 2489              		.thumb_func
 2491              	TIM_OC3PreloadConfig:
 2492              	.LFB68:
1559:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2493              		.loc 1 1559 0
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 0
 2496              		@ frame_needed = 0, uses_anonymous_args = 0
 2497              		@ link register save eliminated.
 2498              	.LVL318:
1564:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
 2499              		.loc 1 1564 0
 2500 0000 838B     		ldrh	r3, [r0, #28]
 2501 0002 9BB2     		uxth	r3, r3
 2502              	.LVL319:
1566:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2503              		.loc 1 1566 0
 2504 0004 23F00803 		bic	r3, r3, #8
 2505              	.LVL320:
1568:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2506              		.loc 1 1568 0
 2507 0008 1943     		orrs	r1, r1, r3
 2508              	.LVL321:
1570:.//FWLIB/src/stm32f10x_tim.c **** }
 2509              		.loc 1 1570 0
 2510 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2511 000c 7047     		bx	lr
 2512              		.cfi_endproc
 2513              	.LFE68:
 2515 000e 00BF     		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2516              		.align	2
 2517              		.global	TIM_OC4PreloadConfig
 2518              		.thumb
 2519              		.thumb_func
 2521              	TIM_OC4PreloadConfig:
 2522              	.LFB69:
1583:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2523              		.loc 1 1583 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 100


 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 0
 2526              		@ frame_needed = 0, uses_anonymous_args = 0
 2527              		@ link register save eliminated.
 2528              	.LVL322:
1588:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
 2529              		.loc 1 1588 0
 2530 0000 838B     		ldrh	r3, [r0, #28]
 2531 0002 9BB2     		uxth	r3, r3
 2532              	.LVL323:
1590:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2533              		.loc 1 1590 0
 2534 0004 23F40063 		bic	r3, r3, #2048
 2535              	.LVL324:
1592:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2536              		.loc 1 1592 0
 2537 0008 0902     		lsls	r1, r1, #8
 2538              	.LVL325:
 2539 000a 89B2     		uxth	r1, r1
 2540 000c 1943     		orrs	r1, r1, r3
 2541              	.LVL326:
1594:.//FWLIB/src/stm32f10x_tim.c **** }
 2542              		.loc 1 1594 0
 2543 000e 8183     		strh	r1, [r0, #28]	@ movhi
 2544 0010 7047     		bx	lr
 2545              		.cfi_endproc
 2546              	.LFE69:
 2548 0012 00BF     		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2549              		.align	2
 2550              		.global	TIM_OC1FastConfig
 2551              		.thumb
 2552              		.thumb_func
 2554              	TIM_OC1FastConfig:
 2555              	.LFB70:
1607:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2556              		.loc 1 1607 0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 0
 2559              		@ frame_needed = 0, uses_anonymous_args = 0
 2560              		@ link register save eliminated.
 2561              	.LVL327:
1613:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
 2562              		.loc 1 1613 0
 2563 0000 038B     		ldrh	r3, [r0, #24]
 2564 0002 9BB2     		uxth	r3, r3
 2565              	.LVL328:
1615:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2566              		.loc 1 1615 0
 2567 0004 23F00403 		bic	r3, r3, #4
 2568              	.LVL329:
1617:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2569              		.loc 1 1617 0
 2570 0008 1943     		orrs	r1, r1, r3
 2571              	.LVL330:
1619:.//FWLIB/src/stm32f10x_tim.c **** }
 2572              		.loc 1 1619 0
 2573 000a 0183     		strh	r1, [r0, #24]	@ movhi
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 101


 2574 000c 7047     		bx	lr
 2575              		.cfi_endproc
 2576              	.LFE70:
 2578 000e 00BF     		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2579              		.align	2
 2580              		.global	TIM_OC2FastConfig
 2581              		.thumb
 2582              		.thumb_func
 2584              	TIM_OC2FastConfig:
 2585              	.LFB71:
1633:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2586              		.loc 1 1633 0
 2587              		.cfi_startproc
 2588              		@ args = 0, pretend = 0, frame = 0
 2589              		@ frame_needed = 0, uses_anonymous_args = 0
 2590              		@ link register save eliminated.
 2591              	.LVL331:
1639:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
 2592              		.loc 1 1639 0
 2593 0000 038B     		ldrh	r3, [r0, #24]
 2594 0002 9BB2     		uxth	r3, r3
 2595              	.LVL332:
1641:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2596              		.loc 1 1641 0
 2597 0004 23F48063 		bic	r3, r3, #1024
 2598              	.LVL333:
1643:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2599              		.loc 1 1643 0
 2600 0008 0902     		lsls	r1, r1, #8
 2601              	.LVL334:
 2602 000a 89B2     		uxth	r1, r1
 2603 000c 1943     		orrs	r1, r1, r3
 2604              	.LVL335:
1645:.//FWLIB/src/stm32f10x_tim.c **** }
 2605              		.loc 1 1645 0
 2606 000e 0183     		strh	r1, [r0, #24]	@ movhi
 2607 0010 7047     		bx	lr
 2608              		.cfi_endproc
 2609              	.LFE71:
 2611 0012 00BF     		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2612              		.align	2
 2613              		.global	TIM_OC3FastConfig
 2614              		.thumb
 2615              		.thumb_func
 2617              	TIM_OC3FastConfig:
 2618              	.LFB72:
1658:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2619              		.loc 1 1658 0
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 0
 2622              		@ frame_needed = 0, uses_anonymous_args = 0
 2623              		@ link register save eliminated.
 2624              	.LVL336:
1664:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
 2625              		.loc 1 1664 0
 2626 0000 838B     		ldrh	r3, [r0, #28]
 2627 0002 9BB2     		uxth	r3, r3
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 102


 2628              	.LVL337:
1666:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2629              		.loc 1 1666 0
 2630 0004 23F00403 		bic	r3, r3, #4
 2631              	.LVL338:
1668:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 2632              		.loc 1 1668 0
 2633 0008 1943     		orrs	r1, r1, r3
 2634              	.LVL339:
1670:.//FWLIB/src/stm32f10x_tim.c **** }
 2635              		.loc 1 1670 0
 2636 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2637 000c 7047     		bx	lr
 2638              		.cfi_endproc
 2639              	.LFE72:
 2641 000e 00BF     		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2642              		.align	2
 2643              		.global	TIM_OC4FastConfig
 2644              		.thumb
 2645              		.thumb_func
 2647              	TIM_OC4FastConfig:
 2648              	.LFB73:
1683:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2649              		.loc 1 1683 0
 2650              		.cfi_startproc
 2651              		@ args = 0, pretend = 0, frame = 0
 2652              		@ frame_needed = 0, uses_anonymous_args = 0
 2653              		@ link register save eliminated.
 2654              	.LVL340:
1689:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
 2655              		.loc 1 1689 0
 2656 0000 838B     		ldrh	r3, [r0, #28]
 2657 0002 9BB2     		uxth	r3, r3
 2658              	.LVL341:
1691:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2659              		.loc 1 1691 0
 2660 0004 23F48063 		bic	r3, r3, #1024
 2661              	.LVL342:
1693:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 2662              		.loc 1 1693 0
 2663 0008 0902     		lsls	r1, r1, #8
 2664              	.LVL343:
 2665 000a 89B2     		uxth	r1, r1
 2666 000c 1943     		orrs	r1, r1, r3
 2667              	.LVL344:
1695:.//FWLIB/src/stm32f10x_tim.c **** }
 2668              		.loc 1 1695 0
 2669 000e 8183     		strh	r1, [r0, #28]	@ movhi
 2670 0010 7047     		bx	lr
 2671              		.cfi_endproc
 2672              	.LFE73:
 2674 0012 00BF     		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2675              		.align	2
 2676              		.global	TIM_ClearOC1Ref
 2677              		.thumb
 2678              		.thumb_func
 2680              	TIM_ClearOC1Ref:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 103


 2681              	.LFB74:
1708:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2682              		.loc 1 1708 0
 2683              		.cfi_startproc
 2684              		@ args = 0, pretend = 0, frame = 0
 2685              		@ frame_needed = 0, uses_anonymous_args = 0
 2686              		@ link register save eliminated.
 2687              	.LVL345:
1714:.//FWLIB/src/stm32f10x_tim.c **** 
 2688              		.loc 1 1714 0
 2689 0000 038B     		ldrh	r3, [r0, #24]
 2690 0002 9BB2     		uxth	r3, r3
 2691              	.LVL346:
1717:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2692              		.loc 1 1717 0
 2693 0004 23F08003 		bic	r3, r3, #128
 2694              	.LVL347:
1719:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2695              		.loc 1 1719 0
 2696 0008 1943     		orrs	r1, r1, r3
 2697              	.LVL348:
1721:.//FWLIB/src/stm32f10x_tim.c **** }
 2698              		.loc 1 1721 0
 2699 000a 0183     		strh	r1, [r0, #24]	@ movhi
 2700 000c 7047     		bx	lr
 2701              		.cfi_endproc
 2702              	.LFE74:
 2704 000e 00BF     		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2705              		.align	2
 2706              		.global	TIM_ClearOC2Ref
 2707              		.thumb
 2708              		.thumb_func
 2710              	TIM_ClearOC2Ref:
 2711              	.LFB75:
1734:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2712              		.loc 1 1734 0
 2713              		.cfi_startproc
 2714              		@ args = 0, pretend = 0, frame = 0
 2715              		@ frame_needed = 0, uses_anonymous_args = 0
 2716              		@ link register save eliminated.
 2717              	.LVL349:
1739:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
 2718              		.loc 1 1739 0
 2719 0000 038B     		ldrh	r3, [r0, #24]
 2720              	.LVL350:
1741:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2721              		.loc 1 1741 0
 2722 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2723              	.LVL351:
1743:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2724              		.loc 1 1743 0
 2725 0006 0902     		lsls	r1, r1, #8
 2726              	.LVL352:
 2727 0008 89B2     		uxth	r1, r1
 2728 000a 1943     		orrs	r1, r1, r3
 2729              	.LVL353:
1745:.//FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 104


 2730              		.loc 1 1745 0
 2731 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2732 000e 7047     		bx	lr
 2733              		.cfi_endproc
 2734              	.LFE75:
 2736              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2737              		.align	2
 2738              		.global	TIM_ClearOC3Ref
 2739              		.thumb
 2740              		.thumb_func
 2742              	TIM_ClearOC3Ref:
 2743              	.LFB76:
1758:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2744              		.loc 1 1758 0
 2745              		.cfi_startproc
 2746              		@ args = 0, pretend = 0, frame = 0
 2747              		@ frame_needed = 0, uses_anonymous_args = 0
 2748              		@ link register save eliminated.
 2749              	.LVL354:
1763:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
 2750              		.loc 1 1763 0
 2751 0000 838B     		ldrh	r3, [r0, #28]
 2752 0002 9BB2     		uxth	r3, r3
 2753              	.LVL355:
1765:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2754              		.loc 1 1765 0
 2755 0004 23F08003 		bic	r3, r3, #128
 2756              	.LVL356:
1767:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2757              		.loc 1 1767 0
 2758 0008 1943     		orrs	r1, r1, r3
 2759              	.LVL357:
1769:.//FWLIB/src/stm32f10x_tim.c **** }
 2760              		.loc 1 1769 0
 2761 000a 8183     		strh	r1, [r0, #28]	@ movhi
 2762 000c 7047     		bx	lr
 2763              		.cfi_endproc
 2764              	.LFE76:
 2766 000e 00BF     		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2767              		.align	2
 2768              		.global	TIM_ClearOC4Ref
 2769              		.thumb
 2770              		.thumb_func
 2772              	TIM_ClearOC4Ref:
 2773              	.LFB77:
1782:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2774              		.loc 1 1782 0
 2775              		.cfi_startproc
 2776              		@ args = 0, pretend = 0, frame = 0
 2777              		@ frame_needed = 0, uses_anonymous_args = 0
 2778              		@ link register save eliminated.
 2779              	.LVL358:
1787:.//FWLIB/src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
 2780              		.loc 1 1787 0
 2781 0000 838B     		ldrh	r3, [r0, #28]
 2782              	.LVL359:
1789:.//FWLIB/src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 105


 2783              		.loc 1 1789 0
 2784 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2785              	.LVL360:
1791:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2786              		.loc 1 1791 0
 2787 0006 0902     		lsls	r1, r1, #8
 2788              	.LVL361:
 2789 0008 89B2     		uxth	r1, r1
 2790 000a 1943     		orrs	r1, r1, r3
 2791              	.LVL362:
1793:.//FWLIB/src/stm32f10x_tim.c **** }
 2792              		.loc 1 1793 0
 2793 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2794 000e 7047     		bx	lr
 2795              		.cfi_endproc
 2796              	.LFE77:
 2798              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2799              		.align	2
 2800              		.global	TIM_OC1PolarityConfig
 2801              		.thumb
 2802              		.thumb_func
 2804              	TIM_OC1PolarityConfig:
 2805              	.LFB78:
1806:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2806              		.loc 1 1806 0
 2807              		.cfi_startproc
 2808              		@ args = 0, pretend = 0, frame = 0
 2809              		@ frame_needed = 0, uses_anonymous_args = 0
 2810              		@ link register save eliminated.
 2811              	.LVL363:
1811:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
 2812              		.loc 1 1811 0
 2813 0000 038C     		ldrh	r3, [r0, #32]
 2814 0002 9BB2     		uxth	r3, r3
 2815              	.LVL364:
1813:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
 2816              		.loc 1 1813 0
 2817 0004 23F00203 		bic	r3, r3, #2
 2818              	.LVL365:
1814:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2819              		.loc 1 1814 0
 2820 0008 1943     		orrs	r1, r1, r3
 2821              	.LVL366:
1816:.//FWLIB/src/stm32f10x_tim.c **** }
 2822              		.loc 1 1816 0
 2823 000a 0184     		strh	r1, [r0, #32]	@ movhi
 2824 000c 7047     		bx	lr
 2825              		.cfi_endproc
 2826              	.LFE78:
 2828 000e 00BF     		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2829              		.align	2
 2830              		.global	TIM_OC1NPolarityConfig
 2831              		.thumb
 2832              		.thumb_func
 2834              	TIM_OC1NPolarityConfig:
 2835              	.LFB79:
1829:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 106


 2836              		.loc 1 1829 0
 2837              		.cfi_startproc
 2838              		@ args = 0, pretend = 0, frame = 0
 2839              		@ frame_needed = 0, uses_anonymous_args = 0
 2840              		@ link register save eliminated.
 2841              	.LVL367:
1835:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
 2842              		.loc 1 1835 0
 2843 0000 038C     		ldrh	r3, [r0, #32]
 2844 0002 9BB2     		uxth	r3, r3
 2845              	.LVL368:
1837:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2846              		.loc 1 1837 0
 2847 0004 23F00803 		bic	r3, r3, #8
 2848              	.LVL369:
1838:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2849              		.loc 1 1838 0
 2850 0008 1943     		orrs	r1, r1, r3
 2851              	.LVL370:
1840:.//FWLIB/src/stm32f10x_tim.c **** }
 2852              		.loc 1 1840 0
 2853 000a 0184     		strh	r1, [r0, #32]	@ movhi
 2854 000c 7047     		bx	lr
 2855              		.cfi_endproc
 2856              	.LFE79:
 2858 000e 00BF     		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 2859              		.align	2
 2860              		.global	TIM_OC2PolarityConfig
 2861              		.thumb
 2862              		.thumb_func
 2864              	TIM_OC2PolarityConfig:
 2865              	.LFB80:
1853:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2866              		.loc 1 1853 0
 2867              		.cfi_startproc
 2868              		@ args = 0, pretend = 0, frame = 0
 2869              		@ frame_needed = 0, uses_anonymous_args = 0
 2870              		@ link register save eliminated.
 2871              	.LVL371:
1858:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
 2872              		.loc 1 1858 0
 2873 0000 038C     		ldrh	r3, [r0, #32]
 2874 0002 9BB2     		uxth	r3, r3
 2875              	.LVL372:
1860:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 2876              		.loc 1 1860 0
 2877 0004 23F02003 		bic	r3, r3, #32
 2878              	.LVL373:
1861:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2879              		.loc 1 1861 0
 2880 0008 0901     		lsls	r1, r1, #4
 2881              	.LVL374:
 2882 000a 89B2     		uxth	r1, r1
 2883 000c 1943     		orrs	r1, r1, r3
 2884              	.LVL375:
1863:.//FWLIB/src/stm32f10x_tim.c **** }
 2885              		.loc 1 1863 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 107


 2886 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2887 0010 7047     		bx	lr
 2888              		.cfi_endproc
 2889              	.LFE80:
 2891 0012 00BF     		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 2892              		.align	2
 2893              		.global	TIM_OC2NPolarityConfig
 2894              		.thumb
 2895              		.thumb_func
 2897              	TIM_OC2NPolarityConfig:
 2898              	.LFB81:
1876:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2899              		.loc 1 1876 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 0
 2902              		@ frame_needed = 0, uses_anonymous_args = 0
 2903              		@ link register save eliminated.
 2904              	.LVL376:
1882:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
 2905              		.loc 1 1882 0
 2906 0000 038C     		ldrh	r3, [r0, #32]
 2907 0002 9BB2     		uxth	r3, r3
 2908              	.LVL377:
1884:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 2909              		.loc 1 1884 0
 2910 0004 23F08003 		bic	r3, r3, #128
 2911              	.LVL378:
1885:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2912              		.loc 1 1885 0
 2913 0008 0901     		lsls	r1, r1, #4
 2914              	.LVL379:
 2915 000a 89B2     		uxth	r1, r1
 2916 000c 1943     		orrs	r1, r1, r3
 2917              	.LVL380:
1887:.//FWLIB/src/stm32f10x_tim.c **** }
 2918              		.loc 1 1887 0
 2919 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2920 0010 7047     		bx	lr
 2921              		.cfi_endproc
 2922              	.LFE81:
 2924 0012 00BF     		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 2925              		.align	2
 2926              		.global	TIM_OC3PolarityConfig
 2927              		.thumb
 2928              		.thumb_func
 2930              	TIM_OC3PolarityConfig:
 2931              	.LFB82:
1900:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2932              		.loc 1 1900 0
 2933              		.cfi_startproc
 2934              		@ args = 0, pretend = 0, frame = 0
 2935              		@ frame_needed = 0, uses_anonymous_args = 0
 2936              		@ link register save eliminated.
 2937              	.LVL381:
1905:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
 2938              		.loc 1 1905 0
 2939 0000 038C     		ldrh	r3, [r0, #32]
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 108


 2940 0002 9BB2     		uxth	r3, r3
 2941              	.LVL382:
1907:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 2942              		.loc 1 1907 0
 2943 0004 23F40073 		bic	r3, r3, #512
 2944              	.LVL383:
1908:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2945              		.loc 1 1908 0
 2946 0008 0902     		lsls	r1, r1, #8
 2947              	.LVL384:
 2948 000a 89B2     		uxth	r1, r1
 2949 000c 1943     		orrs	r1, r1, r3
 2950              	.LVL385:
1910:.//FWLIB/src/stm32f10x_tim.c **** }
 2951              		.loc 1 1910 0
 2952 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2953 0010 7047     		bx	lr
 2954              		.cfi_endproc
 2955              	.LFE82:
 2957 0012 00BF     		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 2958              		.align	2
 2959              		.global	TIM_OC3NPolarityConfig
 2960              		.thumb
 2961              		.thumb_func
 2963              	TIM_OC3NPolarityConfig:
 2964              	.LFB83:
1923:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2965              		.loc 1 1923 0
 2966              		.cfi_startproc
 2967              		@ args = 0, pretend = 0, frame = 0
 2968              		@ frame_needed = 0, uses_anonymous_args = 0
 2969              		@ link register save eliminated.
 2970              	.LVL386:
1930:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
 2971              		.loc 1 1930 0
 2972 0000 038C     		ldrh	r3, [r0, #32]
 2973 0002 9BB2     		uxth	r3, r3
 2974              	.LVL387:
1932:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 2975              		.loc 1 1932 0
 2976 0004 23F40063 		bic	r3, r3, #2048
 2977              	.LVL388:
1933:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2978              		.loc 1 1933 0
 2979 0008 0902     		lsls	r1, r1, #8
 2980              	.LVL389:
 2981 000a 89B2     		uxth	r1, r1
 2982 000c 1943     		orrs	r1, r1, r3
 2983              	.LVL390:
1935:.//FWLIB/src/stm32f10x_tim.c **** }
 2984              		.loc 1 1935 0
 2985 000e 0184     		strh	r1, [r0, #32]	@ movhi
 2986 0010 7047     		bx	lr
 2987              		.cfi_endproc
 2988              	.LFE83:
 2990 0012 00BF     		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 2991              		.align	2
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 109


 2992              		.global	TIM_OC4PolarityConfig
 2993              		.thumb
 2994              		.thumb_func
 2996              	TIM_OC4PolarityConfig:
 2997              	.LFB84:
1948:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2998              		.loc 1 1948 0
 2999              		.cfi_startproc
 3000              		@ args = 0, pretend = 0, frame = 0
 3001              		@ frame_needed = 0, uses_anonymous_args = 0
 3002              		@ link register save eliminated.
 3003              	.LVL391:
1953:.//FWLIB/src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
 3004              		.loc 1 1953 0
 3005 0000 038C     		ldrh	r3, [r0, #32]
 3006 0002 9BB2     		uxth	r3, r3
 3007              	.LVL392:
1955:.//FWLIB/src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3008              		.loc 1 1955 0
 3009 0004 23F40053 		bic	r3, r3, #8192
 3010              	.LVL393:
1956:.//FWLIB/src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 3011              		.loc 1 1956 0
 3012 0008 0903     		lsls	r1, r1, #12
 3013              	.LVL394:
 3014 000a 89B2     		uxth	r1, r1
 3015 000c 1943     		orrs	r1, r1, r3
 3016              	.LVL395:
1958:.//FWLIB/src/stm32f10x_tim.c **** }
 3017              		.loc 1 1958 0
 3018 000e 0184     		strh	r1, [r0, #32]	@ movhi
 3019 0010 7047     		bx	lr
 3020              		.cfi_endproc
 3021              	.LFE84:
 3023 0012 00BF     		.section	.text.TIM_CCxCmd,"ax",%progbits
 3024              		.align	2
 3025              		.global	TIM_CCxCmd
 3026              		.thumb
 3027              		.thumb_func
 3029              	TIM_CCxCmd:
 3030              	.LFB85:
1975:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 3031              		.loc 1 1975 0
 3032              		.cfi_startproc
 3033              		@ args = 0, pretend = 0, frame = 0
 3034              		@ frame_needed = 0, uses_anonymous_args = 0
 3035              		@ link register save eliminated.
 3036              	.LVL396:
 3037 0000 10B4     		push	{r4}
 3038              	.LCFI26:
 3039              		.cfi_def_cfa_offset 4
 3040              		.cfi_offset 4, -4
 3041              	.LVL397:
1983:.//FWLIB/src/stm32f10x_tim.c **** 
 3042              		.loc 1 1983 0
 3043 0002 0123     		movs	r3, #1
 3044 0004 8B40     		lsls	r3, r3, r1
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 110


 3045 0006 9BB2     		uxth	r3, r3
 3046              	.LVL398:
1986:.//FWLIB/src/stm32f10x_tim.c **** 
 3047              		.loc 1 1986 0
 3048 0008 048C     		ldrh	r4, [r0, #32]
 3049 000a DB43     		mvns	r3, r3
 3050              	.LVL399:
 3051 000c 9BB2     		uxth	r3, r3
 3052              	.LVL400:
 3053 000e 2340     		ands	r3, r3, r4
 3054 0010 0384     		strh	r3, [r0, #32]	@ movhi
1989:.//FWLIB/src/stm32f10x_tim.c **** }
 3055              		.loc 1 1989 0
 3056 0012 038C     		ldrh	r3, [r0, #32]
 3057 0014 9BB2     		uxth	r3, r3
 3058 0016 8A40     		lsls	r2, r2, r1
 3059              	.LVL401:
 3060 0018 92B2     		uxth	r2, r2
 3061 001a 1A43     		orrs	r2, r2, r3
 3062 001c 0284     		strh	r2, [r0, #32]	@ movhi
1990:.//FWLIB/src/stm32f10x_tim.c **** 
 3063              		.loc 1 1990 0
 3064 001e 10BC     		pop	{r4}
 3065              	.LCFI27:
 3066              		.cfi_restore 4
 3067              		.cfi_def_cfa_offset 0
 3068 0020 7047     		bx	lr
 3069              		.cfi_endproc
 3070              	.LFE85:
 3072 0022 00BF     		.section	.text.TIM_CCxNCmd,"ax",%progbits
 3073              		.align	2
 3074              		.global	TIM_CCxNCmd
 3075              		.thumb
 3076              		.thumb_func
 3078              	TIM_CCxNCmd:
 3079              	.LFB86:
2005:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 3080              		.loc 1 2005 0
 3081              		.cfi_startproc
 3082              		@ args = 0, pretend = 0, frame = 0
 3083              		@ frame_needed = 0, uses_anonymous_args = 0
 3084              		@ link register save eliminated.
 3085              	.LVL402:
 3086 0000 10B4     		push	{r4}
 3087              	.LCFI28:
 3088              		.cfi_def_cfa_offset 4
 3089              		.cfi_offset 4, -4
 3090              	.LVL403:
2013:.//FWLIB/src/stm32f10x_tim.c **** 
 3091              		.loc 1 2013 0
 3092 0002 0423     		movs	r3, #4
 3093 0004 8B40     		lsls	r3, r3, r1
 3094 0006 9BB2     		uxth	r3, r3
 3095              	.LVL404:
2016:.//FWLIB/src/stm32f10x_tim.c **** 
 3096              		.loc 1 2016 0
 3097 0008 048C     		ldrh	r4, [r0, #32]
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 111


 3098 000a DB43     		mvns	r3, r3
 3099              	.LVL405:
 3100 000c 9BB2     		uxth	r3, r3
 3101              	.LVL406:
 3102 000e 2340     		ands	r3, r3, r4
 3103 0010 0384     		strh	r3, [r0, #32]	@ movhi
2019:.//FWLIB/src/stm32f10x_tim.c **** }
 3104              		.loc 1 2019 0
 3105 0012 038C     		ldrh	r3, [r0, #32]
 3106 0014 9BB2     		uxth	r3, r3
 3107 0016 8A40     		lsls	r2, r2, r1
 3108              	.LVL407:
 3109 0018 92B2     		uxth	r2, r2
 3110 001a 1A43     		orrs	r2, r2, r3
 3111 001c 0284     		strh	r2, [r0, #32]	@ movhi
2020:.//FWLIB/src/stm32f10x_tim.c **** 
 3112              		.loc 1 2020 0
 3113 001e 10BC     		pop	{r4}
 3114              	.LCFI29:
 3115              		.cfi_restore 4
 3116              		.cfi_def_cfa_offset 0
 3117 0020 7047     		bx	lr
 3118              		.cfi_endproc
 3119              	.LFE86:
 3121 0022 00BF     		.section	.text.TIM_SelectOCxM,"ax",%progbits
 3122              		.align	2
 3123              		.global	TIM_SelectOCxM
 3124              		.thumb
 3125              		.thumb_func
 3127              	TIM_SelectOCxM:
 3128              	.LFB87:
2046:.//FWLIB/src/stm32f10x_tim.c ****   uint32_t tmp = 0;
 3129              		.loc 1 2046 0
 3130              		.cfi_startproc
 3131              		@ args = 0, pretend = 0, frame = 0
 3132              		@ frame_needed = 0, uses_anonymous_args = 0
 3133              		@ link register save eliminated.
 3134              	.LVL408:
 3135 0000 30B4     		push	{r4, r5}
 3136              	.LCFI30:
 3137              		.cfi_def_cfa_offset 8
 3138              		.cfi_offset 4, -8
 3139              		.cfi_offset 5, -4
 3140              	.LVL409:
2056:.//FWLIB/src/stm32f10x_tim.c **** 
 3141              		.loc 1 2056 0
 3142 0002 00F11804 		add	r4, r0, #24
 3143              	.LVL410:
2058:.//FWLIB/src/stm32f10x_tim.c **** 
 3144              		.loc 1 2058 0
 3145 0006 0123     		movs	r3, #1
 3146 0008 8B40     		lsls	r3, r3, r1
 3147 000a 9BB2     		uxth	r3, r3
 3148              	.LVL411:
2061:.//FWLIB/src/stm32f10x_tim.c **** 
 3149              		.loc 1 2061 0
 3150 000c 058C     		ldrh	r5, [r0, #32]
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 112


 3151 000e DB43     		mvns	r3, r3
 3152              	.LVL412:
 3153 0010 9BB2     		uxth	r3, r3
 3154              	.LVL413:
 3155 0012 2B40     		ands	r3, r3, r5
 3156 0014 0384     		strh	r3, [r0, #32]	@ movhi
2063:.//FWLIB/src/stm32f10x_tim.c ****   {
 3157              		.loc 1 2063 0
 3158 0016 09B1     		cbz	r1, .L160
2063:.//FWLIB/src/stm32f10x_tim.c ****   {
 3159              		.loc 1 2063 0 is_stmt 0 discriminator 1
 3160 0018 0829     		cmp	r1, #8
 3161 001a 08D1     		bne	.L161
 3162              	.L160:
2065:.//FWLIB/src/stm32f10x_tim.c **** 
 3163              		.loc 1 2065 0 is_stmt 1
 3164 001c 4908     		lsrs	r1, r1, #1
 3165              	.LVL414:
2068:.//FWLIB/src/stm32f10x_tim.c ****    
 3166              		.loc 1 2068 0
 3167 001e 0B59     		ldr	r3, [r1, r4]
 3168 0020 23F07003 		bic	r3, r3, #112
 3169 0024 0B51     		str	r3, [r1, r4]
2071:.//FWLIB/src/stm32f10x_tim.c ****   }
 3170              		.loc 1 2071 0
 3171 0026 0B59     		ldr	r3, [r1, r4]
 3172 0028 1A43     		orrs	r2, r2, r3
 3173              	.LVL415:
 3174 002a 0A51     		str	r2, [r1, r4]
 3175 002c 0BE0     		b	.L159
 3176              	.LVL416:
 3177              	.L161:
2075:.//FWLIB/src/stm32f10x_tim.c **** 
 3178              		.loc 1 2075 0
 3179 002e 0439     		subs	r1, r1, #4
 3180              	.LVL417:
 3181 0030 C1F34E01 		ubfx	r1, r1, #1, #15
 3182              	.LVL418:
2078:.//FWLIB/src/stm32f10x_tim.c ****     
 3183              		.loc 1 2078 0
 3184 0034 0B59     		ldr	r3, [r1, r4]
 3185 0036 23F4E043 		bic	r3, r3, #28672
 3186 003a 0B51     		str	r3, [r1, r4]
2081:.//FWLIB/src/stm32f10x_tim.c ****   }
 3187              		.loc 1 2081 0
 3188 003c 0B59     		ldr	r3, [r1, r4]
 3189 003e 1202     		lsls	r2, r2, #8
 3190              	.LVL419:
 3191 0040 92B2     		uxth	r2, r2
 3192 0042 1A43     		orrs	r2, r2, r3
 3193 0044 0A51     		str	r2, [r1, r4]
 3194              	.LVL420:
 3195              	.L159:
2083:.//FWLIB/src/stm32f10x_tim.c **** 
 3196              		.loc 1 2083 0
 3197 0046 30BC     		pop	{r4, r5}
 3198              	.LCFI31:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 113


 3199              		.cfi_restore 5
 3200              		.cfi_restore 4
 3201              		.cfi_def_cfa_offset 0
 3202 0048 7047     		bx	lr
 3203              		.cfi_endproc
 3204              	.LFE87:
 3206 004a 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 3207              		.align	2
 3208              		.global	TIM_UpdateDisableConfig
 3209              		.thumb
 3210              		.thumb_func
 3212              	TIM_UpdateDisableConfig:
 3213              	.LFB88:
2093:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3214              		.loc 1 2093 0
 3215              		.cfi_startproc
 3216              		@ args = 0, pretend = 0, frame = 0
 3217              		@ frame_needed = 0, uses_anonymous_args = 0
 3218              		@ link register save eliminated.
 3219              	.LVL421:
2097:.//FWLIB/src/stm32f10x_tim.c ****   {
 3220              		.loc 1 2097 0
 3221 0000 29B1     		cbz	r1, .L165
2100:.//FWLIB/src/stm32f10x_tim.c ****   }
 3222              		.loc 1 2100 0
 3223 0002 0388     		ldrh	r3, [r0]
 3224 0004 9BB2     		uxth	r3, r3
 3225 0006 43F00203 		orr	r3, r3, #2
 3226 000a 0380     		strh	r3, [r0]	@ movhi
 3227 000c 7047     		bx	lr
 3228              	.L165:
2105:.//FWLIB/src/stm32f10x_tim.c ****   }
 3229              		.loc 1 2105 0
 3230 000e 0388     		ldrh	r3, [r0]
 3231 0010 9BB2     		uxth	r3, r3
 3232 0012 23F00203 		bic	r3, r3, #2
 3233 0016 9BB2     		uxth	r3, r3
 3234 0018 0380     		strh	r3, [r0]	@ movhi
 3235 001a 7047     		bx	lr
 3236              		.cfi_endproc
 3237              	.LFE88:
 3239              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 3240              		.align	2
 3241              		.global	TIM_UpdateRequestConfig
 3242              		.thumb
 3243              		.thumb_func
 3245              	TIM_UpdateRequestConfig:
 3246              	.LFB89:
2121:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3247              		.loc 1 2121 0
 3248              		.cfi_startproc
 3249              		@ args = 0, pretend = 0, frame = 0
 3250              		@ frame_needed = 0, uses_anonymous_args = 0
 3251              		@ link register save eliminated.
 3252              	.LVL422:
2125:.//FWLIB/src/stm32f10x_tim.c ****   {
 3253              		.loc 1 2125 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 114


 3254 0000 29B1     		cbz	r1, .L168
2128:.//FWLIB/src/stm32f10x_tim.c ****   }
 3255              		.loc 1 2128 0
 3256 0002 0388     		ldrh	r3, [r0]
 3257 0004 9BB2     		uxth	r3, r3
 3258 0006 43F00403 		orr	r3, r3, #4
 3259 000a 0380     		strh	r3, [r0]	@ movhi
 3260 000c 7047     		bx	lr
 3261              	.L168:
2133:.//FWLIB/src/stm32f10x_tim.c ****   }
 3262              		.loc 1 2133 0
 3263 000e 0388     		ldrh	r3, [r0]
 3264 0010 9BB2     		uxth	r3, r3
 3265 0012 23F00403 		bic	r3, r3, #4
 3266 0016 9BB2     		uxth	r3, r3
 3267 0018 0380     		strh	r3, [r0]	@ movhi
 3268 001a 7047     		bx	lr
 3269              		.cfi_endproc
 3270              	.LFE89:
 3272              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 3273              		.align	2
 3274              		.global	TIM_SelectHallSensor
 3275              		.thumb
 3276              		.thumb_func
 3278              	TIM_SelectHallSensor:
 3279              	.LFB90:
2145:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3280              		.loc 1 2145 0
 3281              		.cfi_startproc
 3282              		@ args = 0, pretend = 0, frame = 0
 3283              		@ frame_needed = 0, uses_anonymous_args = 0
 3284              		@ link register save eliminated.
 3285              	.LVL423:
2149:.//FWLIB/src/stm32f10x_tim.c ****   {
 3286              		.loc 1 2149 0
 3287 0000 29B1     		cbz	r1, .L171
2152:.//FWLIB/src/stm32f10x_tim.c ****   }
 3288              		.loc 1 2152 0
 3289 0002 8388     		ldrh	r3, [r0, #4]
 3290 0004 9BB2     		uxth	r3, r3
 3291 0006 43F08003 		orr	r3, r3, #128
 3292 000a 8380     		strh	r3, [r0, #4]	@ movhi
 3293 000c 7047     		bx	lr
 3294              	.L171:
2157:.//FWLIB/src/stm32f10x_tim.c ****   }
 3295              		.loc 1 2157 0
 3296 000e 8388     		ldrh	r3, [r0, #4]
 3297 0010 9BB2     		uxth	r3, r3
 3298 0012 23F08003 		bic	r3, r3, #128
 3299 0016 9BB2     		uxth	r3, r3
 3300 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3301 001a 7047     		bx	lr
 3302              		.cfi_endproc
 3303              	.LFE90:
 3305              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 3306              		.align	2
 3307              		.global	TIM_SelectOnePulseMode
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 115


 3308              		.thumb
 3309              		.thumb_func
 3311              	TIM_SelectOnePulseMode:
 3312              	.LFB91:
2171:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3313              		.loc 1 2171 0
 3314              		.cfi_startproc
 3315              		@ args = 0, pretend = 0, frame = 0
 3316              		@ frame_needed = 0, uses_anonymous_args = 0
 3317              		@ link register save eliminated.
 3318              	.LVL424:
2176:.//FWLIB/src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
 3319              		.loc 1 2176 0
 3320 0000 0388     		ldrh	r3, [r0]
 3321 0002 9BB2     		uxth	r3, r3
 3322 0004 23F00803 		bic	r3, r3, #8
 3323 0008 9BB2     		uxth	r3, r3
 3324 000a 0380     		strh	r3, [r0]	@ movhi
2178:.//FWLIB/src/stm32f10x_tim.c **** }
 3325              		.loc 1 2178 0
 3326 000c 0388     		ldrh	r3, [r0]
 3327 000e 9BB2     		uxth	r3, r3
 3328 0010 1943     		orrs	r1, r1, r3
 3329              	.LVL425:
 3330 0012 0180     		strh	r1, [r0]	@ movhi
 3331 0014 7047     		bx	lr
 3332              		.cfi_endproc
 3333              	.LFE91:
 3335 0016 00BF     		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 3336              		.align	2
 3337              		.global	TIM_SelectOutputTrigger
 3338              		.thumb
 3339              		.thumb_func
 3341              	TIM_SelectOutputTrigger:
 3342              	.LFB92:
2203:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3343              		.loc 1 2203 0
 3344              		.cfi_startproc
 3345              		@ args = 0, pretend = 0, frame = 0
 3346              		@ frame_needed = 0, uses_anonymous_args = 0
 3347              		@ link register save eliminated.
 3348              	.LVL426:
2208:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the TRGO source */
 3349              		.loc 1 2208 0
 3350 0000 8388     		ldrh	r3, [r0, #4]
 3351 0002 9BB2     		uxth	r3, r3
 3352 0004 23F07003 		bic	r3, r3, #112
 3353 0008 9BB2     		uxth	r3, r3
 3354 000a 8380     		strh	r3, [r0, #4]	@ movhi
2210:.//FWLIB/src/stm32f10x_tim.c **** }
 3355              		.loc 1 2210 0
 3356 000c 8388     		ldrh	r3, [r0, #4]
 3357 000e 9BB2     		uxth	r3, r3
 3358 0010 1943     		orrs	r1, r1, r3
 3359              	.LVL427:
 3360 0012 8180     		strh	r1, [r0, #4]	@ movhi
 3361 0014 7047     		bx	lr
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 116


 3362              		.cfi_endproc
 3363              	.LFE92:
 3365 0016 00BF     		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 3366              		.align	2
 3367              		.global	TIM_SelectSlaveMode
 3368              		.thumb
 3369              		.thumb_func
 3371              	TIM_SelectSlaveMode:
 3372              	.LFB93:
2226:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3373              		.loc 1 2226 0
 3374              		.cfi_startproc
 3375              		@ args = 0, pretend = 0, frame = 0
 3376              		@ frame_needed = 0, uses_anonymous_args = 0
 3377              		@ link register save eliminated.
 3378              	.LVL428:
2231:.//FWLIB/src/stm32f10x_tim.c ****   /* Select the Slave Mode */
 3379              		.loc 1 2231 0
 3380 0000 0389     		ldrh	r3, [r0, #8]
 3381 0002 9BB2     		uxth	r3, r3
 3382 0004 23F00703 		bic	r3, r3, #7
 3383 0008 9BB2     		uxth	r3, r3
 3384 000a 0381     		strh	r3, [r0, #8]	@ movhi
2233:.//FWLIB/src/stm32f10x_tim.c **** }
 3385              		.loc 1 2233 0
 3386 000c 0389     		ldrh	r3, [r0, #8]
 3387 000e 9BB2     		uxth	r3, r3
 3388 0010 1943     		orrs	r1, r1, r3
 3389              	.LVL429:
 3390 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3391 0014 7047     		bx	lr
 3392              		.cfi_endproc
 3393              	.LFE93:
 3395 0016 00BF     		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 3396              		.align	2
 3397              		.global	TIM_SelectMasterSlaveMode
 3398              		.thumb
 3399              		.thumb_func
 3401              	TIM_SelectMasterSlaveMode:
 3402              	.LFB94:
2247:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3403              		.loc 1 2247 0
 3404              		.cfi_startproc
 3405              		@ args = 0, pretend = 0, frame = 0
 3406              		@ frame_needed = 0, uses_anonymous_args = 0
 3407              		@ link register save eliminated.
 3408              	.LVL430:
2252:.//FWLIB/src/stm32f10x_tim.c ****   
 3409              		.loc 1 2252 0
 3410 0000 0389     		ldrh	r3, [r0, #8]
 3411 0002 9BB2     		uxth	r3, r3
 3412 0004 23F08003 		bic	r3, r3, #128
 3413 0008 9BB2     		uxth	r3, r3
 3414 000a 0381     		strh	r3, [r0, #8]	@ movhi
2255:.//FWLIB/src/stm32f10x_tim.c **** }
 3415              		.loc 1 2255 0
 3416 000c 0389     		ldrh	r3, [r0, #8]
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 117


 3417 000e 9BB2     		uxth	r3, r3
 3418 0010 1943     		orrs	r1, r1, r3
 3419              	.LVL431:
 3420 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3421 0014 7047     		bx	lr
 3422              		.cfi_endproc
 3423              	.LFE94:
 3425 0016 00BF     		.section	.text.TIM_SetCounter,"ax",%progbits
 3426              		.align	2
 3427              		.global	TIM_SetCounter
 3428              		.thumb
 3429              		.thumb_func
 3431              	TIM_SetCounter:
 3432              	.LFB95:
2265:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3433              		.loc 1 2265 0
 3434              		.cfi_startproc
 3435              		@ args = 0, pretend = 0, frame = 0
 3436              		@ frame_needed = 0, uses_anonymous_args = 0
 3437              		@ link register save eliminated.
 3438              	.LVL432:
2269:.//FWLIB/src/stm32f10x_tim.c **** }
 3439              		.loc 1 2269 0
 3440 0000 8184     		strh	r1, [r0, #36]	@ movhi
 3441 0002 7047     		bx	lr
 3442              		.cfi_endproc
 3443              	.LFE95:
 3445              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 3446              		.align	2
 3447              		.global	TIM_SetAutoreload
 3448              		.thumb
 3449              		.thumb_func
 3451              	TIM_SetAutoreload:
 3452              	.LFB96:
2279:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3453              		.loc 1 2279 0
 3454              		.cfi_startproc
 3455              		@ args = 0, pretend = 0, frame = 0
 3456              		@ frame_needed = 0, uses_anonymous_args = 0
 3457              		@ link register save eliminated.
 3458              	.LVL433:
2283:.//FWLIB/src/stm32f10x_tim.c **** }
 3459              		.loc 1 2283 0
 3460 0000 8185     		strh	r1, [r0, #44]	@ movhi
 3461 0002 7047     		bx	lr
 3462              		.cfi_endproc
 3463              	.LFE96:
 3465              		.section	.text.TIM_SetCompare1,"ax",%progbits
 3466              		.align	2
 3467              		.global	TIM_SetCompare1
 3468              		.thumb
 3469              		.thumb_func
 3471              	TIM_SetCompare1:
 3472              	.LFB97:
2293:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3473              		.loc 1 2293 0
 3474              		.cfi_startproc
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 118


 3475              		@ args = 0, pretend = 0, frame = 0
 3476              		@ frame_needed = 0, uses_anonymous_args = 0
 3477              		@ link register save eliminated.
 3478              	.LVL434:
2297:.//FWLIB/src/stm32f10x_tim.c **** }
 3479              		.loc 1 2297 0
 3480 0000 8186     		strh	r1, [r0, #52]	@ movhi
 3481 0002 7047     		bx	lr
 3482              		.cfi_endproc
 3483              	.LFE97:
 3485              		.section	.text.TIM_SetCompare2,"ax",%progbits
 3486              		.align	2
 3487              		.global	TIM_SetCompare2
 3488              		.thumb
 3489              		.thumb_func
 3491              	TIM_SetCompare2:
 3492              	.LFB98:
2307:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3493              		.loc 1 2307 0
 3494              		.cfi_startproc
 3495              		@ args = 0, pretend = 0, frame = 0
 3496              		@ frame_needed = 0, uses_anonymous_args = 0
 3497              		@ link register save eliminated.
 3498              	.LVL435:
2311:.//FWLIB/src/stm32f10x_tim.c **** }
 3499              		.loc 1 2311 0
 3500 0000 0187     		strh	r1, [r0, #56]	@ movhi
 3501 0002 7047     		bx	lr
 3502              		.cfi_endproc
 3503              	.LFE98:
 3505              		.section	.text.TIM_SetCompare3,"ax",%progbits
 3506              		.align	2
 3507              		.global	TIM_SetCompare3
 3508              		.thumb
 3509              		.thumb_func
 3511              	TIM_SetCompare3:
 3512              	.LFB99:
2321:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3513              		.loc 1 2321 0
 3514              		.cfi_startproc
 3515              		@ args = 0, pretend = 0, frame = 0
 3516              		@ frame_needed = 0, uses_anonymous_args = 0
 3517              		@ link register save eliminated.
 3518              	.LVL436:
2325:.//FWLIB/src/stm32f10x_tim.c **** }
 3519              		.loc 1 2325 0
 3520 0000 8187     		strh	r1, [r0, #60]	@ movhi
 3521 0002 7047     		bx	lr
 3522              		.cfi_endproc
 3523              	.LFE99:
 3525              		.section	.text.TIM_SetCompare4,"ax",%progbits
 3526              		.align	2
 3527              		.global	TIM_SetCompare4
 3528              		.thumb
 3529              		.thumb_func
 3531              	TIM_SetCompare4:
 3532              	.LFB100:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 119


2335:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3533              		.loc 1 2335 0
 3534              		.cfi_startproc
 3535              		@ args = 0, pretend = 0, frame = 0
 3536              		@ frame_needed = 0, uses_anonymous_args = 0
 3537              		@ link register save eliminated.
 3538              	.LVL437:
2339:.//FWLIB/src/stm32f10x_tim.c **** }
 3539              		.loc 1 2339 0
 3540 0000 A0F84010 		strh	r1, [r0, #64]	@ movhi
 3541 0004 7047     		bx	lr
 3542              		.cfi_endproc
 3543              	.LFE100:
 3545 0006 00BF     		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3546              		.align	2
 3547              		.global	TIM_SetIC1Prescaler
 3548              		.thumb
 3549              		.thumb_func
 3551              	TIM_SetIC1Prescaler:
 3552              	.LFB101:
2354:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3553              		.loc 1 2354 0
 3554              		.cfi_startproc
 3555              		@ args = 0, pretend = 0, frame = 0
 3556              		@ frame_needed = 0, uses_anonymous_args = 0
 3557              		@ link register save eliminated.
 3558              	.LVL438:
2359:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
 3559              		.loc 1 2359 0
 3560 0000 038B     		ldrh	r3, [r0, #24]
 3561 0002 9BB2     		uxth	r3, r3
 3562 0004 23F00C03 		bic	r3, r3, #12
 3563 0008 9BB2     		uxth	r3, r3
 3564 000a 0383     		strh	r3, [r0, #24]	@ movhi
2361:.//FWLIB/src/stm32f10x_tim.c **** }
 3565              		.loc 1 2361 0
 3566 000c 038B     		ldrh	r3, [r0, #24]
 3567 000e 9BB2     		uxth	r3, r3
 3568 0010 1943     		orrs	r1, r1, r3
 3569              	.LVL439:
 3570 0012 0183     		strh	r1, [r0, #24]	@ movhi
 3571 0014 7047     		bx	lr
 3572              		.cfi_endproc
 3573              	.LFE101:
 3575 0016 00BF     		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3576              		.align	2
 3577              		.global	TIM_SetIC2Prescaler
 3578              		.thumb
 3579              		.thumb_func
 3581              	TIM_SetIC2Prescaler:
 3582              	.LFB102:
2376:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3583              		.loc 1 2376 0
 3584              		.cfi_startproc
 3585              		@ args = 0, pretend = 0, frame = 0
 3586              		@ frame_needed = 0, uses_anonymous_args = 0
 3587              		@ link register save eliminated.
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 120


 3588              	.LVL440:
2381:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
 3589              		.loc 1 2381 0
 3590 0000 038B     		ldrh	r3, [r0, #24]
 3591 0002 9BB2     		uxth	r3, r3
 3592 0004 23F44063 		bic	r3, r3, #3072
 3593 0008 9BB2     		uxth	r3, r3
 3594 000a 0383     		strh	r3, [r0, #24]	@ movhi
2383:.//FWLIB/src/stm32f10x_tim.c **** }
 3595              		.loc 1 2383 0
 3596 000c 038B     		ldrh	r3, [r0, #24]
 3597 000e 9BB2     		uxth	r3, r3
 3598 0010 0902     		lsls	r1, r1, #8
 3599              	.LVL441:
 3600 0012 89B2     		uxth	r1, r1
 3601 0014 1943     		orrs	r1, r1, r3
 3602 0016 0183     		strh	r1, [r0, #24]	@ movhi
 3603 0018 7047     		bx	lr
 3604              		.cfi_endproc
 3605              	.LFE102:
 3607 001a 00BF     		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3608              		.align	2
 3609              		.global	TIM_PWMIConfig
 3610              		.thumb
 3611              		.thumb_func
 3613              	TIM_PWMIConfig:
 3614              	.LFB36:
 655:.//FWLIB/src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3615              		.loc 1 655 0
 3616              		.cfi_startproc
 3617              		@ args = 0, pretend = 0, frame = 0
 3618              		@ frame_needed = 0, uses_anonymous_args = 0
 3619              	.LVL442:
 3620 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3621              	.LCFI32:
 3622              		.cfi_def_cfa_offset 24
 3623              		.cfi_offset 3, -24
 3624              		.cfi_offset 4, -20
 3625              		.cfi_offset 5, -16
 3626              		.cfi_offset 6, -12
 3627              		.cfi_offset 7, -8
 3628              		.cfi_offset 14, -4
 3629 0002 0546     		mov	r5, r0
 3630 0004 0C46     		mov	r4, r1
 3631              	.LVL443:
 661:.//FWLIB/src/stm32f10x_tim.c ****   {
 3632              		.loc 1 661 0
 3633 0006 4988     		ldrh	r1, [r1, #2]
 3634              	.LVL444:
 3635 0008 09B9     		cbnz	r1, .L190
 663:.//FWLIB/src/stm32f10x_tim.c ****   }
 3636              		.loc 1 663 0
 3637 000a 0226     		movs	r6, #2
 3638 000c 00E0     		b	.L186
 3639              	.L190:
 667:.//FWLIB/src/stm32f10x_tim.c ****   }
 3640              		.loc 1 667 0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 121


 3641 000e 0026     		movs	r6, #0
 3642              	.L186:
 3643              	.LVL445:
 670:.//FWLIB/src/stm32f10x_tim.c ****   {
 3644              		.loc 1 670 0
 3645 0010 A288     		ldrh	r2, [r4, #4]
 3646 0012 012A     		cmp	r2, #1
 3647 0014 01D1     		bne	.L191
 672:.//FWLIB/src/stm32f10x_tim.c ****   }
 3648              		.loc 1 672 0
 3649 0016 0227     		movs	r7, #2
 3650 0018 00E0     		b	.L187
 3651              	.L191:
 676:.//FWLIB/src/stm32f10x_tim.c ****   }
 3652              		.loc 1 676 0
 3653 001a 0127     		movs	r7, #1
 3654              	.L187:
 3655              	.LVL446:
 678:.//FWLIB/src/stm32f10x_tim.c ****   {
 3656              		.loc 1 678 0
 3657 001c 2388     		ldrh	r3, [r4]
 3658 001e 93B9     		cbnz	r3, .L188
 681:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3659              		.loc 1 681 0
 3660 0020 2389     		ldrh	r3, [r4, #8]
 3661 0022 2846     		mov	r0, r5
 3662              	.LVL447:
 3663 0024 FFF7FEFF 		bl	TI1_Config
 3664              	.LVL448:
 684:.//FWLIB/src/stm32f10x_tim.c ****     /* TI2 Configuration */
 3665              		.loc 1 684 0
 3666 0028 E188     		ldrh	r1, [r4, #6]
 3667 002a 2846     		mov	r0, r5
 3668 002c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3669              	.LVL449:
 686:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 3670              		.loc 1 686 0
 3671 0030 2389     		ldrh	r3, [r4, #8]
 3672 0032 3A46     		mov	r2, r7
 3673 0034 3146     		mov	r1, r6
 3674 0036 2846     		mov	r0, r5
 3675 0038 FFF7FEFF 		bl	TI2_Config
 3676              	.LVL450:
 688:.//FWLIB/src/stm32f10x_tim.c ****   }
 3677              		.loc 1 688 0
 3678 003c E188     		ldrh	r1, [r4, #6]
 3679 003e 2846     		mov	r0, r5
 3680 0040 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3681              	.LVL451:
 3682 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3683              	.LVL452:
 3684              	.L188:
 693:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3685              		.loc 1 693 0
 3686 0046 2389     		ldrh	r3, [r4, #8]
 3687 0048 2846     		mov	r0, r5
 3688              	.LVL453:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 122


 3689 004a FFF7FEFF 		bl	TI2_Config
 3690              	.LVL454:
 696:.//FWLIB/src/stm32f10x_tim.c ****     /* TI1 Configuration */
 3691              		.loc 1 696 0
 3692 004e E188     		ldrh	r1, [r4, #6]
 3693 0050 2846     		mov	r0, r5
 3694 0052 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3695              	.LVL455:
 698:.//FWLIB/src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 3696              		.loc 1 698 0
 3697 0056 2389     		ldrh	r3, [r4, #8]
 3698 0058 3A46     		mov	r2, r7
 3699 005a 3146     		mov	r1, r6
 3700 005c 2846     		mov	r0, r5
 3701 005e FFF7FEFF 		bl	TI1_Config
 3702              	.LVL456:
 700:.//FWLIB/src/stm32f10x_tim.c ****   }
 3703              		.loc 1 700 0
 3704 0062 E188     		ldrh	r1, [r4, #6]
 3705 0064 2846     		mov	r0, r5
 3706 0066 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3707              	.LVL457:
 3708 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3709              		.cfi_endproc
 3710              	.LFE36:
 3712              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 3713              		.align	2
 3714              		.global	TIM_SetIC3Prescaler
 3715              		.thumb
 3716              		.thumb_func
 3718              	TIM_SetIC3Prescaler:
 3719              	.LFB103:
2398:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3720              		.loc 1 2398 0
 3721              		.cfi_startproc
 3722              		@ args = 0, pretend = 0, frame = 0
 3723              		@ frame_needed = 0, uses_anonymous_args = 0
 3724              		@ link register save eliminated.
 3725              	.LVL458:
2403:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
 3726              		.loc 1 2403 0
 3727 0000 838B     		ldrh	r3, [r0, #28]
 3728 0002 9BB2     		uxth	r3, r3
 3729 0004 23F00C03 		bic	r3, r3, #12
 3730 0008 9BB2     		uxth	r3, r3
 3731 000a 8383     		strh	r3, [r0, #28]	@ movhi
2405:.//FWLIB/src/stm32f10x_tim.c **** }
 3732              		.loc 1 2405 0
 3733 000c 838B     		ldrh	r3, [r0, #28]
 3734 000e 9BB2     		uxth	r3, r3
 3735 0010 1943     		orrs	r1, r1, r3
 3736              	.LVL459:
 3737 0012 8183     		strh	r1, [r0, #28]	@ movhi
 3738 0014 7047     		bx	lr
 3739              		.cfi_endproc
 3740              	.LFE103:
 3742 0016 00BF     		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 123


 3743              		.align	2
 3744              		.global	TIM_SetIC4Prescaler
 3745              		.thumb
 3746              		.thumb_func
 3748              	TIM_SetIC4Prescaler:
 3749              	.LFB104:
2420:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3750              		.loc 1 2420 0
 3751              		.cfi_startproc
 3752              		@ args = 0, pretend = 0, frame = 0
 3753              		@ frame_needed = 0, uses_anonymous_args = 0
 3754              		@ link register save eliminated.
 3755              	.LVL460:
2425:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
 3756              		.loc 1 2425 0
 3757 0000 838B     		ldrh	r3, [r0, #28]
 3758 0002 9BB2     		uxth	r3, r3
 3759 0004 23F44063 		bic	r3, r3, #3072
 3760 0008 9BB2     		uxth	r3, r3
 3761 000a 8383     		strh	r3, [r0, #28]	@ movhi
2427:.//FWLIB/src/stm32f10x_tim.c **** }
 3762              		.loc 1 2427 0
 3763 000c 838B     		ldrh	r3, [r0, #28]
 3764 000e 9BB2     		uxth	r3, r3
 3765 0010 0902     		lsls	r1, r1, #8
 3766              	.LVL461:
 3767 0012 89B2     		uxth	r1, r1
 3768 0014 1943     		orrs	r1, r1, r3
 3769 0016 8183     		strh	r1, [r0, #28]	@ movhi
 3770 0018 7047     		bx	lr
 3771              		.cfi_endproc
 3772              	.LFE104:
 3774 001a 00BF     		.section	.text.TIM_ICInit,"ax",%progbits
 3775              		.align	2
 3776              		.global	TIM_ICInit
 3777              		.thumb
 3778              		.thumb_func
 3780              	TIM_ICInit:
 3781              	.LFB35:
 588:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3782              		.loc 1 588 0
 3783              		.cfi_startproc
 3784              		@ args = 0, pretend = 0, frame = 0
 3785              		@ frame_needed = 0, uses_anonymous_args = 0
 3786              	.LVL462:
 3787 0000 38B5     		push	{r3, r4, r5, lr}
 3788              	.LCFI33:
 3789              		.cfi_def_cfa_offset 16
 3790              		.cfi_offset 3, -16
 3791              		.cfi_offset 4, -12
 3792              		.cfi_offset 5, -8
 3793              		.cfi_offset 14, -4
 3794 0002 0546     		mov	r5, r0
 3795 0004 0C46     		mov	r4, r1
 604:.//FWLIB/src/stm32f10x_tim.c ****   {
 3796              		.loc 1 604 0
 3797 0006 0B88     		ldrh	r3, [r1]
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 124


 3798 0008 4BB9     		cbnz	r3, .L196
 608:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3799              		.loc 1 608 0
 3800 000a 0B89     		ldrh	r3, [r1, #8]
 3801 000c 8A88     		ldrh	r2, [r1, #4]
 3802 000e 4988     		ldrh	r1, [r1, #2]
 3803              	.LVL463:
 3804 0010 FFF7FEFF 		bl	TI1_Config
 3805              	.LVL464:
 612:.//FWLIB/src/stm32f10x_tim.c ****   }
 3806              		.loc 1 612 0
 3807 0014 E188     		ldrh	r1, [r4, #6]
 3808 0016 2846     		mov	r0, r5
 3809 0018 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3810              	.LVL465:
 3811 001c 38BD     		pop	{r3, r4, r5, pc}
 3812              	.LVL466:
 3813              	.L196:
 614:.//FWLIB/src/stm32f10x_tim.c ****   {
 3814              		.loc 1 614 0
 3815 001e 042B     		cmp	r3, #4
 3816 0020 09D1     		bne	.L198
 618:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3817              		.loc 1 618 0
 3818 0022 0B89     		ldrh	r3, [r1, #8]
 3819 0024 8A88     		ldrh	r2, [r1, #4]
 3820 0026 4988     		ldrh	r1, [r1, #2]
 3821              	.LVL467:
 3822 0028 FFF7FEFF 		bl	TI2_Config
 3823              	.LVL468:
 622:.//FWLIB/src/stm32f10x_tim.c ****   }
 3824              		.loc 1 622 0
 3825 002c E188     		ldrh	r1, [r4, #6]
 3826 002e 2846     		mov	r0, r5
 3827 0030 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3828              	.LVL469:
 3829 0034 38BD     		pop	{r3, r4, r5, pc}
 3830              	.LVL470:
 3831              	.L198:
 624:.//FWLIB/src/stm32f10x_tim.c ****   {
 3832              		.loc 1 624 0
 3833 0036 082B     		cmp	r3, #8
 3834 0038 09D1     		bne	.L199
 628:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3835              		.loc 1 628 0
 3836 003a 0B89     		ldrh	r3, [r1, #8]
 3837 003c 8A88     		ldrh	r2, [r1, #4]
 3838 003e 4988     		ldrh	r1, [r1, #2]
 3839              	.LVL471:
 3840 0040 FFF7FEFF 		bl	TI3_Config
 3841              	.LVL472:
 632:.//FWLIB/src/stm32f10x_tim.c ****   }
 3842              		.loc 1 632 0
 3843 0044 E188     		ldrh	r1, [r4, #6]
 3844 0046 2846     		mov	r0, r5
 3845 0048 FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3846              	.LVL473:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 125


 3847 004c 38BD     		pop	{r3, r4, r5, pc}
 3848              	.LVL474:
 3849              	.L199:
 638:.//FWLIB/src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3850              		.loc 1 638 0
 3851 004e 0B89     		ldrh	r3, [r1, #8]
 3852 0050 8A88     		ldrh	r2, [r1, #4]
 3853 0052 4988     		ldrh	r1, [r1, #2]
 3854              	.LVL475:
 3855 0054 FFF7FEFF 		bl	TI4_Config
 3856              	.LVL476:
 642:.//FWLIB/src/stm32f10x_tim.c ****   }
 3857              		.loc 1 642 0
 3858 0058 E188     		ldrh	r1, [r4, #6]
 3859 005a 2846     		mov	r0, r5
 3860 005c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3861              	.LVL477:
 3862 0060 38BD     		pop	{r3, r4, r5, pc}
 3863              		.cfi_endproc
 3864              	.LFE35:
 3866 0062 00BF     		.section	.text.TIM_SetClockDivision,"ax",%progbits
 3867              		.align	2
 3868              		.global	TIM_SetClockDivision
 3869              		.thumb
 3870              		.thumb_func
 3872              	TIM_SetClockDivision:
 3873              	.LFB105:
2442:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3874              		.loc 1 2442 0
 3875              		.cfi_startproc
 3876              		@ args = 0, pretend = 0, frame = 0
 3877              		@ frame_needed = 0, uses_anonymous_args = 0
 3878              		@ link register save eliminated.
 3879              	.LVL478:
2447:.//FWLIB/src/stm32f10x_tim.c ****   /* Set the CKD value */
 3880              		.loc 1 2447 0
 3881 0000 0388     		ldrh	r3, [r0]
 3882 0002 9BB2     		uxth	r3, r3
 3883 0004 23F44073 		bic	r3, r3, #768
 3884 0008 9BB2     		uxth	r3, r3
 3885 000a 0380     		strh	r3, [r0]	@ movhi
2449:.//FWLIB/src/stm32f10x_tim.c **** }
 3886              		.loc 1 2449 0
 3887 000c 0388     		ldrh	r3, [r0]
 3888 000e 9BB2     		uxth	r3, r3
 3889 0010 1943     		orrs	r1, r1, r3
 3890              	.LVL479:
 3891 0012 0180     		strh	r1, [r0]	@ movhi
 3892 0014 7047     		bx	lr
 3893              		.cfi_endproc
 3894              	.LFE105:
 3896 0016 00BF     		.section	.text.TIM_GetCapture1,"ax",%progbits
 3897              		.align	2
 3898              		.global	TIM_GetCapture1
 3899              		.thumb
 3900              		.thumb_func
 3902              	TIM_GetCapture1:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 126


 3903              	.LFB106:
2458:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3904              		.loc 1 2458 0
 3905              		.cfi_startproc
 3906              		@ args = 0, pretend = 0, frame = 0
 3907              		@ frame_needed = 0, uses_anonymous_args = 0
 3908              		@ link register save eliminated.
 3909              	.LVL480:
2462:.//FWLIB/src/stm32f10x_tim.c **** }
 3910              		.loc 1 2462 0
 3911 0000 808E     		ldrh	r0, [r0, #52]
 3912              	.LVL481:
2463:.//FWLIB/src/stm32f10x_tim.c **** 
 3913              		.loc 1 2463 0
 3914 0002 80B2     		uxth	r0, r0
 3915 0004 7047     		bx	lr
 3916              		.cfi_endproc
 3917              	.LFE106:
 3919 0006 00BF     		.section	.text.TIM_GetCapture2,"ax",%progbits
 3920              		.align	2
 3921              		.global	TIM_GetCapture2
 3922              		.thumb
 3923              		.thumb_func
 3925              	TIM_GetCapture2:
 3926              	.LFB107:
2471:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3927              		.loc 1 2471 0
 3928              		.cfi_startproc
 3929              		@ args = 0, pretend = 0, frame = 0
 3930              		@ frame_needed = 0, uses_anonymous_args = 0
 3931              		@ link register save eliminated.
 3932              	.LVL482:
2475:.//FWLIB/src/stm32f10x_tim.c **** }
 3933              		.loc 1 2475 0
 3934 0000 008F     		ldrh	r0, [r0, #56]
 3935              	.LVL483:
2476:.//FWLIB/src/stm32f10x_tim.c **** 
 3936              		.loc 1 2476 0
 3937 0002 80B2     		uxth	r0, r0
 3938 0004 7047     		bx	lr
 3939              		.cfi_endproc
 3940              	.LFE107:
 3942 0006 00BF     		.section	.text.TIM_GetCapture3,"ax",%progbits
 3943              		.align	2
 3944              		.global	TIM_GetCapture3
 3945              		.thumb
 3946              		.thumb_func
 3948              	TIM_GetCapture3:
 3949              	.LFB108:
2484:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3950              		.loc 1 2484 0
 3951              		.cfi_startproc
 3952              		@ args = 0, pretend = 0, frame = 0
 3953              		@ frame_needed = 0, uses_anonymous_args = 0
 3954              		@ link register save eliminated.
 3955              	.LVL484:
2488:.//FWLIB/src/stm32f10x_tim.c **** }
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 127


 3956              		.loc 1 2488 0
 3957 0000 808F     		ldrh	r0, [r0, #60]
 3958              	.LVL485:
2489:.//FWLIB/src/stm32f10x_tim.c **** 
 3959              		.loc 1 2489 0
 3960 0002 80B2     		uxth	r0, r0
 3961 0004 7047     		bx	lr
 3962              		.cfi_endproc
 3963              	.LFE108:
 3965 0006 00BF     		.section	.text.TIM_GetCapture4,"ax",%progbits
 3966              		.align	2
 3967              		.global	TIM_GetCapture4
 3968              		.thumb
 3969              		.thumb_func
 3971              	TIM_GetCapture4:
 3972              	.LFB109:
2497:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3973              		.loc 1 2497 0
 3974              		.cfi_startproc
 3975              		@ args = 0, pretend = 0, frame = 0
 3976              		@ frame_needed = 0, uses_anonymous_args = 0
 3977              		@ link register save eliminated.
 3978              	.LVL486:
2501:.//FWLIB/src/stm32f10x_tim.c **** }
 3979              		.loc 1 2501 0
 3980 0000 B0F84000 		ldrh	r0, [r0, #64]
 3981              	.LVL487:
2502:.//FWLIB/src/stm32f10x_tim.c **** 
 3982              		.loc 1 2502 0
 3983 0004 80B2     		uxth	r0, r0
 3984 0006 7047     		bx	lr
 3985              		.cfi_endproc
 3986              	.LFE109:
 3988              		.section	.text.TIM_GetCounter,"ax",%progbits
 3989              		.align	2
 3990              		.global	TIM_GetCounter
 3991              		.thumb
 3992              		.thumb_func
 3994              	TIM_GetCounter:
 3995              	.LFB110:
2510:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 3996              		.loc 1 2510 0
 3997              		.cfi_startproc
 3998              		@ args = 0, pretend = 0, frame = 0
 3999              		@ frame_needed = 0, uses_anonymous_args = 0
 4000              		@ link register save eliminated.
 4001              	.LVL488:
2514:.//FWLIB/src/stm32f10x_tim.c **** }
 4002              		.loc 1 2514 0
 4003 0000 808C     		ldrh	r0, [r0, #36]
 4004              	.LVL489:
2515:.//FWLIB/src/stm32f10x_tim.c **** 
 4005              		.loc 1 2515 0
 4006 0002 80B2     		uxth	r0, r0
 4007 0004 7047     		bx	lr
 4008              		.cfi_endproc
 4009              	.LFE110:
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 128


 4011 0006 00BF     		.section	.text.TIM_GetPrescaler,"ax",%progbits
 4012              		.align	2
 4013              		.global	TIM_GetPrescaler
 4014              		.thumb
 4015              		.thumb_func
 4017              	TIM_GetPrescaler:
 4018              	.LFB111:
2523:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4019              		.loc 1 2523 0
 4020              		.cfi_startproc
 4021              		@ args = 0, pretend = 0, frame = 0
 4022              		@ frame_needed = 0, uses_anonymous_args = 0
 4023              		@ link register save eliminated.
 4024              	.LVL490:
2527:.//FWLIB/src/stm32f10x_tim.c **** }
 4025              		.loc 1 2527 0
 4026 0000 008D     		ldrh	r0, [r0, #40]
 4027              	.LVL491:
2528:.//FWLIB/src/stm32f10x_tim.c **** 
 4028              		.loc 1 2528 0
 4029 0002 80B2     		uxth	r0, r0
 4030 0004 7047     		bx	lr
 4031              		.cfi_endproc
 4032              	.LFE111:
 4034 0006 00BF     		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 4035              		.align	2
 4036              		.global	TIM_GetFlagStatus
 4037              		.thumb
 4038              		.thumb_func
 4040              	TIM_GetFlagStatus:
 4041              	.LFB112:
2557:.//FWLIB/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 4042              		.loc 1 2557 0
 4043              		.cfi_startproc
 4044              		@ args = 0, pretend = 0, frame = 0
 4045              		@ frame_needed = 0, uses_anonymous_args = 0
 4046              		@ link register save eliminated.
 4047              	.LVL492:
2563:.//FWLIB/src/stm32f10x_tim.c ****   {
 4048              		.loc 1 2563 0
 4049 0000 038A     		ldrh	r3, [r0, #16]
 4050 0002 1942     		tst	r1, r3
 4051 0004 01D0     		beq	.L210
2565:.//FWLIB/src/stm32f10x_tim.c ****   }
 4052              		.loc 1 2565 0
 4053 0006 0120     		movs	r0, #1
 4054              	.LVL493:
 4055 0008 7047     		bx	lr
 4056              	.LVL494:
 4057              	.L210:
2569:.//FWLIB/src/stm32f10x_tim.c ****   }
 4058              		.loc 1 2569 0
 4059 000a 0020     		movs	r0, #0
 4060              	.LVL495:
2572:.//FWLIB/src/stm32f10x_tim.c **** 
 4061              		.loc 1 2572 0
 4062 000c 7047     		bx	lr
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 129


 4063              		.cfi_endproc
 4064              	.LFE112:
 4066 000e 00BF     		.section	.text.TIM_ClearFlag,"ax",%progbits
 4067              		.align	2
 4068              		.global	TIM_ClearFlag
 4069              		.thumb
 4070              		.thumb_func
 4072              	TIM_ClearFlag:
 4073              	.LFB113:
2601:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4074              		.loc 1 2601 0
 4075              		.cfi_startproc
 4076              		@ args = 0, pretend = 0, frame = 0
 4077              		@ frame_needed = 0, uses_anonymous_args = 0
 4078              		@ link register save eliminated.
 4079              	.LVL496:
2607:.//FWLIB/src/stm32f10x_tim.c **** }
 4080              		.loc 1 2607 0
 4081 0000 C943     		mvns	r1, r1
 4082              	.LVL497:
 4083 0002 89B2     		uxth	r1, r1
 4084 0004 0182     		strh	r1, [r0, #16]	@ movhi
 4085 0006 7047     		bx	lr
 4086              		.cfi_endproc
 4087              	.LFE113:
 4089              		.section	.text.TIM_GetITStatus,"ax",%progbits
 4090              		.align	2
 4091              		.global	TIM_GetITStatus
 4092              		.thumb
 4093              		.thumb_func
 4095              	TIM_GetITStatus:
 4096              	.LFB114:
2633:.//FWLIB/src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 4097              		.loc 1 2633 0
 4098              		.cfi_startproc
 4099              		@ args = 0, pretend = 0, frame = 0
 4100              		@ frame_needed = 0, uses_anonymous_args = 0
 4101              		@ link register save eliminated.
 4102              	.LVL498:
2640:.//FWLIB/src/stm32f10x_tim.c ****   
 4103              		.loc 1 2640 0
 4104 0000 028A     		ldrh	r2, [r0, #16]
 4105              	.LVL499:
2642:.//FWLIB/src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4106              		.loc 1 2642 0
 4107 0002 8389     		ldrh	r3, [r0, #12]
 4108 0004 0B40     		ands	r3, r3, r1
 4109              	.LVL500:
2643:.//FWLIB/src/stm32f10x_tim.c ****   {
 4110              		.loc 1 2643 0
 4111 0006 1142     		tst	r1, r2
 4112 0008 02D0     		beq	.L214
2643:.//FWLIB/src/stm32f10x_tim.c ****   {
 4113              		.loc 1 2643 0 is_stmt 0 discriminator 1
 4114 000a 1BB9     		cbnz	r3, .L215
2649:.//FWLIB/src/stm32f10x_tim.c ****   }
 4115              		.loc 1 2649 0 is_stmt 1
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 130


 4116 000c 0020     		movs	r0, #0
 4117              	.LVL501:
 4118 000e 7047     		bx	lr
 4119              	.LVL502:
 4120              	.L214:
 4121 0010 0020     		movs	r0, #0
 4122              	.LVL503:
 4123 0012 7047     		bx	lr
 4124              	.LVL504:
 4125              	.L215:
2645:.//FWLIB/src/stm32f10x_tim.c ****   }
 4126              		.loc 1 2645 0
 4127 0014 0120     		movs	r0, #1
 4128              	.LVL505:
2652:.//FWLIB/src/stm32f10x_tim.c **** 
 4129              		.loc 1 2652 0
 4130 0016 7047     		bx	lr
 4131              		.cfi_endproc
 4132              	.LFE114:
 4134              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 4135              		.align	2
 4136              		.global	TIM_ClearITPendingBit
 4137              		.thumb
 4138              		.thumb_func
 4140              	TIM_ClearITPendingBit:
 4141              	.LFB115:
2677:.//FWLIB/src/stm32f10x_tim.c ****   /* Check the parameters */
 4142              		.loc 1 2677 0
 4143              		.cfi_startproc
 4144              		@ args = 0, pretend = 0, frame = 0
 4145              		@ frame_needed = 0, uses_anonymous_args = 0
 4146              		@ link register save eliminated.
 4147              	.LVL506:
2682:.//FWLIB/src/stm32f10x_tim.c **** }
 4148              		.loc 1 2682 0
 4149 0000 C943     		mvns	r1, r1
 4150              	.LVL507:
 4151 0002 89B2     		uxth	r1, r1
 4152 0004 0182     		strh	r1, [r0, #16]	@ movhi
 4153 0006 7047     		bx	lr
 4154              		.cfi_endproc
 4155              	.LFE115:
 4157              		.text
 4158              	.Letext0:
 4159              		.file 2 "/Users/ertuil/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 4160              		.file 3 "/Users/ertuil/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 4161              		.file 4 "USER/stm32f10x.h"
 4162              		.file 5 "FWLIB/inc/stm32f10x_tim.h"
 4163              		.file 6 "FWLIB/inc/stm32f10x_rcc.h"
 4164              		.file 7 "CORE/core_cm3.h"
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 131


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_tim.c
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:20     .text.TI1_Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:24     .text.TI1_Config:0000000000000000 TI1_Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:122    .text.TI1_Config:0000000000000070 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:127    .text.TI2_Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:131    .text.TI2_Config:0000000000000000 TI2_Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:241    .text.TI2_Config:0000000000000078 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:246    .text.TI3_Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:250    .text.TI3_Config:0000000000000000 TI3_Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:354    .text.TI3_Config:0000000000000074 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:359    .text.TI4_Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:363    .text.TI4_Config:0000000000000000 TI4_Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:475    .text.TI4_Config:000000000000007c $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:480    .text.TIM_DeInit:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:485    .text.TIM_DeInit:0000000000000000 TIM_DeInit
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:804    .text.TIM_DeInit:00000000000001c0 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:824    .text.TIM_TimeBaseInit:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:829    .text.TIM_TimeBaseInit:0000000000000000 TIM_TimeBaseInit
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:933    .text.TIM_TimeBaseInit:000000000000008c $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:939    .text.TIM_OC1Init:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:944    .text.TIM_OC1Init:0000000000000000 TIM_OC1Init
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1062   .text.TIM_OC1Init:0000000000000080 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1067   .text.TIM_OC2Init:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1072   .text.TIM_OC2Init:0000000000000000 TIM_OC2Init
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1191   .text.TIM_OC2Init:0000000000000084 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1196   .text.TIM_OC3Init:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1201   .text.TIM_OC3Init:0000000000000000 TIM_OC3Init
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1318   .text.TIM_OC3Init:0000000000000080 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1323   .text.TIM_OC4Init:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1328   .text.TIM_OC4Init:0000000000000000 TIM_OC4Init
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1425   .text.TIM_OC4Init:0000000000000064 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1430   .text.TIM_BDTRConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1435   .text.TIM_BDTRConfig:0000000000000000 TIM_BDTRConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1475   .text.TIM_TimeBaseStructInit:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1480   .text.TIM_TimeBaseStructInit:0000000000000000 TIM_TimeBaseStructInit
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1505   .text.TIM_OCStructInit:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1510   .text.TIM_OCStructInit:0000000000000000 TIM_OCStructInit
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1540   .text.TIM_ICStructInit:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1545   .text.TIM_ICStructInit:0000000000000000 TIM_ICStructInit
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1570   .text.TIM_BDTRStructInit:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1575   .text.TIM_BDTRStructInit:0000000000000000 TIM_BDTRStructInit
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1603   .text.TIM_Cmd:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1608   .text.TIM_Cmd:0000000000000000 TIM_Cmd
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1636   .text.TIM_CtrlPWMOutputs:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1641   .text.TIM_CtrlPWMOutputs:0000000000000000 TIM_CtrlPWMOutputs
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1668   .text.TIM_ITConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1673   .text.TIM_ITConfig:0000000000000000 TIM_ITConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1704   .text.TIM_GenerateEvent:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1709   .text.TIM_GenerateEvent:0000000000000000 TIM_GenerateEvent
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1724   .text.TIM_DMAConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1729   .text.TIM_DMAConfig:0000000000000000 TIM_DMAConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1746   .text.TIM_DMACmd:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1751   .text.TIM_DMACmd:0000000000000000 TIM_DMACmd
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1782   .text.TIM_InternalClockConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1787   .text.TIM_InternalClockConfig:0000000000000000 TIM_InternalClockConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1806   .text.TIM_ETRConfig:0000000000000000 $t
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 132


/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1811   .text.TIM_ETRConfig:0000000000000000 TIM_ETRConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1852   .text.TIM_ETRClockMode1Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1857   .text.TIM_ETRClockMode1Config:0000000000000000 TIM_ETRClockMode1Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1888   .text.TIM_ETRClockMode2Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1893   .text.TIM_ETRClockMode2Config:0000000000000000 TIM_ETRClockMode2Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1919   .text.TIM_PrescalerConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1924   .text.TIM_PrescalerConfig:0000000000000000 TIM_PrescalerConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1941   .text.TIM_CounterModeConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1946   .text.TIM_CounterModeConfig:0000000000000000 TIM_CounterModeConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1971   .text.TIM_SelectInputTrigger:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:1976   .text.TIM_SelectInputTrigger:0000000000000000 TIM_SelectInputTrigger
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2001   .text.TIM_ITRxExternalClockConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2006   .text.TIM_ITRxExternalClockConfig:0000000000000000 TIM_ITRxExternalClockConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2032   .text.TIM_TIxExternalClockConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2037   .text.TIM_TIxExternalClockConfig:0000000000000000 TIM_TIxExternalClockConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2087   .text.TIM_EncoderInterfaceConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2092   .text.TIM_EncoderInterfaceConfig:0000000000000000 TIM_EncoderInterfaceConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2165   .text.TIM_ForcedOC1Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2170   .text.TIM_ForcedOC1Config:0000000000000000 TIM_ForcedOC1Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2195   .text.TIM_ForcedOC2Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2200   .text.TIM_ForcedOC2Config:0000000000000000 TIM_ForcedOC2Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2228   .text.TIM_ForcedOC3Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2233   .text.TIM_ForcedOC3Config:0000000000000000 TIM_ForcedOC3Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2258   .text.TIM_ForcedOC4Config:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2263   .text.TIM_ForcedOC4Config:0000000000000000 TIM_ForcedOC4Config
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2291   .text.TIM_ARRPreloadConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2296   .text.TIM_ARRPreloadConfig:0000000000000000 TIM_ARRPreloadConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2324   .text.TIM_SelectCOM:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2329   .text.TIM_SelectCOM:0000000000000000 TIM_SelectCOM
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2357   .text.TIM_SelectCCDMA:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2362   .text.TIM_SelectCCDMA:0000000000000000 TIM_SelectCCDMA
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2390   .text.TIM_CCPreloadControl:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2395   .text.TIM_CCPreloadControl:0000000000000000 TIM_CCPreloadControl
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2423   .text.TIM_OC1PreloadConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2428   .text.TIM_OC1PreloadConfig:0000000000000000 TIM_OC1PreloadConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2453   .text.TIM_OC2PreloadConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2458   .text.TIM_OC2PreloadConfig:0000000000000000 TIM_OC2PreloadConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2486   .text.TIM_OC3PreloadConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2491   .text.TIM_OC3PreloadConfig:0000000000000000 TIM_OC3PreloadConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2516   .text.TIM_OC4PreloadConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2521   .text.TIM_OC4PreloadConfig:0000000000000000 TIM_OC4PreloadConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2549   .text.TIM_OC1FastConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2554   .text.TIM_OC1FastConfig:0000000000000000 TIM_OC1FastConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2579   .text.TIM_OC2FastConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2584   .text.TIM_OC2FastConfig:0000000000000000 TIM_OC2FastConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2612   .text.TIM_OC3FastConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2617   .text.TIM_OC3FastConfig:0000000000000000 TIM_OC3FastConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2642   .text.TIM_OC4FastConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2647   .text.TIM_OC4FastConfig:0000000000000000 TIM_OC4FastConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2675   .text.TIM_ClearOC1Ref:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2680   .text.TIM_ClearOC1Ref:0000000000000000 TIM_ClearOC1Ref
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2705   .text.TIM_ClearOC2Ref:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2710   .text.TIM_ClearOC2Ref:0000000000000000 TIM_ClearOC2Ref
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2737   .text.TIM_ClearOC3Ref:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2742   .text.TIM_ClearOC3Ref:0000000000000000 TIM_ClearOC3Ref
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2767   .text.TIM_ClearOC4Ref:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2772   .text.TIM_ClearOC4Ref:0000000000000000 TIM_ClearOC4Ref
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 133


/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2799   .text.TIM_OC1PolarityConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2804   .text.TIM_OC1PolarityConfig:0000000000000000 TIM_OC1PolarityConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2829   .text.TIM_OC1NPolarityConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2834   .text.TIM_OC1NPolarityConfig:0000000000000000 TIM_OC1NPolarityConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2859   .text.TIM_OC2PolarityConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2864   .text.TIM_OC2PolarityConfig:0000000000000000 TIM_OC2PolarityConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2892   .text.TIM_OC2NPolarityConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2897   .text.TIM_OC2NPolarityConfig:0000000000000000 TIM_OC2NPolarityConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2925   .text.TIM_OC3PolarityConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2930   .text.TIM_OC3PolarityConfig:0000000000000000 TIM_OC3PolarityConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2958   .text.TIM_OC3NPolarityConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2963   .text.TIM_OC3NPolarityConfig:0000000000000000 TIM_OC3NPolarityConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2991   .text.TIM_OC4PolarityConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:2996   .text.TIM_OC4PolarityConfig:0000000000000000 TIM_OC4PolarityConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3024   .text.TIM_CCxCmd:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3029   .text.TIM_CCxCmd:0000000000000000 TIM_CCxCmd
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3073   .text.TIM_CCxNCmd:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3078   .text.TIM_CCxNCmd:0000000000000000 TIM_CCxNCmd
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3122   .text.TIM_SelectOCxM:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3127   .text.TIM_SelectOCxM:0000000000000000 TIM_SelectOCxM
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3207   .text.TIM_UpdateDisableConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3212   .text.TIM_UpdateDisableConfig:0000000000000000 TIM_UpdateDisableConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3240   .text.TIM_UpdateRequestConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3245   .text.TIM_UpdateRequestConfig:0000000000000000 TIM_UpdateRequestConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3273   .text.TIM_SelectHallSensor:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3278   .text.TIM_SelectHallSensor:0000000000000000 TIM_SelectHallSensor
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3306   .text.TIM_SelectOnePulseMode:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3311   .text.TIM_SelectOnePulseMode:0000000000000000 TIM_SelectOnePulseMode
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3336   .text.TIM_SelectOutputTrigger:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3341   .text.TIM_SelectOutputTrigger:0000000000000000 TIM_SelectOutputTrigger
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3366   .text.TIM_SelectSlaveMode:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3371   .text.TIM_SelectSlaveMode:0000000000000000 TIM_SelectSlaveMode
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3396   .text.TIM_SelectMasterSlaveMode:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3401   .text.TIM_SelectMasterSlaveMode:0000000000000000 TIM_SelectMasterSlaveMode
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3426   .text.TIM_SetCounter:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3431   .text.TIM_SetCounter:0000000000000000 TIM_SetCounter
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3446   .text.TIM_SetAutoreload:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3451   .text.TIM_SetAutoreload:0000000000000000 TIM_SetAutoreload
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3466   .text.TIM_SetCompare1:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3471   .text.TIM_SetCompare1:0000000000000000 TIM_SetCompare1
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3486   .text.TIM_SetCompare2:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3491   .text.TIM_SetCompare2:0000000000000000 TIM_SetCompare2
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3506   .text.TIM_SetCompare3:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3511   .text.TIM_SetCompare3:0000000000000000 TIM_SetCompare3
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3526   .text.TIM_SetCompare4:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3531   .text.TIM_SetCompare4:0000000000000000 TIM_SetCompare4
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3546   .text.TIM_SetIC1Prescaler:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3551   .text.TIM_SetIC1Prescaler:0000000000000000 TIM_SetIC1Prescaler
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3576   .text.TIM_SetIC2Prescaler:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3581   .text.TIM_SetIC2Prescaler:0000000000000000 TIM_SetIC2Prescaler
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3608   .text.TIM_PWMIConfig:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3613   .text.TIM_PWMIConfig:0000000000000000 TIM_PWMIConfig
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3713   .text.TIM_SetIC3Prescaler:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3718   .text.TIM_SetIC3Prescaler:0000000000000000 TIM_SetIC3Prescaler
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3743   .text.TIM_SetIC4Prescaler:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3748   .text.TIM_SetIC4Prescaler:0000000000000000 TIM_SetIC4Prescaler
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3775   .text.TIM_ICInit:0000000000000000 $t
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s 			page 134


/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3780   .text.TIM_ICInit:0000000000000000 TIM_ICInit
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3867   .text.TIM_SetClockDivision:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3872   .text.TIM_SetClockDivision:0000000000000000 TIM_SetClockDivision
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3897   .text.TIM_GetCapture1:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3902   .text.TIM_GetCapture1:0000000000000000 TIM_GetCapture1
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3920   .text.TIM_GetCapture2:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3925   .text.TIM_GetCapture2:0000000000000000 TIM_GetCapture2
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3943   .text.TIM_GetCapture3:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3948   .text.TIM_GetCapture3:0000000000000000 TIM_GetCapture3
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3966   .text.TIM_GetCapture4:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3971   .text.TIM_GetCapture4:0000000000000000 TIM_GetCapture4
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3989   .text.TIM_GetCounter:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:3994   .text.TIM_GetCounter:0000000000000000 TIM_GetCounter
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4012   .text.TIM_GetPrescaler:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4017   .text.TIM_GetPrescaler:0000000000000000 TIM_GetPrescaler
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4035   .text.TIM_GetFlagStatus:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4040   .text.TIM_GetFlagStatus:0000000000000000 TIM_GetFlagStatus
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4067   .text.TIM_ClearFlag:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4072   .text.TIM_ClearFlag:0000000000000000 TIM_ClearFlag
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4090   .text.TIM_GetITStatus:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4095   .text.TIM_GetITStatus:0000000000000000 TIM_GetITStatus
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4135   .text.TIM_ClearITPendingBit:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//cctBEow3.s:4140   .text.TIM_ClearITPendingBit:0000000000000000 TIM_ClearITPendingBit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
