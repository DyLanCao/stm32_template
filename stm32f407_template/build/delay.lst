ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"delay.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.delay_init,"ax",%progbits
  22              		.align	2
  23              		.global	delay_init
  24              		.thumb
  25              		.thumb_func
  27              	delay_init:
  28              	.LFB112:
  29              		.file 1 ".//SYSTEM/delay.c"
   1:.//SYSTEM/delay.c **** #include "delay.h"
   2:.//SYSTEM/delay.c **** #include "sys.h"
   3:.//SYSTEM/delay.c **** ////////////////////////////////////////////////////////////////////////////////// 	 
   4:.//SYSTEM/delay.c **** //如果使用ucos,则包括下面的头文件即可.
   5:.//SYSTEM/delay.c **** #if SYSTEM_SUPPORT_UCOS
   6:.//SYSTEM/delay.c **** #include "includes.h"					//ucos 使用	  
   7:.//SYSTEM/delay.c **** #endif
   8:.//SYSTEM/delay.c **** //////////////////////////////////////////////////////////////////////////////////  
   9:.//SYSTEM/delay.c **** //本程序只供学习使用，未经作者许可，不得用于其它任何用途
  10:.//SYSTEM/delay.c **** //ALIENTEK STM32F407开发板
  11:.//SYSTEM/delay.c **** //使用SysTick的普通计数模式对延迟进行管理(支持ucosii)
  12:.//SYSTEM/delay.c **** //包括delay_us,delay_ms
  13:.//SYSTEM/delay.c **** //正点原子@ALIENTEK
  14:.//SYSTEM/delay.c **** //技术论坛:www.openedv.com
  15:.//SYSTEM/delay.c **** //修改日期:2014/5/2
  16:.//SYSTEM/delay.c **** //版本：V1.0
  17:.//SYSTEM/delay.c **** //版权所有，盗版必究。
  18:.//SYSTEM/delay.c **** //Copyright(C) 广州市星翼电子科技有限公司 2014-2024
  19:.//SYSTEM/delay.c **** //All rights reserved
  20:.//SYSTEM/delay.c **** //********************************************************************************
  21:.//SYSTEM/delay.c **** //修改说明
  22:.//SYSTEM/delay.c **** //无
  23:.//SYSTEM/delay.c **** ////////////////////////////////////////////////////////////////////////////////// 
  24:.//SYSTEM/delay.c ****  
  25:.//SYSTEM/delay.c **** static u8  fac_us=0;//us延时倍乘数			   
  26:.//SYSTEM/delay.c **** static u16 fac_ms=0;//ms延时倍乘数,在ucos下,代表每个节拍的ms数
  27:.//SYSTEM/delay.c **** 
  28:.//SYSTEM/delay.c **** #ifdef OS_CRITICAL_METHOD 	//如果OS_CRITICAL_METHOD定义了,说明使用ucosII了.
  29:.//SYSTEM/delay.c **** //systick中断服务函数,使用ucos时用到
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 2


  30:.//SYSTEM/delay.c **** void SysTick_Handler(void)
  31:.//SYSTEM/delay.c **** {				   
  32:.//SYSTEM/delay.c **** 	OSIntEnter();		//进入中断
  33:.//SYSTEM/delay.c ****     OSTimeTick();       //调用ucos的时钟服务程序               
  34:.//SYSTEM/delay.c ****     OSIntExit();        //触发任务切换软中断
  35:.//SYSTEM/delay.c **** }
  36:.//SYSTEM/delay.c **** #endif
  37:.//SYSTEM/delay.c **** 			   
  38:.//SYSTEM/delay.c **** //初始化延迟函数
  39:.//SYSTEM/delay.c **** //当使用ucos的时候,此函数会初始化ucos的时钟节拍
  40:.//SYSTEM/delay.c **** //SYSTICK的时钟固定为HCLK时钟的1/8
  41:.//SYSTEM/delay.c **** //SYSCLK:系统时钟
  42:.//SYSTEM/delay.c **** void delay_init(u8 SYSCLK)
  43:.//SYSTEM/delay.c **** {
  30              		.loc 1 43 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 0446     		mov	r4, r0
  44:.//SYSTEM/delay.c **** #ifdef OS_CRITICAL_METHOD 	//如果OS_CRITICAL_METHOD定义了,说明使用ucosII了.
  45:.//SYSTEM/delay.c **** 	u32 reload;
  46:.//SYSTEM/delay.c **** #endif
  47:.//SYSTEM/delay.c ****  	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);
  41              		.loc 1 47 0
  42 0004 6FF00400 		mvn	r0, #4
  43              	.LVL1:
  44 0008 FFF7FEFF 		bl	SysTick_CLKSourceConfig
  45              	.LVL2:
  48:.//SYSTEM/delay.c **** 	fac_us=SYSCLK/8;		//不论是否使用ucos,fac_us都需要使用
  46              		.loc 1 48 0
  47 000c E008     		lsrs	r0, r4, #3
  48 000e 054B     		ldr	r3, .L3
  49 0010 1870     		strb	r0, [r3]
  49:.//SYSTEM/delay.c **** 	    
  50:.//SYSTEM/delay.c **** #ifdef OS_CRITICAL_METHOD 	//如果OS_CRITICAL_METHOD定义了,说明使用ucosII了.
  51:.//SYSTEM/delay.c **** 	reload=SYSCLK/8;		//每秒钟的计数次数 单位为K	   
  52:.//SYSTEM/delay.c **** 	reload*=1000000/OS_TICKS_PER_SEC;//根据OS_TICKS_PER_SEC设定溢出时间
  53:.//SYSTEM/delay.c **** 							//reload为24位寄存器,最大值:16777216,在168M下,约合0.7989s左右	
  54:.//SYSTEM/delay.c **** 	fac_ms=1000/OS_TICKS_PER_SEC;//代表ucos可以延时的最少单位	   
  55:.//SYSTEM/delay.c **** 	SysTick->CTRL|=SysTick_CTRL_TICKINT_Msk;   	//开启SYSTICK中断
  56:.//SYSTEM/delay.c **** 	SysTick->LOAD=reload; 	//每1/OS_TICKS_PER_SEC秒中断一次	
  57:.//SYSTEM/delay.c **** 	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk;   	//开启SYSTICK
  58:.//SYSTEM/delay.c **** #else
  59:.//SYSTEM/delay.c **** 	fac_ms=(u16)fac_us*1000;//非ucos下,代表每个ms需要的systick时钟数   
  50              		.loc 1 59 0
  51 0012 C0EB4013 		rsb	r3, r0, r0, lsl #5
  52 0016 00EB8300 		add	r0, r0, r3, lsl #2
  53 001a C300     		lsls	r3, r0, #3
  54 001c 024A     		ldr	r2, .L3+4
  55 001e 1380     		strh	r3, [r2]	@ movhi
  56 0020 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 3


  57              	.L4:
  58 0022 00BF     		.align	2
  59              	.L3:
  60 0024 00000000 		.word	.LANCHOR0
  61 0028 00000000 		.word	.LANCHOR1
  62              		.cfi_endproc
  63              	.LFE112:
  65              		.section	.text.delay_us,"ax",%progbits
  66              		.align	2
  67              		.global	delay_us
  68              		.thumb
  69              		.thumb_func
  71              	delay_us:
  72              	.LFB113:
  60:.//SYSTEM/delay.c **** #endif
  61:.//SYSTEM/delay.c **** }								    
  62:.//SYSTEM/delay.c **** 
  63:.//SYSTEM/delay.c **** #ifdef OS_CRITICAL_METHOD 	//如果OS_CRITICAL_METHOD定义了,说明使用ucosII了.
  64:.//SYSTEM/delay.c **** //延时nus
  65:.//SYSTEM/delay.c **** //nus:要延时的us数.		    								   
  66:.//SYSTEM/delay.c **** void delay_us(u32 nus)
  67:.//SYSTEM/delay.c **** {		
  68:.//SYSTEM/delay.c **** 	u32 ticks;
  69:.//SYSTEM/delay.c **** 	u32 told,tnow,tcnt=0;
  70:.//SYSTEM/delay.c **** 	u32 reload=SysTick->LOAD;	//LOAD的值	    	 
  71:.//SYSTEM/delay.c **** 	ticks=nus*fac_us; 			//需要的节拍数	  		 
  72:.//SYSTEM/delay.c **** 	tcnt=0;
  73:.//SYSTEM/delay.c **** 	OSSchedLock();				//阻止ucos调度，防止打断us延时
  74:.//SYSTEM/delay.c **** 	told=SysTick->VAL;        	//刚进入时的计数器值
  75:.//SYSTEM/delay.c **** 	while(1)
  76:.//SYSTEM/delay.c **** 	{
  77:.//SYSTEM/delay.c **** 		tnow=SysTick->VAL;	
  78:.//SYSTEM/delay.c **** 		if(tnow!=told)
  79:.//SYSTEM/delay.c **** 		{	    
  80:.//SYSTEM/delay.c **** 			if(tnow<told)tcnt+=told-tnow;//这里注意一下SYSTICK是一个递减的计数器就可以了.
  81:.//SYSTEM/delay.c **** 			else tcnt+=reload-tnow+told;	    
  82:.//SYSTEM/delay.c **** 			told=tnow;
  83:.//SYSTEM/delay.c **** 			if(tcnt>=ticks)break;//时间超过/等于要延迟的时间,则退出.
  84:.//SYSTEM/delay.c **** 		}  
  85:.//SYSTEM/delay.c **** 	};
  86:.//SYSTEM/delay.c **** 	OSSchedUnlock();			//开启ucos调度 									    
  87:.//SYSTEM/delay.c **** }
  88:.//SYSTEM/delay.c **** //延时nms
  89:.//SYSTEM/delay.c **** //nms:要延时的ms数
  90:.//SYSTEM/delay.c **** void delay_ms(u16 nms)
  91:.//SYSTEM/delay.c **** {	
  92:.//SYSTEM/delay.c **** 		if(OSRunning==OS_TRUE&&OSLockNesting==0)//如果os已经在跑了	   
  93:.//SYSTEM/delay.c **** 	{		  
  94:.//SYSTEM/delay.c **** 		if(nms>=fac_ms)//延时的时间大于ucos的最少时间周期 
  95:.//SYSTEM/delay.c **** 		{
  96:.//SYSTEM/delay.c ****    			OSTimeDly(nms/fac_ms);	//ucos延时
  97:.//SYSTEM/delay.c **** 		}
  98:.//SYSTEM/delay.c **** 		nms%=fac_ms;				//ucos已经无法提供这么小的延时了,采用普通方式延时    
  99:.//SYSTEM/delay.c **** 	}
 100:.//SYSTEM/delay.c **** 	delay_us((u32)(nms*1000));		//普通方式延时 
 101:.//SYSTEM/delay.c **** }
 102:.//SYSTEM/delay.c **** #else  //不用ucos时
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 4


 103:.//SYSTEM/delay.c **** //延时nus
 104:.//SYSTEM/delay.c **** //nus为要延时的us数.	
 105:.//SYSTEM/delay.c **** //注意:nus的值,不要大于798915us
 106:.//SYSTEM/delay.c **** void delay_us(u32 nus)
 107:.//SYSTEM/delay.c **** {		
  73              		.loc 1 107 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.LVL3:
 108:.//SYSTEM/delay.c **** 	u32 temp;	    	 
 109:.//SYSTEM/delay.c **** 	SysTick->LOAD=nus*fac_us; //时间加载	  		 
  79              		.loc 1 109 0
  80 0000 0C4B     		ldr	r3, .L7
  81 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  82 0004 00FB03F0 		mul	r0, r0, r3
  83              	.LVL4:
  84 0008 0B4B     		ldr	r3, .L7+4
  85 000a 5860     		str	r0, [r3, #4]
 110:.//SYSTEM/delay.c **** 	SysTick->VAL=0x00;        //清空计数器
  86              		.loc 1 110 0
  87 000c 0022     		movs	r2, #0
  88 000e 9A60     		str	r2, [r3, #8]
 111:.//SYSTEM/delay.c **** 	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;          //开始倒数 
  89              		.loc 1 111 0
  90 0010 1A68     		ldr	r2, [r3]
  91 0012 42F00102 		orr	r2, r2, #1
  92 0016 1A60     		str	r2, [r3]
  93              	.L6:
 112:.//SYSTEM/delay.c **** 	do
 113:.//SYSTEM/delay.c **** 	{
 114:.//SYSTEM/delay.c **** 		temp=SysTick->CTRL;
  94              		.loc 1 114 0 discriminator 1
  95 0018 074B     		ldr	r3, .L7+4
  96 001a 1B68     		ldr	r3, [r3]
  97              	.LVL5:
 115:.//SYSTEM/delay.c **** 	}
 116:.//SYSTEM/delay.c **** 	while((temp&0x01)&&!(temp&(1<<16)));//等待时间到达   
  98              		.loc 1 116 0 discriminator 1
  99 001c 03F00113 		and	r3, r3, #65537
 100              	.LVL6:
 101 0020 012B     		cmp	r3, #1
 102 0022 F9D0     		beq	.L6
 117:.//SYSTEM/delay.c **** 	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;       //关闭计数器
 103              		.loc 1 117 0
 104 0024 044B     		ldr	r3, .L7+4
 105 0026 1A68     		ldr	r2, [r3]
 106 0028 22F00102 		bic	r2, r2, #1
 107 002c 1A60     		str	r2, [r3]
 118:.//SYSTEM/delay.c **** 	SysTick->VAL =0X00;       //清空计数器	 
 108              		.loc 1 118 0
 109 002e 0022     		movs	r2, #0
 110 0030 9A60     		str	r2, [r3, #8]
 111 0032 7047     		bx	lr
 112              	.L8:
 113              		.align	2
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 5


 114              	.L7:
 115 0034 00000000 		.word	.LANCHOR0
 116 0038 10E000E0 		.word	-536813552
 117              		.cfi_endproc
 118              	.LFE113:
 120              		.section	.text.delay_xms,"ax",%progbits
 121              		.align	2
 122              		.global	delay_xms
 123              		.thumb
 124              		.thumb_func
 126              	delay_xms:
 127              	.LFB114:
 119:.//SYSTEM/delay.c **** }
 120:.//SYSTEM/delay.c **** //延时nms
 121:.//SYSTEM/delay.c **** //注意nms的范围
 122:.//SYSTEM/delay.c **** //SysTick->LOAD为24位寄存器,所以,最大延时为:
 123:.//SYSTEM/delay.c **** //nms<=0xffffff*8*1000/SYSCLK
 124:.//SYSTEM/delay.c **** //SYSCLK单位为Hz,nms单位为ms
 125:.//SYSTEM/delay.c **** //对168M条件下,nms<=798ms 
 126:.//SYSTEM/delay.c **** void delay_xms(u16 nms)
 127:.//SYSTEM/delay.c **** {	 		  	  
 128              		.loc 1 127 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133              	.LVL7:
 128:.//SYSTEM/delay.c **** 	u32 temp;		   
 129:.//SYSTEM/delay.c **** 	SysTick->LOAD=(u32)nms*fac_ms;//时间加载(SysTick->LOAD为24bit)
 134              		.loc 1 129 0
 135 0000 0C4B     		ldr	r3, .L11
 136 0002 1B88     		ldrh	r3, [r3]
 137 0004 00FB03F0 		mul	r0, r0, r3
 138              	.LVL8:
 139 0008 0B4B     		ldr	r3, .L11+4
 140 000a 5860     		str	r0, [r3, #4]
 130:.//SYSTEM/delay.c **** 	SysTick->VAL =0x00;           //清空计数器
 141              		.loc 1 130 0
 142 000c 0022     		movs	r2, #0
 143 000e 9A60     		str	r2, [r3, #8]
 131:.//SYSTEM/delay.c **** 	SysTick->CTRL|=SysTick_CTRL_ENABLE_Msk ;          //开始倒数  
 144              		.loc 1 131 0
 145 0010 1A68     		ldr	r2, [r3]
 146 0012 42F00102 		orr	r2, r2, #1
 147 0016 1A60     		str	r2, [r3]
 148              	.L10:
 132:.//SYSTEM/delay.c **** 	do
 133:.//SYSTEM/delay.c **** 	{
 134:.//SYSTEM/delay.c **** 		temp=SysTick->CTRL;
 149              		.loc 1 134 0 discriminator 1
 150 0018 074B     		ldr	r3, .L11+4
 151 001a 1B68     		ldr	r3, [r3]
 152              	.LVL9:
 135:.//SYSTEM/delay.c **** 	}
 136:.//SYSTEM/delay.c **** 	while((temp&0x01)&&!(temp&(1<<16)));//等待时间到达   
 153              		.loc 1 136 0 discriminator 1
 154 001c 03F00113 		and	r3, r3, #65537
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 6


 155              	.LVL10:
 156 0020 012B     		cmp	r3, #1
 157 0022 F9D0     		beq	.L10
 137:.//SYSTEM/delay.c **** 	SysTick->CTRL&=~SysTick_CTRL_ENABLE_Msk;       //关闭计数器
 158              		.loc 1 137 0
 159 0024 044B     		ldr	r3, .L11+4
 160 0026 1A68     		ldr	r2, [r3]
 161 0028 22F00102 		bic	r2, r2, #1
 162 002c 1A60     		str	r2, [r3]
 138:.//SYSTEM/delay.c **** 	SysTick->VAL =0X00;       //清空计数器	  	    
 163              		.loc 1 138 0
 164 002e 0022     		movs	r2, #0
 165 0030 9A60     		str	r2, [r3, #8]
 166 0032 7047     		bx	lr
 167              	.L12:
 168              		.align	2
 169              	.L11:
 170 0034 00000000 		.word	.LANCHOR1
 171 0038 10E000E0 		.word	-536813552
 172              		.cfi_endproc
 173              	.LFE114:
 175              		.section	.text.delay_ms,"ax",%progbits
 176              		.align	2
 177              		.global	delay_ms
 178              		.thumb
 179              		.thumb_func
 181              	delay_ms:
 182              	.LFB115:
 139:.//SYSTEM/delay.c **** } 
 140:.//SYSTEM/delay.c **** //延时nms 
 141:.//SYSTEM/delay.c **** //nms:0~65535
 142:.//SYSTEM/delay.c **** void delay_ms(u16 nms)
 143:.//SYSTEM/delay.c **** {	 	 
 183              		.loc 1 143 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              	.LVL11:
 188 0000 38B5     		push	{r3, r4, r5, lr}
 189              	.LCFI1:
 190              		.cfi_def_cfa_offset 16
 191              		.cfi_offset 3, -16
 192              		.cfi_offset 4, -12
 193              		.cfi_offset 5, -8
 194              		.cfi_offset 14, -4
 144:.//SYSTEM/delay.c **** 	u8 repeat=nms/540;	//这里用540,是考虑到某些客户可能超频使用,
 195              		.loc 1 144 0
 196 0002 0C4A     		ldr	r2, .L18
 197 0004 A2FB0032 		umull	r3, r2, r2, r0
 198 0008 530A     		lsrs	r3, r2, #9
 199 000a DCB2     		uxtb	r4, r3
 200              	.LVL12:
 145:.//SYSTEM/delay.c **** 						//比如超频到248M的时候,delay_xms最大只能延时541ms左右了
 146:.//SYSTEM/delay.c **** 	u16 remain=nms%540;
 201              		.loc 1 146 0
 202 000c 4FF40775 		mov	r5, #540
 203 0010 05FB1303 		mls	r3, r5, r3, r0
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 7


 204 0014 9DB2     		uxth	r5, r3
 205              	.LVL13:
 147:.//SYSTEM/delay.c **** 	while(repeat)
 206              		.loc 1 147 0
 207 0016 05E0     		b	.L14
 208              	.LVL14:
 209              	.L15:
 148:.//SYSTEM/delay.c **** 	{
 149:.//SYSTEM/delay.c **** 		delay_xms(540);
 210              		.loc 1 149 0
 211 0018 4FF40770 		mov	r0, #540
 212 001c FFF7FEFF 		bl	delay_xms
 213              	.LVL15:
 150:.//SYSTEM/delay.c **** 		repeat--;
 214              		.loc 1 150 0
 215 0020 013C     		subs	r4, r4, #1
 216              	.LVL16:
 217 0022 E4B2     		uxtb	r4, r4
 218              	.LVL17:
 219              	.L14:
 147:.//SYSTEM/delay.c **** 	while(repeat)
 220              		.loc 1 147 0
 221 0024 002C     		cmp	r4, #0
 222 0026 F7D1     		bne	.L15
 151:.//SYSTEM/delay.c **** 	}
 152:.//SYSTEM/delay.c **** 	if(remain)delay_xms(remain);
 223              		.loc 1 152 0
 224 0028 15B1     		cbz	r5, .L13
 225              		.loc 1 152 0 is_stmt 0 discriminator 1
 226 002a 2846     		mov	r0, r5
 227 002c FFF7FEFF 		bl	delay_xms
 228              	.LVL18:
 229              	.L13:
 230 0030 38BD     		pop	{r3, r4, r5, pc}
 231              	.LVL19:
 232              	.L19:
 233 0032 00BF     		.align	2
 234              	.L18:
 235 0034 49D6B9F2 		.word	-222702007
 236              		.cfi_endproc
 237              	.LFE115:
 239              		.section	.bss.fac_us,"aw",%nobits
 240              		.set	.LANCHOR0,. + 0
 243              	fac_us:
 244 0000 00       		.space	1
 245              		.section	.bss.fac_ms,"aw",%nobits
 246              		.align	1
 247              		.set	.LANCHOR1,. + 0
 250              	fac_ms:
 251 0000 0000     		.space	2
 252              		.text
 253              	.Letext0:
 254              		.file 2 "/Users/ertuil/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 255              		.file 3 "/Users/ertuil/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 256              		.file 4 "CORE/core_cm4.h"
 257              		.file 5 "USER/stm32f4xx.h"
 258              		.file 6 "FWLIB/inc/misc.h"
ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 8


ARM GAS  /var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 delay.c
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:22     .text.delay_init:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:27     .text.delay_init:0000000000000000 delay_init
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:60     .text.delay_init:0000000000000024 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:66     .text.delay_us:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:71     .text.delay_us:0000000000000000 delay_us
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:115    .text.delay_us:0000000000000034 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:121    .text.delay_xms:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:126    .text.delay_xms:0000000000000000 delay_xms
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:170    .text.delay_xms:0000000000000034 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:176    .text.delay_ms:0000000000000000 $t
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:181    .text.delay_ms:0000000000000000 delay_ms
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:235    .text.delay_ms:0000000000000034 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:243    .bss.fac_us:0000000000000000 fac_us
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:244    .bss.fac_us:0000000000000000 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:246    .bss.fac_ms:0000000000000000 $d
/var/folders/v3/pl5z0pl12fx5br3g9j_y4ffr0000gn/T//ccsYTYsK.s:250    .bss.fac_ms:0000000000000000 fac_ms
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SysTick_CLKSourceConfig
